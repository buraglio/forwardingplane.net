<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>
    IPv6 on ForwardingPlane.net
    
    </title>
    <link>https://forwardingplane.net/tags/ipv6/</link>
    <description>Recent content 
    
    in IPv6 on ForwardingPlane.net
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <copyright>Copyright (c) 2019, all rights reserved.</copyright>
    <lastBuildDate>Sun, 31 Mar 2019 17:35:10 +0000</lastBuildDate>
    
    
        <atom:link href="https://forwardingplane.net/tags/ipv6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Soap Box: Mikrotik &#34;IPv6 Apocalypse&#34;, or maybe not.</title>
      <link>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</link>
      <pubDate>Sun, 31 Mar 2019 17:35:10 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</guid>
      <description>

&lt;p&gt;Over the last few days there has been a &lt;em&gt;&lt;strong&gt;huge&lt;/strong&gt;&lt;/em&gt; amount of FUD and panic surrounding two as-yet-to-be-published CVEs (found &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19298&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19299&#34;&gt;here&lt;/a&gt;) related to Mikrotik&amp;rsquo;s IPv6 implementation.It is my opinion that this entire process has been poorly handled, and that the community involved tends to be fairly sensitive to issues such as, and the cloak and dagger nature of the two issues has only exacerbated it. Mikrotik, as a company, is well known for being terse in their responses and tight lipped with their internal workings and dealings with these kinds of issues. I take that as a given, that’s their business and realistically we’re entitled to know exactly none of that information, even if it would be nice to have it. The history behind this is discouraging, the original discovery was quite some time ago with reports dating back to 2013, and the person who originally uncovered the issues did so upwards of a year ago, bringing them to Mikrotik at that time, as can be seen in this &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=125841&amp;amp;p=654116&amp;amp;hilit=ndpexhaust26#p654116&#34;&gt;thread&lt;/a&gt;. Now, anyone with a passing knowledge of pen testing or IPv6 device load testing can trivially put together the information needed to decipher the problem and replicate it, neither are exactly complicated or &lt;a href=&#34;https://insinuator.net/2013/03/ipv6-neighbor-cache-exhaustion-attacks-risk-assessment-mitigation-strategies-part-1/&#34;&gt;new&lt;/a&gt;. Both can be done in literally one line of &lt;a href=&#34;https://tools.kali.org/information-gathering/thc-ipv6&#34;&gt;common, open source toolkits.&lt;/a&gt; The issues are not magical and are not even esoteric or cryptic. They are very straightforward, and by reading the threads and understanding how things like route caches and &lt;a href=&#34;https://en.wikipedia.org/wiki/Neighbor_Discovery_Protocol&#34;&gt;neighbor discovery&lt;/a&gt; work, they become very clear. Since this is IPv6 related I am very interested in it because I feel that WISPs and emerging markets are an excellent environment for moving IPv6 forward, and the equipment and mindset involved makes that fairly straightforward. Reverse engineering these given the information available is pretty straightforward, and &lt;a href=&#34;https://www.iparchitechs.com/&#34;&gt;folks other than me have done it&lt;/a&gt; too. I personally do not consider either of these a security vulnerability or a bug, per se. They’re both the result of a short sighted protocol implementation resulting in a very acute, unfortunate event. With the benefit of hindsight, and as an outsider, I can only wonder if this had been handled differently (i.e. not framed as a critical security vulnerability but rather a broken protocol), if the hysteria that resulted could have been quelled. On a &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=147048&amp;amp;start=50&#34;&gt;particular forum thread,&lt;/a&gt; this was likened to the discovery of the “ping of death”, and that feels like a good analogy to me.  It probably should have been handled that way. So, I will post my .02 as to how this kind of even can be handled in the future, in case there is no better process to work with: 1. Involve the vendor early. 2. Involve a trusted third party to validate the result. It’s very easy to miss trees when you’re stuck in a forest. 3rd party validation is pretty important either way as it proves a problem can be repeated independently. 3. Disclose the environment hardware, in detail, that was used to test and confirm the the issue in. 4. Have both validated it with said trusted, embargoed outside source(s). Again, ideally one is the vendor. 5. If unable to define and at least indicate that there is a remediation, leverage outside trusted source to &lt;strong&gt;make sure that’s not possible&lt;/strong&gt;. In this case, that seems to be kept between the person who discovered it and the vendor, which as discussed above has a track record of being pretty closed off. For this particular issue and platform, one can monitor the IPv6 route-cacheing near real-time, here is the command to do it at 1 second intervals```
[buraglio@gw] &amp;gt; /ipv6 route cache print interval=1
cache-size: 190max-cache-size: 1024000&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34; data-lang=&#34;The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34;&gt;/ipv6 firewall filter
add action=drop chain=forward connection-mark=drop connection-state=new
/ipv6 firewall mangle
add action=accept chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 limit=2,5:packet
add action=mark-connection chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 new-connection-mark=drop passthrough=yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for those more interested in the actual process, here is a video demonstrating the basic route-cache issue (commands, although very easy to figure out are obfuscated)&lt;/p&gt;

&lt;p&gt;Mikrotik has released a fix as of this morning (4/1/2019), although it is currently beta. ROS 6.45 addresses both the route cache and the neighbor table issue. More details on the discovery will be &lt;a href=&#34;https://indico.uknof.org.uk/event/46/contributions/speakers&#34;&gt;disclosed at the UKNOF conference&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;my-take&#34;&gt;My take:&lt;/h4&gt;

&lt;p&gt;A problem like this that is as egregious as described needs to be independently validated and ideally a remediation found before disclosure. If a mitigation strategy does not exist, the $vendor takes responsibility by default and realistically, nothing can be done until they fix it. It may also be disclosed as a zero-day-style, weaponized tactic. Obviously that is the worst case. The real point is that we’re a community, and we need to build the trust frameworks to work together on issues such as this without pointing fingers or running around with our hands waving. This behavior is, sadly, pretty easy to re-create. There is an old thread that implies some of this was triggered by &amp;ldquo;real traffic&amp;rdquo;, and I have definitely seen an uptick in ipv6 scanning that impacts major vendor router platforms to the point that they get salty about traffic flows and spike CPUs. This feels pretty darned similar, but not the catastrophic event horizon it&amp;rsquo;s being played out to be. It&amp;rsquo;s still bad, it stinks, and it&amp;rsquo;s definitely been handled in a way that is less than optimal. I would also like to point out a few things since there has been a fair amount of hair on fire panic. I realize I am being a tad pedantic, but it&amp;rsquo;s important to identify things correctly in order to handle them in the correct manner. This is not a security vulnerability as I would describe it. There is no remote or local execution of code, no raised privileges, no mechanism of compromise. I don&amp;rsquo;t think this is a software bug, either. It&amp;rsquo;s close, but in reality what this is is a poorly implemented protocol that had what I can only believe was a poverty of testing before release and as such allows for a remotely triggered denial of service. Denial of service isn&amp;rsquo;t necessarily malicious, it just means exactly what it says: service is denied. As mentioned earlier in the thread, this is like the old ping of death issue: a poorly executed stack. I&amp;rsquo;d like to know who has executed this in the wild and how far back this goes in their code train, references go back as far as 2013, but I suspect they go back to the original support.&lt;/p&gt;

&lt;h4 id=&#34;update&#34;&gt;-&amp;mdash; UPDATE&lt;/h4&gt;

&lt;p&gt;Mikrotik has addressed this issue with the release of ROS 6.44.2. The prior methodologies no longer exhaust resources and reload devices, as can be seen here&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Soap Box: Mikrotik &#34;IPv6 Apocalypse&#34;, or maybe not.</title>
      <link>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</link>
      <pubDate>Sun, 31 Mar 2019 17:35:10 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</guid>
      <description>

&lt;p&gt;Over the last few days there has been a &lt;em&gt;&lt;strong&gt;huge&lt;/strong&gt;&lt;/em&gt; amount of FUD and panic surrounding two as-yet-to-be-published CVEs (found &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19298&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19299&#34;&gt;here&lt;/a&gt;) related to Mikrotik&amp;rsquo;s IPv6 implementation.It is my opinion that this entire process has been poorly handled, and that the community involved tends to be fairly sensitive to issues such as, and the cloak and dagger nature of the two issues has only exacerbated it. Mikrotik, as a company, is well known for being terse in their responses and tight lipped with their internal workings and dealings with these kinds of issues. I take that as a given, that’s their business and realistically we’re entitled to know exactly none of that information, even if it would be nice to have it. The history behind this is discouraging, the original discovery was quite some time ago with reports dating back to 2013, and the person who originally uncovered the issues did so upwards of a year ago, bringing them to Mikrotik at that time, as can be seen in this &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=125841&amp;amp;p=654116&amp;amp;hilit=ndpexhaust26#p654116&#34;&gt;thread&lt;/a&gt;. Now, anyone with a passing knowledge of pen testing or IPv6 device load testing can trivially put together the information needed to decipher the problem and replicate it, neither are exactly complicated or &lt;a href=&#34;https://insinuator.net/2013/03/ipv6-neighbor-cache-exhaustion-attacks-risk-assessment-mitigation-strategies-part-1/&#34;&gt;new&lt;/a&gt;. Both can be done in literally one line of &lt;a href=&#34;https://tools.kali.org/information-gathering/thc-ipv6&#34;&gt;common, open source toolkits.&lt;/a&gt; The issues are not magical and are not even esoteric or cryptic. They are very straightforward, and by reading the threads and understanding how things like route caches and &lt;a href=&#34;https://en.wikipedia.org/wiki/Neighbor_Discovery_Protocol&#34;&gt;neighbor discovery&lt;/a&gt; work, they become very clear. Since this is IPv6 related I am very interested in it because I feel that WISPs and emerging markets are an excellent environment for moving IPv6 forward, and the equipment and mindset involved makes that fairly straightforward. Reverse engineering these given the information available is pretty straightforward, and &lt;a href=&#34;https://www.iparchitechs.com/&#34;&gt;folks other than me have done it&lt;/a&gt; too. I personally do not consider either of these a security vulnerability or a bug, per se. They’re both the result of a short sighted protocol implementation resulting in a very acute, unfortunate event. With the benefit of hindsight, and as an outsider, I can only wonder if this had been handled differently (i.e. not framed as a critical security vulnerability but rather a broken protocol), if the hysteria that resulted could have been quelled. On a &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=147048&amp;amp;start=50&#34;&gt;particular forum thread,&lt;/a&gt; this was likened to the discovery of the “ping of death”, and that feels like a good analogy to me.  It probably should have been handled that way. So, I will post my .02 as to how this kind of even can be handled in the future, in case there is no better process to work with: 1. Involve the vendor early. 2. Involve a trusted third party to validate the result. It’s very easy to miss trees when you’re stuck in a forest. 3rd party validation is pretty important either way as it proves a problem can be repeated independently. 3. Disclose the environment hardware, in detail, that was used to test and confirm the the issue in. 4. Have both validated it with said trusted, embargoed outside source(s). Again, ideally one is the vendor. 5. If unable to define and at least indicate that there is a remediation, leverage outside trusted source to &lt;strong&gt;make sure that’s not possible&lt;/strong&gt;. In this case, that seems to be kept between the person who discovered it and the vendor, which as discussed above has a track record of being pretty closed off. For this particular issue and platform, one can monitor the IPv6 route-cacheing near real-time, here is the command to do it at 1 second intervals```
[buraglio@gw] &amp;gt; /ipv6 route cache print interval=1
cache-size: 190max-cache-size: 1024000&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34; data-lang=&#34;The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34;&gt;/ipv6 firewall filter
add action=drop chain=forward connection-mark=drop connection-state=new
/ipv6 firewall mangle
add action=accept chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 limit=2,5:packet
add action=mark-connection chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 new-connection-mark=drop passthrough=yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for those more interested in the actual process, here is a video demonstrating the basic route-cache issue (commands, although very easy to figure out are obfuscated)&lt;/p&gt;

&lt;p&gt;Mikrotik has released a fix as of this morning (4/1/2019), although it is currently beta. ROS 6.45 addresses both the route cache and the neighbor table issue. More details on the discovery will be &lt;a href=&#34;https://indico.uknof.org.uk/event/46/contributions/speakers&#34;&gt;disclosed at the UKNOF conference&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;my-take&#34;&gt;My take:&lt;/h4&gt;

&lt;p&gt;A problem like this that is as egregious as described needs to be independently validated and ideally a remediation found before disclosure. If a mitigation strategy does not exist, the $vendor takes responsibility by default and realistically, nothing can be done until they fix it. It may also be disclosed as a zero-day-style, weaponized tactic. Obviously that is the worst case. The real point is that we’re a community, and we need to build the trust frameworks to work together on issues such as this without pointing fingers or running around with our hands waving. This behavior is, sadly, pretty easy to re-create. There is an old thread that implies some of this was triggered by &amp;ldquo;real traffic&amp;rdquo;, and I have definitely seen an uptick in ipv6 scanning that impacts major vendor router platforms to the point that they get salty about traffic flows and spike CPUs. This feels pretty darned similar, but not the catastrophic event horizon it&amp;rsquo;s being played out to be. It&amp;rsquo;s still bad, it stinks, and it&amp;rsquo;s definitely been handled in a way that is less than optimal. I would also like to point out a few things since there has been a fair amount of hair on fire panic. I realize I am being a tad pedantic, but it&amp;rsquo;s important to identify things correctly in order to handle them in the correct manner. This is not a security vulnerability as I would describe it. There is no remote or local execution of code, no raised privileges, no mechanism of compromise. I don&amp;rsquo;t think this is a software bug, either. It&amp;rsquo;s close, but in reality what this is is a poorly implemented protocol that had what I can only believe was a poverty of testing before release and as such allows for a remotely triggered denial of service. Denial of service isn&amp;rsquo;t necessarily malicious, it just means exactly what it says: service is denied. As mentioned earlier in the thread, this is like the old ping of death issue: a poorly executed stack. I&amp;rsquo;d like to know who has executed this in the wild and how far back this goes in their code train, references go back as far as 2013, but I suspect they go back to the original support.&lt;/p&gt;

&lt;h4 id=&#34;update&#34;&gt;-&amp;mdash; UPDATE&lt;/h4&gt;

&lt;p&gt;Mikrotik has addressed this issue with the release of ROS 6.44.2. The prior methodologies no longer exhaust resources and reload devices, as can be seen here&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Q&amp;A for ISPs</title>
      <link>https://forwardingplane.net/post/ipv6-qa-for-isps/</link>
      <pubDate>Sat, 15 Dec 2018 01:21:09 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-qa-for-isps/</guid>
      <description>&lt;p&gt;As a follow on to my post on &lt;a href=&#34;https://www.forwardingplane.net/2018/09/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/&#34;&gt;why small to medium ISPs should deploy IPv6&lt;/a&gt; and the associated &lt;a href=&#34;https://blog.apnic.net/2018/12/13/three-reasons-why-ipv6-is-worth-the-effort/&#34;&gt;APNIC blog post,&lt;/a&gt; I have begun to compile a list of commonly asked questions IPv6 and their answers in relation to how a small to medium sized ISP can (and should) deploy IPv6. Expect this list to change and grow over time. &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q: Is there DHCP in IPv6? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;p&gt;A:  There are &lt;a href=&#34;https://en.wikipedia.org/wiki/DHCPv6&#34;&gt;multiple DHCPv6 implementations&lt;/a&gt;, the one I like to use is isc-dhcpd as it tends to have the best standard support, is incredibly feature rich and well documented and is very scalable, but there are multiple options. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one know what IP address the CPE has?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: DUID (DHCP Unique Identifier), PPPoE, etc. There are several ways. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one perform traffic shaping for the entire /64 (or /48, or other nibble boundary block) assigned to the customer?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Don’t shape on L3, it doesn’t scale. Shape on L2 at the CPE or use PPPoE. &lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q) Can a dynamic CPE environment where devices can pull addresses with minimal input and work from the provider still work?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Yes, DHCPv6 and &lt;a href=&#34;https://en.wikipedia.org/wiki/Prefix_delegation&#34;&gt;DHCPv6-PD&lt;/a&gt; handle these functions. There are well traveled and well vetted how-to’s for this. It is how the large incumbent providers work, regardless of delivery last mile (DSL, DOCSIS, Fixed wireless, etc.) &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does the host configure a host address? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;p&gt;A: Most devices will use what is called SLAAC. Addresses are auto-generated based on a MAC. A given host will have multiple IPv6 addresses and this is normal. There will also be the following on a HOST:&lt;br /&gt;
A link local address on every interface (starts with fe80: and is used for any communication on the same L2 segment)&lt;br /&gt;
A privacy address that rotates which much of the traffic will be worked from&lt;br /&gt;
An EUI-64 address (the auto configured address)&lt;br /&gt;
Potentially, but only when configured:&lt;br /&gt;
A DHCPv6 assigned address. &lt;br /&gt;
A Static Address&lt;/p&gt;

&lt;p&gt;On the ISP side, you’ll see any or all of the following:&lt;br /&gt;
A link local address (starts with fe80:)&lt;br /&gt;
An EUI-64 address&lt;br /&gt;
A static address&lt;br /&gt;
A prefix delegated prefix&lt;/p&gt;

&lt;p&gt;———&lt;br /&gt;
Other commonly questions and advice&lt;/p&gt;

&lt;p&gt;Come up with a reasonable IPv6 address plan before you start - work through it as you can. Start with your backbone&lt;br /&gt;
You will no longer memorize addresses (which you should not do anyway), instead, do two things:&lt;/p&gt;

&lt;p&gt;Think of all prefixes like you would consider a unique IPv4 address 4.2.2.&lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt; ==2001:db8:44:22::/64&lt;br /&gt;
IPv6 addresses are written with the CIDR prefix (see above)&lt;/p&gt;

&lt;p&gt;Use DNS for everything you can - an IPAM like NetBox is your friend&lt;br /&gt;
It’s ok if your customers prefix delegation does not have reverse DNS&lt;br /&gt;
It’s ok to publicly address your infrastructure with IPv6. Use a single /48 dedicated for all infrastructure and then create an ACL at the network border to limit access&lt;br /&gt;
Public addresses for your customers are ok. &lt;br /&gt;
There is no NAT as in the IPv4 world, and there should not be NAT for IPv6. Period. &lt;br /&gt;
Yes, you want to dual-stack. It’s ok to have RFC1918 space plus public IPv6. In fact, that’s the most prevalent model (look at your cell phone)&lt;br /&gt;
You will have devices that won’t do IPv6. That’s expected. &lt;br /&gt;
Yes, you can do IPv6 only, but it’s significantly harder to manage than a standard dual stack network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Q&amp;A for ISPs</title>
      <link>https://forwardingplane.net/post/ipv6-qa-for-isps/</link>
      <pubDate>Sat, 15 Dec 2018 01:21:09 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-qa-for-isps/</guid>
      <description>&lt;p&gt;As a follow on to my post on &lt;a href=&#34;https://www.forwardingplane.net/2018/09/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/&#34;&gt;why small to medium ISPs should deploy IPv6&lt;/a&gt; and the associated &lt;a href=&#34;https://blog.apnic.net/2018/12/13/three-reasons-why-ipv6-is-worth-the-effort/&#34;&gt;APNIC blog post,&lt;/a&gt; I have begun to compile a list of commonly asked questions IPv6 and their answers in relation to how a small to medium sized ISP can (and should) deploy IPv6. Expect this list to change and grow over time. &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q: Is there DHCP in IPv6? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;p&gt;A:  There are &lt;a href=&#34;https://en.wikipedia.org/wiki/DHCPv6&#34;&gt;multiple DHCPv6 implementations&lt;/a&gt;, the one I like to use is isc-dhcpd as it tends to have the best standard support, is incredibly feature rich and well documented and is very scalable, but there are multiple options. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one know what IP address the CPE has?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: DUID (DHCP Unique Identifier), PPPoE, etc. There are several ways. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one perform traffic shaping for the entire /64 (or /48, or other nibble boundary block) assigned to the customer?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Don’t shape on L3, it doesn’t scale. Shape on L2 at the CPE or use PPPoE. &lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q) Can a dynamic CPE environment where devices can pull addresses with minimal input and work from the provider still work?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Yes, DHCPv6 and &lt;a href=&#34;https://en.wikipedia.org/wiki/Prefix_delegation&#34;&gt;DHCPv6-PD&lt;/a&gt; handle these functions. There are well traveled and well vetted how-to’s for this. It is how the large incumbent providers work, regardless of delivery last mile (DSL, DOCSIS, Fixed wireless, etc.) &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does the host configure a host address? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;p&gt;A: Most devices will use what is called SLAAC. Addresses are auto-generated based on a MAC. A given host will have multiple IPv6 addresses and this is normal. There will also be the following on a HOST:&lt;br /&gt;
A link local address on every interface (starts with fe80: and is used for any communication on the same L2 segment)&lt;br /&gt;
A privacy address that rotates which much of the traffic will be worked from&lt;br /&gt;
An EUI-64 address (the auto configured address)&lt;br /&gt;
Potentially, but only when configured:&lt;br /&gt;
A DHCPv6 assigned address. &lt;br /&gt;
A Static Address&lt;/p&gt;

&lt;p&gt;On the ISP side, you’ll see any or all of the following:&lt;br /&gt;
A link local address (starts with fe80:)&lt;br /&gt;
An EUI-64 address&lt;br /&gt;
A static address&lt;br /&gt;
A prefix delegated prefix&lt;/p&gt;

&lt;p&gt;———&lt;br /&gt;
Other commonly questions and advice&lt;/p&gt;

&lt;p&gt;Come up with a reasonable IPv6 address plan before you start - work through it as you can. Start with your backbone&lt;br /&gt;
You will no longer memorize addresses (which you should not do anyway), instead, do two things:&lt;/p&gt;

&lt;p&gt;Think of all prefixes like you would consider a unique IPv4 address 4.2.2.&lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt; ==2001:db8:44:22::/64&lt;br /&gt;
IPv6 addresses are written with the CIDR prefix (see above)&lt;/p&gt;

&lt;p&gt;Use DNS for everything you can - an IPAM like NetBox is your friend&lt;br /&gt;
It’s ok if your customers prefix delegation does not have reverse DNS&lt;br /&gt;
It’s ok to publicly address your infrastructure with IPv6. Use a single /48 dedicated for all infrastructure and then create an ACL at the network border to limit access&lt;br /&gt;
Public addresses for your customers are ok. &lt;br /&gt;
There is no NAT as in the IPv4 world, and there should not be NAT for IPv6. Period. &lt;br /&gt;
Yes, you want to dual-stack. It’s ok to have RFC1918 space plus public IPv6. In fact, that’s the most prevalent model (look at your cell phone)&lt;br /&gt;
You will have devices that won’t do IPv6. That’s expected. &lt;br /&gt;
Yes, you can do IPv6 only, but it’s significantly harder to manage than a standard dual stack network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>As a small to medium ISP, why you should deploy IPv6</title>
      <link>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</link>
      <pubDate>Sat, 01 Sep 2018 16:47:23 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</guid>
      <description>

&lt;p&gt;IPv6 has been a crusade of mine for well over a decade. Wether it is teaching IPv6 workshops, offering advice to new users, answering questions, or evangelizing it ad nauseam, it is an important topic to me. The ISP world holds a special place in my heart since a good deal of my early experience came from building or assisting regional ISPs. Recently I had a fun opportunity to talk about deploying IPv6 on &lt;a href=&#34;http://thebrotherswisp.com/&#34;&gt;The Brothers WISP podcast&lt;/a&gt;. This was a really fun experience, and if you&amp;rsquo;re looking at deploying v6, take a listen (or watch) to this - it should give you the basics or at the very least a place to start.  &lt;/p&gt;

&lt;h3 id=&#34;links-to-discussed-topics&#34;&gt;Links to discussed topics&lt;/h3&gt;

&lt;p&gt;IPv4/IPv6 subnetting tool: &lt;a href=&#34;https://github.com/sii/sipcalc&#34;&gt;sipcalc&lt;/a&gt; &lt;a href=&#34;http://sipcalc.tools.uebi.net/&#34;&gt;Online version&lt;/a&gt; Great, Free training for IPv6, plus a free T-Shirt if you complete it. &lt;a href=&#34;https://ipv6.he.net/certification/&#34;&gt;HE IPv6 certification&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_DHCP_server_software&#34;&gt;DHCPv6 alternatives&lt;/a&gt; (YES, it exists) Looking to see if folks are tunneling using &lt;a href=&#34;https://tools.ietf.org/html/rfc3068&#34;&gt;6to4&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Teredo_tunneling&#34;&gt;Teredo&lt;/a&gt; in your network? Do netflow searches for these anycast addresses: 192.88.99.0/24 (6to4) 65.54.227.120 (Teredo) &lt;a href=&#34;https://howdoesinternetwork.com/2013/slaac&#34;&gt;Information on SLAAC&lt;/a&gt; (Auto-configuration) You might also be interested in a &lt;a href=&#34;https://www.youtube.com/watch?v=c8m2Sjre6t4&amp;amp;feature=youtu.be&#34;&gt;DNS podcast&lt;/a&gt; I did with Brothers WISP a while ago.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>As a small to medium ISP, why you should deploy IPv6</title>
      <link>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</link>
      <pubDate>Sat, 01 Sep 2018 16:47:23 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</guid>
      <description>

&lt;p&gt;IPv6 has been a crusade of mine for well over a decade. Wether it is teaching IPv6 workshops, offering advice to new users, answering questions, or evangelizing it ad nauseam, it is an important topic to me. The ISP world holds a special place in my heart since a good deal of my early experience came from building or assisting regional ISPs. Recently I had a fun opportunity to talk about deploying IPv6 on &lt;a href=&#34;http://thebrotherswisp.com/&#34;&gt;The Brothers WISP podcast&lt;/a&gt;. This was a really fun experience, and if you&amp;rsquo;re looking at deploying v6, take a listen (or watch) to this - it should give you the basics or at the very least a place to start.  &lt;/p&gt;

&lt;h3 id=&#34;links-to-discussed-topics&#34;&gt;Links to discussed topics&lt;/h3&gt;

&lt;p&gt;IPv4/IPv6 subnetting tool: &lt;a href=&#34;https://github.com/sii/sipcalc&#34;&gt;sipcalc&lt;/a&gt; &lt;a href=&#34;http://sipcalc.tools.uebi.net/&#34;&gt;Online version&lt;/a&gt; Great, Free training for IPv6, plus a free T-Shirt if you complete it. &lt;a href=&#34;https://ipv6.he.net/certification/&#34;&gt;HE IPv6 certification&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_DHCP_server_software&#34;&gt;DHCPv6 alternatives&lt;/a&gt; (YES, it exists) Looking to see if folks are tunneling using &lt;a href=&#34;https://tools.ietf.org/html/rfc3068&#34;&gt;6to4&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Teredo_tunneling&#34;&gt;Teredo&lt;/a&gt; in your network? Do netflow searches for these anycast addresses: 192.88.99.0/24 (6to4) 65.54.227.120 (Teredo) &lt;a href=&#34;https://howdoesinternetwork.com/2013/slaac&#34;&gt;Information on SLAAC&lt;/a&gt; (Auto-configuration) You might also be interested in a &lt;a href=&#34;https://www.youtube.com/watch?v=c8m2Sjre6t4&amp;amp;feature=youtu.be&#34;&gt;DNS podcast&lt;/a&gt; I did with Brothers WISP a while ago.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trouble with Tribbles .....errr NAT</title>
      <link>https://forwardingplane.net/post/trouble-with-tribbles-errr-nat/</link>
      <pubDate>Mon, 16 Jul 2018 10:24:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/trouble-with-tribbles-errr-nat/</guid>
      <description>

&lt;p&gt;As a follow up to my &lt;a href=&#34;https://www.forwardingplane.net/2018/06/nat-discussions/&#34;&gt;last post&lt;/a&gt;, I wanted to dive a little deeper into the world of address translation and to suss out some of the more compelling details.&lt;/p&gt;

&lt;p&gt;As I&amp;rsquo;ve said on many occasions, it pains me to see NAT referenced as a security mechanism. That said, where PNAT can be beneficial is in an overall privacy strategy, however, even that is comparatively low value and given the current state of global IPv4 allocations, arguably a detriment to usability - we’ll get to that - before we do, it is important to understand what ’NAT” as we call it today actually is, and to do that we need to explain all of the types of address translation (yes, there are several). When what was designed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Static, or one-to-one NAT&lt;/strong&gt; This is the original and most simple. It is comprised of an internal and corresponding external IP address. Every machine on the network still needs a public IP address for external mapping with this model. It was originally designed to solve the problem NAT was built to address: address translation between two networks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic NAT&lt;/strong&gt; This is a bit of a hybrid of static and the next type, NAPT. In this model, a NAT router maintains a set of external IPv4 address and cynically allocates one to internal addressed for outbound communication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network Address port translation (NAPT)&lt;/strong&gt; This is what most folks will mean when they say “NAT”. Really, this is address masquerading with port translation. This is what is often confused with a security tool, given that it provides a low level of obfuscation from external scanning and “hides” the hosts behind an externally facing address. This mechanism is typically conflated with stateful firewall implementation, which is not inclusive of this implementation.&lt;/p&gt;

&lt;p&gt;Because of the enterprise expectation of a modern UTM, NAPT is unfortunately used interchangeably by many security professionals. What NAPT actually buys is a mechanism for obfuscating many hosts to a smaller number of addresses, typically on the same device. By removing a single data reconnaissance vector (scanning of ipv4) you’re actually providing a new one that’s much easier to exploit (state table exhaustion). While it does work to prevent inbound scanning, that’s really all it does other than allow for network and port translation, it should not be expected to provide anything more than simple obscuring of the internal data. NAPT as security is primarily predicated on the notion that your source address is critically important and should be obscured. While this is true to a certain extent, this believe is somewhat antiquated and should be treated as such. Tracking via source address is still completely doable with simple tools, and geolocation is completely available (assuming it is correctly registered) based on the NAPT address. This is true of IPv4 and IPv6. What NAT does accomplish is prevention of scanning and external recon of potentially sensitive systems. That’s it. I would also assert that this over-stated sense of usefulness users a false sense of protection and encourages a relaxed diligence on hardening end hosts. The same level of protection can very easily be accomplished on a public IPv4 or IPv6 prefix with a simple stateful firewall or host based firewall. What NAPT buys is two fold:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Extension of IPv4 resources&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A poor shortcut to resource protection&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If sized appropriately, the expense of this is a very under-stated price tag&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A sizable cost for right-sized UTM&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Acceptance of the risk of a state table exhaustion DoS event&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Insecure internal resources, IoT devices, or BYOD nodes that are compromised or vulnerable.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without proper east-west filtering and a tight egress policy, this sheen of protection becomes significantly less useful. Add in the likelihood of &lt;a href=&#34;https://en.wikipedia.org/wiki/Carrier-grade_NAT&#34;&gt;carrier grade NAT (CGNAT)&lt;/a&gt; due to extreme &lt;a href=&#34;https://en.wikipedia.org/wiki/IPv4_address_exhaustion&#34;&gt;exhaustion of IPv4 resource&lt;/a&gt;, and you compound the limits with additional operational and troubleshooting overhead. IPv6, while the correct next step, does solve a large part of the issues, but not without it’s own [mostly one-time] costs, and given the large uptake in IPv6 from both the client and content perspectives, it would behoove every organization to get their IPv6 strategy sorted and underway.&lt;/p&gt;

&lt;h3 id=&#34;my-take&#34;&gt;&lt;strong&gt;My take&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;In the olden times of winnuke, providing a layer of confusion between the delicious caramel center of your network resource and the dragons of the internet was pretty important. The tracking mechanisms and scanning was mostly thwarted by the thin candy shell of the NAPT device. While this is still a very important aspect in your network architecture and defense in depth strategy, understanding the real risks and true value is important. The belief that NAPT provides your security (or that it is even a security tool at all) is somewhat misguided. With regard to privacy, the real threats lie in the metadata collection, and unless you are high profile or have a highly targeted business or personal footprint, the security incidents are far more nuanced and often happen at higher layers. In addition, lets not forget that a very, very real threat is not from random poking at our externally facing network resources, but in the social engineering attacks that are readily let right in the door. In addition, there are a number of significant risks that NAPT beings to bear based on it’s use of a state table to track IP to port mappings. All of these details need to be considered and continually revisited for relevance.&lt;/p&gt;

&lt;h3 id=&#34;further-study&#34;&gt;&lt;strong&gt;Further study&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Understanding that this is a very high profile, sensitive, and polarizing subject, additional reading and research is important. A few good white papers detailing shortcomings and misconceptions surrounding NAPT can be found &lt;a href=&#34;https://www.google.com/amp/s/www.calyptix.com/top-threats/ddos-attacks-101-types-targets-motivations/amp/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://f5.com/resources/white-papers/the-myth-of-network-address-translation-as-security&#34;&gt;here&lt;/a&gt;. In addition, &lt;a href=&#34;https://thenetworkcollective.com/&#34;&gt;The Network Collective&lt;/a&gt; invited me back to discuss privacy in networking. What resulted was a very spicy podcasts that really highlights the complexity of privacy as a concept in today&amp;rsquo;s internet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://vimeo.com/272381393&#34;&gt;Ep28 - For The Love Of NAT&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/networkcollective&#34;&gt;Network Collective&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Field Area Networking</title>
      <link>https://forwardingplane.net/post/field-area-networking/</link>
      <pubDate>Fri, 04 May 2018 13:38:15 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/field-area-networking/</guid>
      <description>

&lt;p&gt;It&amp;rsquo;s no secret that RF technologies and what like to call &amp;ldquo;specialty networking&amp;rdquo; are two of my favorite things in the networking space. &lt;strong&gt;Put them together and it is like chocolate and peanut butter!&lt;/strong&gt; Now, some may not consider Field Area Networking (FAN) to be &amp;ldquo;unconventional&amp;rdquo;, but it certainly falls well outside of the space of what is typically traditional enterprise networking. That said, Cisco&amp;rsquo;s FAN briefing at &lt;a href=&#34;http://techfieldday.com/event/nfd17/&#34;&gt;Network Field Day 17&lt;/a&gt; really got me excited and thinking about the alternatives for the IoT space. Other than cellular LTE or &lt;a href=&#34;https://www.link-labs.com/blog/what-is-lte-m&#34;&gt;LTE-M&lt;/a&gt;, there are few options for remote IoT devices with limited power draw and bandwidth requirements. So I went down the twisted path of investigating that space, and recently, I recorded a &lt;a href=&#34;https://thenetworkcollective.com/&#34;&gt;Network Collective&lt;/a&gt; short take on the subject, available below. The NFD 17 Cisco FAN briefing that this is based around is also worth a watch - this is really innovative stuff that many of us probably don&amp;rsquo;t think about. &lt;a href=&#34;https://vimeo.com/253197120&#34;&gt;Cisco Innovations for the Field Area Network with Rupak Chandra&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/sfoskett&#34;&gt;Stephen Foskett&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.  &lt;/p&gt;

&lt;h3 id=&#34;nick-s-take&#34;&gt;Nick&amp;rsquo;s take:&lt;/h3&gt;

&lt;p&gt;As we talk about things like cloud migration, automation, orchestration, and security architectures, lets consider the sheer scale of not just IoT networking but the sensor and other industrial networking _&lt;strong&gt;outside&lt;/strong&gt; _of the enterprise space. The sheer number of devices to be managed in these spaces is stupefying, and the transport of the data created by these networks as well as the management of the devices and network elements is a non-trivial detail. Building out networks such as a sensor network has a completely different scope and scale than a stereotypical enterprise or even a carrier service provider network. Keeping in mind just the number of hosts things like addressing schema become a critical part of the architecture (spoiler: you&amp;rsquo;re probably not going to be able to scale IPv4). Power and environmental considerations are also not nearly as squishy as they can be in a nice, controlled data center. Considering those data points, it&amp;rsquo;s pretty clear that there is plenty of interesting stuff happening in both the engineering and security areas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why you don&#39;t need a firewall [how to secure an open perimeter network]</title>
      <link>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</link>
      <pubDate>Mon, 08 Sep 2014 07:30:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</guid>
      <description>&lt;p&gt;I admit that the title was meant to be inflammatory.  However, there are use cases that aren&amp;rsquo;t terribly uncommon where an in-line security appliance is just not the correct tool for the job.  Someone once told me &amp;ldquo;a firewall protects a network like a fuse protects an electrical circuit&amp;rdquo;, and it&amp;rsquo;s mostly a correct statement. Firewall vendors will probably argue this and enterprise folks may discount this as heresy and call for burning me at the stake.  I can say, though, that the use of a firewall, IPS or other inline security appliance has presented many problems in many environments in my years as a network and security engineer and architect.    To that end, there are mechanisms for replacing the functions of a firewall and IPS with other options, which in many cases have a lower capital expense [although they may have a higher &lt;em&gt;initial&lt;/em&gt; operational expense].  I&amp;rsquo;ll outline them here, but before I do I want to re-iterate that NAT (PAT) is not a security tool, it&amp;rsquo;s a translation tool.  Nothing more.  So, I will leave that out.  If you don&amp;rsquo;t have appropriate IPv4 or IPv6 address space some of these things may need adjustments although they are still accomplishable by doing NAT on a border Layer 3 device.     Below is a talk that I gave at BroCon14 that is a rough outline of how to do this, if you don&amp;rsquo;t want to spend 30 minutes listening to me talk about it, the clifs notes are bulleted below, but the context is all in the video so I encourage you to watch it before responding to my post. For those that want to take a look, here is the talk. Here are the bullets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Announce only necessary resources &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One can utilize routing to only expose the pieces of the network that need to be exposed.  If you have a /16 and on;y a /24 needs to be exposed, only announce that prefix.  This is not that different than a typical DMZ.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter access to network, storage and management hardware&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Utilize best practice ingress filtering.  Follow &lt;a href=&#34;http://tools.ietf.org/html/bcp38&#34;&gt;BCP38&lt;/a&gt;. You should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Utilize host based firewalls&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a no-brainer.  Firewall as close to the resource as possible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Employ central host management&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make your life easy.  Cloud providers do it and it&amp;rsquo;s well documented nowadays.  There are &lt;a href=&#34;http://cfengine.com/&#34;&gt;many&lt;/a&gt; &lt;a href=&#34;http://puppetlabs.com/&#34;&gt;options&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Centralize logging and flow data collection&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another no brainer, you should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create baselines for traffic and activity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Data is good.  Knowledge is power.  Baselines are useful for both anomaly detection and forecasting and it&amp;rsquo;s not that hard to do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Deploy and tune IDS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Passive IDS system[s] off of a TAP or SPAN are key to this kind of architecture.  See video for more details but there are a bunch of good options. I prefer &lt;a href=&#34;http://www.bro.org&#34;&gt;Bro IDS&lt;/a&gt; but there are many players both commercial and FOSS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter with black hole routing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;http://www.forwardingplane.net/2011/10/black-hole-routing/&#34; title=&#34;Black Hole routing&#34;&gt;talked about this before&lt;/a&gt;.  Automating this is key to making it function efficiently and it is a fantastic tool.  This can be done with BGP (traditionally) or with something innovative like OpenFlow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Make use of regularly scheduled external vulnerability scanning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a great way to verify your exposure and works for any sized network.  Highly recommended.&lt;/p&gt;

&lt;p&gt;  Clearly this isn&amp;rsquo;t for everyone, and that&amp;rsquo;s ok.  For anyone that has struggled with issues involving security appliances either based on protocol, horsepower or interface speeds, there are options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aging hardware, IPv6 and the growing route table</title>
      <link>https://forwardingplane.net/post/aging-hardware-ipv6-and-the-growing-route-table/</link>
      <pubDate>Wed, 13 Aug 2014 05:00:56 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/aging-hardware-ipv6-and-the-growing-route-table/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;http://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34; title=&#34;BGP tools; troubleshooting and monitoring external routing in a nutshell&#34;&gt;blathered on about BGP&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2013/03/tuning-bgp-installed-ipv6-routes/&#34; title=&#34;Tuning BGP installed IPv6 routes&#34;&gt;forever&lt;/a&gt;.  Say what you will about the venerable protocol, it runs the interwebs, is reliable, extendable and well documented.  I&amp;rsquo;ve also &lt;a href=&#34;http://www.forwardingplane.net/2013/03/my-sdn-soapbox-now-with-ipv6/ &amp;quot;My SDN soapbox (now with IPv6!&#34;&gt;espoused&lt;/a&gt;&amp;rdquo;) &lt;a href=&#34;http://www.forwardingplane.net/2011/07/joint-techs-summer-2011-ipv6-talks/&#34; title=&#34;Joint Techs Summer 2011 IPv6 talks&#34;&gt;ad nauseam&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2011/03/ipv6-features-matrix-for-network-hardware/&#34; title=&#34;IPv6 Features matrix for Network Hardware&#34;&gt;about&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2012/11/and-a-purple-pony/&#34; title=&#34;And a purple pony.&#34;&gt;IPv6&lt;/a&gt;, so none of this [admitted] rant should really be a surprise coming from me. As of 8/12/2014, according to the &lt;a href=&#34;http://www.cidr-report.org/as2.0/#General_Status&#34;&gt;CIRD report&lt;/a&gt; (and many mailing lists), the &lt;a href=&#34;http://en.wikipedia.org/wiki/Default-free_zone&#34;&gt;default free&lt;/a&gt; global ipv4 routing table has reached 512k routes.  This is a milestone from many perspectives, but more importantly, it solidifies the fact that there is a great deal of equipment in critical points in the internet that is out of date and cannot perform as intended in its current configuration or function. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/08/8-12-2014-plot.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/08/8-12-2014-plot.png&#34; alt=&#34;8-12-2014-plot&#34; /&gt;&lt;/a&gt; This is a problem.  This is a problem for old hardware.  This is a problem for anyone that says their border router is &amp;ldquo;good enough&amp;rdquo;, and expects to take a default free table.  It&amp;rsquo;s a problem for anyone that wants to be multihomed on sub-par hardware.  I don&amp;rsquo;t think that many engineers would be surprised at how common this really is because network hardware is expensive, especially appropriate hardware that runs at site borders and in internet backbones, and by nature network engineer want to &amp;ldquo;make things work&amp;rdquo;.  I assert, however, that this may not be the best idea. The increased size of the default free zone has been forecasted for &lt;strong&gt;&lt;em&gt;years,&lt;/em&gt;&lt;/strong&gt;and with the inclusion of the 16k of ipv6 prefixes (&lt;a href=&#34;http://www.forwardingplane.net/2013/08/the-sad-state-of-ipv6-and-why-you-need-to-learn-it/&#34; title=&#34;The sad state of IPv6 and why you need to learn it.&#34;&gt;you are running IPv6&lt;/a&gt;, &lt;strong&gt;&lt;em&gt;right&lt;/em&gt;&lt;/strong&gt;?), resources quickly become exhausted on aging hardware.  This causes a cascading problem.  Forget the odd issues seen by not having enough TCAM to house the entire default free ipv4 table.  That problem is a haymaker swing that was telegraphed &lt;strong&gt;&lt;em&gt;long&lt;/em&gt;&lt;/strong&gt; ago and should have been coming; that ship has sailed. The bigger problem is that in flurrying around to deal with smaller TCAM sizes on gear that should have been replaced years ago, one course of action is to  repartition the TCAM, stripping away space allocated for IPv6 and allocating it to IPv4 in order to remain &amp;ldquo;default free&amp;rdquo; v4 tables.  I know because I&amp;rsquo;ve had to do this.  And it sucked. Personally, I felt a little like a sell out since I was robbing Peter to pay Paul and keep our &amp;ldquo;beloved&amp;rdquo; IPv4 running at the expense of the protocol we should have been migrated to years before but could not due to fear, uncertainty, doubt and, frankly, sheer laziness on the part of executives, developers, vendors and engineers. Blech.  I don not even like typing that.  We, I promise you,  in come cases are prolonging the deployment of IPv6 in favor of keeping v4 working due to this limitation.  And it stinks.  Like a skunk. Dipped in sewage. Wrapped in garbage.  Blown through an onion. It&amp;rsquo;s a banner day, make no mistake.  512k ipv4 routes in the global default free ipv4 table is a milestone.  However, lets not forget that much of the pain involved in expanding the ability to use more v4 would probably have been better served in expanding ipv6 support.  Be a catalyst for change and start learning and evangelizing IPv6. I often have a thought when discussing the merits of ipv6 with anyone that is arguing as to why they don&amp;rsquo;t want or need to deploy it: Would the internet/their network be a better place if we spent as much time making ipv6 work instead of going well out of our way to work around it? &lt;end rant&gt; =)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 3: IP Addressing and Subnet Tools</title>
      <link>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</link>
      <pubDate>Sat, 26 Jul 2014 16:46:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</guid>
      <description>&lt;p&gt;IP addressing and subnetting is a common interview subject. I assert that memorizing these things is useful for learning the concepts but ultimately futile in that it is time consuming and inefficient use of engineering time when tools can be utilized to accomplish the same goals in less time with fewer errors. Honestly, I gave up doing this kind of work manually around 10 years ago and have never regretted it, and in actuality, I&amp;rsquo;d probably struggle to do it at this point because it&amp;rsquo;s a repetitive process better suited by code. In the old days, subnetting IPv4 manually was a badge of honor (and one that I always hated), but I learned it because I needed to know it for cert tests and daily work. However, once I started doing IPv6 around 2001, it became clear that doing this kind of thing by hand was consuming more time than it needed to. Enter UNIX tools. HEX Hex isn&amp;rsquo;t really a tool as much as it&amp;rsquo;s a hack for your shell.  Remember the &lt;a href=&#34;http://www.forwardingplane.net/2014/04/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/&#34; title=&#34;NIX4NetEng #1 Managing dotfiles; pwn the unspoken pain of UNIX administration&#34;&gt;post on dotfiles&lt;/a&gt;? This is something that can go right into your .bashrc and allows for the quick and easy translation of decimal to hexidecimal, which is very useful for IPv6 dual stacking because [in my opinion] the appropriate addressing scheme is to match the last octet based on hex and not numerically. So, to do that one needs to be able to easily convert the last octet quickly and easily.  Adding this to your .bashrc will accomplish this:```
alias hex=&amp;lsquo;printf &amp;ldquo;%x\n&amp;rdquo;&amp;rsquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34; data-lang=&#34;Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34;&gt;(~) desktop $ hex 199
c7&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you&amp;rsquo;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```
10.143.27.&lt;sup&gt;199&lt;/sup&gt;&amp;frasl;&lt;sub&gt;27&lt;/sub&gt;
2001:DB8:1b::c7/120&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34; data-lang=&#34;There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34;&gt;(~) desktop $ sipcalc 2001:DB8:1b::c7/120
-\[ipv6 : 2001:DB8:1b::c7/120\] - 0
``````
\[IPV6 INFO\]
Expanded Address - 2001:0db8:001b:0000:0000:0000:0000:00c7
Compressed address - 2001:db8:1b::c7
Subnet prefix (masked) - 2001:db8:1b:0:0:0:0:0/120
Address ID (masked) - 0:0:0:0:0:0:0:c7/120
Prefix address - ffff:ffff:ffff:ffff:ffff:ffff:ffff:ff00
Prefix length - 120
Address type - Aggregatable Global Unicast Addresses
Network range - 2001:0db8:001b:0000:0000:0000:0000:0000 -
 2001:0db8:001b:0000:0000:0000:0000:00ff -&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for IPv4:&lt;code&gt;
(~) desktop $ sipcalc 10.143.27.199/27
-\[ipv4 : 10.143.27.199/27\] - 0
&lt;/code&gt;&lt;code&gt;
\[CIDR\]
Host address - 10.143.27.199
Host address (decimal) - 177150919
Host address (hex) - A8F1BC7
Network address - 10.143.27.192
Network mask - 255.255.255.224
Network mask (bits) - 27
Network mask (hex) - FFFFFFE0
Broadcast address - 10.143.27.223
Cisco wildcard - 0.0.0.31
Addresses in network - 32
Network range - 10.143.27.192 - 10.143.27.223
Usable range - 10.143.27.193 - 10.143.27.222
&lt;/code&gt;  Notable mention: Web tools are also useful and are becoming more prolific than the UNIX tools, but I will assume that you&amp;rsquo;re probably already loged into a UNIX system like a jump box or bastion host anyway and the tools are faster and thinner in that environment. That said, here are some useful web tools: &lt;a href=&#34;http://jodies.de/ipcalc&#34;&gt;ipcalc&lt;/a&gt; has the web interface to their tool. &lt;a href=&#34;http://www.gestioip.net/cgi-bin/subnet_calculator.cgi&#34;&gt;This site&lt;/a&gt; has a v4 and v6 calculator that works well and looks a lot like the output of sipcalc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install nfsen and nfdump on CentOS 6.5 for netflow and or sflow collection</title>
      <link>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</link>
      <pubDate>Sat, 11 Jan 2014 21:55:24 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</guid>
      <description>&lt;p&gt;I am an absolutely &lt;strong&gt;huge&lt;/strong&gt; fan of statistical and instrumentation data, especially when it comes to traffic analysis, visualization and baselining.  I&amp;rsquo;ve rambled on about the importance of it at &lt;a href=&#34;http://searchnetworking.techtarget.com/news/2240212051/The-Der-Spiegel-NSA-revelations-What-network-engineers-need-to-know&#34;&gt;every opportunity&lt;/a&gt;.  As a result of that, I have been doing work with netflow and netflow-like data for a fairly long time.  My first collector was the &lt;a href=&#34;http://www.splintered.net/sw/flow-tools/&#34;&gt;OSU Flow tools&lt;/a&gt; based stuff  back around 13 years ago.  From there I played with all kinds of netflow tools, both &lt;a href=&#34;http://www.arbornetworks.com/&#34;&gt;commercial&lt;/a&gt; and open source, finally settling most of my focus on &lt;a href=&#34;http://nfdump.sourceforge.net/&#34;&gt;nfdump&lt;/a&gt; and &lt;a href=&#34;http://nfsen.sourceforge.net/&#34;&gt;nfsen&lt;/a&gt;. A bit of history: nfdump was born out of a research network, requiring it to be able to consume huge amounts of flows efficiently.  This makes it very powerful and very useful for nearly anyone, from the small technology tinkerer to to the enterprise network engineer up through the service provider architect.  nfsen is really just a php wrapper for nfdump, however, the really nice thing about it (other then being free, opensource software) is that it is extendable via &lt;a href=&#34;http://sourceforge.net/apps/trac/nfsen-plugins/&#34;&gt;plugins&lt;/a&gt;.  This is really what makes it a serious player from all angles.     From botnet detection to displaying IP geo-data on a map, there is likely a plugin for it.  Not finding what you are looking for?  Write it!  The architecture to use it is already there and documented. For ease of install, I chose CentOS 6.5.  Once you have a system up and running, to get nfsen/nfdump working, here is what you need to do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yum install -y httpd php wget gcc make rrdtool-devel \\&#34; data-lang=&#34;yum install -y httpd php wget gcc make rrdtool-devel \\&#34;&gt;rrdtool-perl perl-MailTools perl-Socket6 flex byacc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/selinux/config
set SELINUX=disabled
reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo iptables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT
sudo ipt6ables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also allow for access to the web server you just installed.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sudo ip6tables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT&#34; data-lang=&#34;sudo ip6tables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT&#34;&gt;sudo ip6tables -I INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT  
sudo iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
sudo iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT  
service iptables save
service ip6tables save&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once you enable https you can safely remove the table rules for port 80. Start HTTPd&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sudo service httpd start&#34; data-lang=&#34;sudo service httpd start&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable HTTPd at boot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-chkconfig httpd on&#34; data-lang=&#34;chkconfig httpd on&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-wget http://downloads.sourceforge.net/project/nfdump/stable/nfdump-1.6.11/nfdump-1.6.11.tar.gz```&#34; data-lang=&#34;wget http://downloads.sourceforge.net/project/nfdump/stable/nfdump-1.6.11/nfdump-1.6.11.tar.gz```&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;wget &lt;a href=&#34;http://downloads.sourceforge.net/project/nfsen/stable/nfsen-1.3.6p1/nfsen-1.3.6p1.tar.gz```&#34;&gt;http://downloads.sourceforge.net/project/nfsen/stable/nfsen-1.3.6p1/nfsen-1.3.6p1.tar.gz```&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tar -zxvf nfdump-1.6.11.tar.gz&#34; data-lang=&#34;tar -zxvf nfdump-1.6.11.tar.gz&#34;&gt;./configure --enable-nfprofile --enable-nftrack --enable-sflow
make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default 1.6.11 enables v9 and ipfix =)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-adduser netflow&#34; data-lang=&#34;adduser netflow&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vi /etc/group&#34; data-lang=&#34;vi /etc/group&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add user netflow to group apache&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vi etc/nfsen.conf&#34; data-lang=&#34;vi etc/nfsen.conf&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;change www user to apache Add your host to the file to allow for collection, my %sources looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-%sources = (&#34; data-lang=&#34;%sources = (&#34;&gt;    &amp;#39;home&amp;#39;    =&amp;gt; { &amp;#39;port&amp;#39; =&amp;gt; &amp;#39;9995&amp;#39;, &amp;#39;col&amp;#39; =&amp;gt; &amp;#39;#0000ff&amp;#39;, &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;netflow&amp;#39; },
    &amp;#39;internal&amp;#39;    =&amp;gt; { &amp;#39;port&amp;#39; =&amp;gt; &amp;#39;9996&amp;#39;, &amp;#39;col&amp;#39; =&amp;gt; &amp;#39;#FF0000&amp;#39;, &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;netflow&amp;#39; },
);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-./install.pl etc/nfsen.conf&#34; data-lang=&#34;./install.pl etc/nfsen.conf&#34;&gt;cd /home/netflow/bin/
./nfsen start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it start at boot (referenced from &lt;a href=&#34;http://sourceforge.net/mailarchive/message.php?msg_id=29434166&#34;&gt;this post&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vi /etc/init.d/nfsen&#34; data-lang=&#34;vi /etc/init.d/nfsen&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add this into the file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-#!/bin/bash&#34; data-lang=&#34;#!/bin/bash&#34;&gt;#
# chkconfig: - 50 50
# description: nfsen

DAEMON=/home/netflow/bin/nfsen

case &amp;#34;$1&amp;#34; in
		start)
		$DAEMON start
		;;
		stop)
		$DAEMON stop
		;;
		status)
		$DAEMON status
		;;
		restart)
		$DAEMON stop
		sleep 1
		$DAEMON start
		;;
		\*)
		echo &amp;#34;Usage: $0 {start|stop|status|restart}&amp;#34;
		exit 1
		;;
esac

exit 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then chkconfig it on to start it at boot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-chmod 755 nfsen &amp;&amp; chkconfig --add nfsen &amp;&amp; chkconfig nfsen on&#34; data-lang=&#34;chmod 755 nfsen &amp;&amp; chkconfig --add nfsen &amp;&amp; chkconfig nfsen on&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s pretty much it. Once you configure your netflow or sflow source, you should start seeing data in ~5-10 minutes. Point your browser at your web server and see: Mine is set as &lt;a href=&#34;https://netmon/nfsen/nfsen.php&#34;&gt;https://netmon/nfsen/nfsen.php&lt;/a&gt; (you&amp;rsquo;ll need to include the &amp;ldquo;nfsen.php&amp;rdquo; uness you edit your apache config to recognize &amp;ldquo;nfsen.php&amp;rdquo; as in index.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM-913x1024.png&#34; alt=&#34;Screen Shot 2014-01-11 at 3.13.53 PM&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Common issues: I see this one every time: &amp;ldquo;ERROR: nfsend connect() error: Permission denied!&amp;rdquo; It&amp;rsquo;s always a permissions issue, as documented &lt;a href=&#34;https://code.google.com/p/nfsenplugins/wiki/NFSEN_Installation_Gotchas&#34;&gt;here&lt;/a&gt;.  You need to make sure that the nfsen package can read the nfsen.comm socket file. I fixed mine by doing&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-chmod g+rwx ~netflow/&#34; data-lang=&#34;chmod g+rwx ~netflow/&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My nfsen.conf file is using /home/netflow as the $BASEDIR.
 &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34; alt=&#34;Screenshot 2014-01-11 13.04.17&#34; /&gt;&lt;/a&gt;
You&amp;rsquo;ll likely see &amp;ldquo;Frontend - Backend version mismatch!&amp;rdquo;, this is a known issue. There is a patch to fix it &lt;a href=&#34;http://sourceforge.net/p/nfsen/bugs/43/&#34;&gt;here&lt;/a&gt;, I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vi /usr/local/etc/rmflowdata.sh&#34; data-lang=&#34;vi /usr/local/etc/rmflowdata.sh&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste this in:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-#!/bin/bash&#34; data-lang=&#34;#!/bin/bash&#34;&gt;# prune flow data
# Usage:
# +30 is the number of days, adjust accordingly.

/bin/find /home/netflow/profiles-data/live -name &amp;#34;nfcapd.\*&amp;#34; -type f -mtime +30 -delete&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add this to your crontab:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-@daily /usr/local/bin/rmflowdata.sh&#34; data-lang=&#34;@daily /usr/local/bin/rmflowdata.sh&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it executable&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-chmod 755 /usr/local/bin/rmflowdata.sh&#34; data-lang=&#34;chmod 755 /usr/local/bin/rmflowdata.sh&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are probably more elegant ways to do it but this works just fine, is lightweight and can be run manually if needed. There are a lot of great use cases for this.  If you&amp;rsquo;re looking for an SDN tie-in, guess what, there is one.  &lt;a href=&#34;http://blog.sflow.com/2010/05/configuring-open-vswitch.html&#34;&gt;OpenVSwitch supports sflow export&lt;/a&gt; and low-and-behold, nfsen and nfdump can easily consume and display sflow data. Want flow statistics on your all VM, OVS based SDN lab?  Guess what, you can! There are some other great things you can do with flow data, too, specifically sflow.  It&amp;rsquo;s not just for network statistics, there is a host &lt;a href=&#34;http://host-sflow.sourceforge.net/&#34;&gt;based sflow implementation&lt;/a&gt; that track any number of interesting metrics.  &lt;a href=&#34;http://blog.sflow.com/&#34;&gt;blog.sflow.com&lt;/a&gt; is a great resource for all things sflow (also, it does IPv6 by default, as it should). Ok, now you have &lt;strong&gt;absolutely&lt;/strong&gt; no good reason not to be collecting flow data.   It&amp;rsquo;s easy, it&amp;rsquo;s useful and almost everything (hosts, routers, virtual switches) supports exporting &lt;strong&gt;&lt;em&gt;some&lt;/em&gt;&lt;/strong&gt; kind of flow information.  You can even generate it from an inline linux box or a box off of an optical tap or a span port running &lt;a href=&#34;https://code.google.com/p/softflowd/&#34;&gt;softflowd&lt;/a&gt; or &lt;a href=&#34;http://www.ntop.org/products/nprobe/&#34;&gt;nprobe&lt;/a&gt;.   Both of which I can confirm work wonderfully (the above collector is gathering flows from softflowd running on my &lt;a href=&#34;http://www.forwardingplane.net/2013/07/building-a-secured-network-in-a-box/&#34; title=&#34;Building a secured network in a box&#34;&gt;security onion box&lt;/a&gt; as well as exported flows from pfflowd on a &lt;a href=&#34;http://www.pfsense.org/&#34;&gt;pfsense&lt;/a&gt; router).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sonicwall revisited - Now with IPv6 - and way too much licensing cruft.</title>
      <link>https://forwardingplane.net/post/sonicwall-revisited-now-with-ipv6-and-way-too-much-licensing-cruft/</link>
      <pubDate>Sat, 07 Dec 2013 15:45:06 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonicwall-revisited-now-with-ipv6-and-way-too-much-licensing-cruft/</guid>
      <description>&lt;p&gt;About a year ago &lt;a href=&#34;http://www.forwardingplane.net/2012/12/sonicwall-old-dog-learns-some-new-tricks/&#34; title=&#34;Sonicwall – Old dog learns [some] new tricks&#34;&gt;I did a brief review of the &amp;ldquo;new Sonicwall&amp;rdquo;&lt;/a&gt;, specifically a smaller branch office device that was said should have had all of the features of the larger devices.  I proposed that it had some significant limitations (much to the disagreement of a great deal of folks).  However, I stand by my statements.  If you ignore the fact that firewalls often cause more problems than they solve, that NAT is a nightmarish kludge (and not a security mechanism), and &lt;a href=&#34;http://www.forwardingplane.net/2013/03/why-hardware-firewalls-are-the-walking-dead/&#34; title=&#34;Why hardware firewalls are the walking dead&#34;&gt;will likely be phased out for better options eventually&lt;/a&gt;, the SonicOS I tested was pretty limited as far as what I believe should be features. Let&amp;rsquo;s be clear, I&amp;rsquo;m mostly talking about IPv6.  I&amp;rsquo;ve ranted and raved that anyone not doing IPv6 is already years behind.  Get on the ball, you&amp;rsquo;re already late to the game.  Yesterday, a colleague said something that resonated with me regarding this and it got me thinking about how much IPv6 support SonicOS had added.  Many folks that aren&amp;rsquo;t doing IPv6 think that instead of doing something that may be a little hard that they&amp;rsquo;re just not going to do anything.   They&amp;rsquo;re dead wrong.  They&amp;rsquo;re forcing themselves to do something else like CGN or multi-layer NAT, or something else equally (or more) unpleasant.  And then they&amp;rsquo;ll do IPv6 anyway after that. It &lt;strong&gt;is&lt;/strong&gt; inevitable. But I digress…. I pulled my old TZ-210 out and upgraded it to SonicOS Enhanced 5.9.0.2-107o.  What a pleasant surprise!  A &lt;strong&gt;huge&lt;/strong&gt; amount of IPv6 support added!  &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-v4.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-v4.png&#34; alt=&#34;sonicwall-v6-v4&#34; /&gt;&lt;/a&gt; They&amp;rsquo;ve really done their homework here.  I was very surprised to see things like DHCPv6-PD with interface tracking.  Well done, Dell.  This will allow for small and home offices to take advantage of the Comcast and AT&amp;amp;T DHCPv6-PD that they&amp;rsquo;ve been offering for a while now, and lets be honest, once it&amp;rsquo;s on, most folks will never even realize they&amp;rsquo;re using IPv6. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-dhcpv6.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-dhcpv6-257x300.png&#34; alt=&#34;sonicwall-dhcpv6&#34; /&gt;&lt;/a&gt; &amp;lt;== This is a giant step forward for reasons that are far beyond simple protocol support.   &lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-fw-rules.png&#34; alt=&#34;sonicwall-v6-fw-rules&#34; /&gt;   I&amp;rsquo;m very happy to see this level of support from Dell/Sonicwall.  I expected to put this box in, turn it on, use it for a few days and turn it off.  I set it up in transparent mode, tuned the rules a bit….and I have no real plans of taking it out.  I&amp;rsquo;m actually pretty happy with it for the application I&amp;rsquo;m using it for.  It doesn&amp;rsquo;t seem to really impede anything I want to do (after TCP ssh timeout rules to a reasonable time; BTW, timeouts are one of the reasons I don&amp;rsquo;t like firewalls).     This brings me to my problem with Sonicwall (and many network and network security vendors).  My licenses have all expired. I can understand having to license services that cost money because they&amp;rsquo;re licensed upstream services.  I get that, I really do.  However,  Some of the things that Dell requires licenses for seem a bit extreme to me.  The fact that I get essentially zero visualization options once the licenses expire is downright shameful.  No worries, I&amp;rsquo;ll just export Netflow/IPFIX data.  Nope, also a licensed feature.  You heard that right.  No flow export, no real time monitor.  Heck, I can&amp;rsquo;t even look at interface graphs on-box. I have to poll with a 3rd party tool suite.  Realistically, one gets significantly better instrumentation from a default &lt;a href=&#34;http://www.pfsense.org&#34;&gt;pfSense&lt;/a&gt; load.  And pfSense has had IPv6 support for years. If you take away all of the downright shameful licensing requirements to do anything useful with trending and instrumentation, this is a good platform. Their IPv6 support is solid now.   However, for anyone running  networks  that require instrumentation and visualization, you had better budget for [unnecessary] fees or have 3rd party mechanisms for collecting the data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The sad state of IPv6 and why you need to learn it.</title>
      <link>https://forwardingplane.net/post/the-sad-state-of-ipv6-and-why-you-need-to-learn-it/</link>
      <pubDate>Mon, 05 Aug 2013 11:18:03 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/the-sad-state-of-ipv6-and-why-you-need-to-learn-it/</guid>
      <description>&lt;p&gt;I have been learning and using IPv6 for a quite a while, even before I worked in research and education, back in the ISP days.  I thought I should learn it because, frankly, I figured we&amp;rsquo;d all be converted to it by now, already whole hog using it like it was the layer 3 addressing mechanism that it is.  Flashback: My first IPv6 access was via a tunnel to HE a long, long time ago and before that I was reading what I could about it.  I&amp;rsquo;ve been evangelizing IPv6 for about that long, too.  I&amp;rsquo;ve taught IPv6 networking workshops on many occasions showing eager network engineers, security engineers, sysadmins, incident responders and even the occasional CIO how to understand, interpret and plumb v6. Now, I love OpenFlow and SDN as much as the next network geek, and I think it&amp;rsquo;s about as disruptive and game changing as the next guy.  However, IPv6 is next.  There.  I said it.  We need it.  Hey, OpenFlow 1.3 supports it so there is your tie in.  We&amp;rsquo;re out of v4 for the most part and, lets be honest, NAT is a freaking abomination. It&amp;rsquo;s not a solution to anything other than over complicating a transit path with translational mappings. I recently received an email from a buddy from my first days in tech about &lt;a href=&#34;http://www.enhancedip.org/home&#34;&gt;a project that some colleagues of his had been working on&lt;/a&gt; and while at a base technical level it&amp;rsquo;s an interesting concept, this project infuriated me.  This is the problem with the industry, especially in North America. The right thing, in my opinion, is to put effort like this aside and concentrate on IPv6 development and deployment. Projects like this, while good intentioned and technically innovative, delay he inevitable and give lazy, &amp;ldquo;luddist&amp;rdquo; engineers and developers a way to keep ipv4 even longer. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/alarm_clock.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/alarm_clock.jpg&#34; alt=&#34;alarm_clock&#34; /&gt;&lt;/a&gt; I have mostly just kept this to myself publicly.  Sure, I blather on about it the office and preach about IPv6 over beers with networking professionals, but mostly I just suffer and bite my tongue when I hear some enterprise architect talk about firewalls, NAT, IPv4 only security appliances and how &amp;ldquo;they don&amp;rsquo;t need IPv6&amp;rdquo; or how &amp;ldquo;the enterprise isn&amp;rsquo;t ready&amp;rdquo; [for IPv6]. Wake up call, you&amp;rsquo;re late. &lt;strong&gt;IPv6 is here&lt;/strong&gt;.  It&amp;rsquo;s &lt;strong&gt;been&lt;/strong&gt; here.  It&amp;rsquo;s all over in Asia and other parts of the world.  It&amp;rsquo;s supported by default by your consumer service provider.  Guess what?  It&amp;rsquo;s too bad that your lazy developers didn&amp;rsquo;t code your apps for it. It&amp;rsquo;s too bad that your specialized app only supports IPv4 and probably doesn&amp;rsquo;t even understand DNS.  You&amp;rsquo;ll eventually have to deal with IPv6.  In actuality, you&amp;rsquo;re likely already using it and have no idea it is happening.  If someone finally tore that legacy XP machine from your change-despising hands you&amp;rsquo;re probably tunneling your traffic.  Unless you explicitly disable IPv6 on a modern operating system, you&amp;rsquo;re using it.  It may be just locally on your segment, but it&amp;rsquo;s on.  &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/borg.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/borg.jpg&#34; alt=&#34;borg&#34; /&gt;&lt;/a&gt; Get on board.  Resistance is futile.  There are great resources for learning IPv6.  Your desktop and server OS have probably supported it for years.  Your routers likely support routing it.  The last parts are going to be the security devices, policy and the legacy apps.  If you&amp;rsquo;re a networking guy, go do the &lt;a href=&#34;http://ipv6.he.net/certification/&#34;&gt;HE tunnelbroker certification process. &lt;/a&gt; They have a very good fundamentals tutorial and it covers everything you need to know to get started.  You can also get a cool shirt and some code to shove into your website.  Mine looks like this:// &amp;lt;![CDATA[ var user = &amp;ldquo;buraglio&amp;rdquo;; display_swf(user); // ]]&amp;gt;   Take the plunge, get some IPv6 going in your enterprise, home network, lab, whatever.  Learn and educate.  It will only improve your value and you&amp;rsquo;re going to have to learn it later anyway.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Feature Matrix (Again)</title>
      <link>https://forwardingplane.net/post/ipv6-feature-matrix-again/</link>
      <pubDate>Fri, 17 May 2013 22:01:27 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-feature-matrix-again/</guid>
      <description>&lt;p&gt;There has been some recent chatter on the &lt;a href=&#34;http://lists.cluenet.de/mailman/listinfo/ipv6-ops&#34;&gt;IPv6 Ops mailing list&lt;/a&gt; about the feature matrix. Sadly, I&amp;rsquo;ve let this sort of wither on the vine for a while in favor of OpenFlow and SDN.  At the end of the day, though, as a whole we actually &lt;strong&gt;need&lt;/strong&gt; IPv6 more than SDN and OpenFlow at this moment in time, so I&amp;rsquo;m resurrecting it.  It is available &lt;a href=&#34;https://docs.google.com/spreadsheet/ccc?key=0AkRPccDFxV1kdEVNNEhFbG9UZWJlNVJ4NHJlWGtWV1E&amp;amp;amp;usp=sharing&#34;&gt;here&lt;/a&gt;. A few additions have been made and there is now a &amp;ldquo;last edited&amp;rdquo; cell so folks can tell if the data is stale or not.  What we need now is your input.  Do you have experience with something that isn&amp;rsquo;t on here?  Send over some details.  We&amp;rsquo;ll get it added.  Don&amp;rsquo;t be shy.  This is important.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
