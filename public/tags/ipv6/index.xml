<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IPv6 on ForwardingPlane.net</title>
    <link>https://forwardingplane.net/tags/ipv6/</link>
    <description>Recent content in IPv6 on ForwardingPlane.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2019, all rights reserved.</copyright>
    <lastBuildDate>Sun, 31 Mar 2019 17:35:10 +0000</lastBuildDate>
    
        <atom:link href="https://forwardingplane.net/tags/ipv6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Soap Box: Mikrotik &#34;IPv6 Apocalypse&#34;, or maybe not.</title>
      <link>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</link>
      <pubDate>Sun, 31 Mar 2019 17:35:10 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</guid>
      <description>

&lt;p&gt;Over the last few days there has been a &lt;em&gt;&lt;strong&gt;huge&lt;/strong&gt;&lt;/em&gt; amount of FUD and panic surrounding two as-yet-to-be-published CVEs (found &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19298&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19299&#34;&gt;here&lt;/a&gt;) related to Mikrotik&amp;rsquo;s IPv6 implementation.It is my opinion that this entire process has been poorly handled, and that the community involved tends to be fairly sensitive to issues such as, and the cloak and dagger nature of the two issues has only exacerbated it. Mikrotik, as a company, is well known for being terse in their responses and tight lipped with their internal workings and dealings with these kinds of issues. I take that as a given, that’s their business and realistically we’re entitled to know exactly none of that information, even if it would be nice to have it. The history behind this is discouraging, the original discovery was quite some time ago with reports dating back to 2013, and the person who originally uncovered the issues did so upwards of a year ago, bringing them to Mikrotik at that time, as can be seen in this &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=125841&amp;amp;p=654116&amp;amp;hilit=ndpexhaust26#p654116&#34;&gt;thread&lt;/a&gt;. Now, anyone with a passing knowledge of pen testing or IPv6 device load testing can trivially put together the information needed to decipher the problem and replicate it, neither are exactly complicated or &lt;a href=&#34;https://insinuator.net/2013/03/ipv6-neighbor-cache-exhaustion-attacks-risk-assessment-mitigation-strategies-part-1/&#34;&gt;new&lt;/a&gt;. Both can be done in literally one line of &lt;a href=&#34;https://tools.kali.org/information-gathering/thc-ipv6&#34;&gt;common, open source toolkits.&lt;/a&gt; The issues are not magical and are not even esoteric or cryptic. They are very straightforward, and by reading the threads and understanding how things like route caches and &lt;a href=&#34;https://en.wikipedia.org/wiki/Neighbor_Discovery_Protocol&#34;&gt;neighbor discovery&lt;/a&gt; work, they become very clear. Since this is IPv6 related I am very interested in it because I feel that WISPs and emerging markets are an excellent environment for moving IPv6 forward, and the equipment and mindset involved makes that fairly straightforward. Reverse engineering these given the information available is pretty straightforward, and &lt;a href=&#34;https://www.iparchitechs.com/&#34;&gt;folks other than me have done it&lt;/a&gt; too. I personally do not consider either of these a security vulnerability or a bug, per se. They’re both the result of a short sighted protocol implementation resulting in a very acute, unfortunate event. With the benefit of hindsight, and as an outsider, I can only wonder if this had been handled differently (i.e. not framed as a critical security vulnerability but rather a broken protocol), if the hysteria that resulted could have been quelled. On a &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=147048&amp;amp;start=50&#34;&gt;particular forum thread,&lt;/a&gt; this was likened to the discovery of the “ping of death”, and that feels like a good analogy to me.  It probably should have been handled that way. So, I will post my .02 as to how this kind of even can be handled in the future, in case there is no better process to work with: 1. Involve the vendor early. 2. Involve a trusted third party to validate the result. It’s very easy to miss trees when you’re stuck in a forest. 3rd party validation is pretty important either way as it proves a problem can be repeated independently. 3. Disclose the environment hardware, in detail, that was used to test and confirm the the issue in. 4. Have both validated it with said trusted, embargoed outside source(s). Again, ideally one is the vendor. 5. If unable to define and at least indicate that there is a remediation, leverage outside trusted source to &lt;strong&gt;make sure that’s not possible&lt;/strong&gt;. In this case, that seems to be kept between the person who discovered it and the vendor, which as discussed above has a track record of being pretty closed off. For this particular issue and platform, one can monitor the IPv6 route-cacheing near real-time, here is the command to do it at 1 second intervals```
[buraglio@gw] &amp;gt; /ipv6 route cache print interval=1
cache-size: 190max-cache-size: 1024000&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34; data-lang=&#34;The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34;&gt;/ipv6 firewall filter
add action=drop chain=forward connection-mark=drop connection-state=new
/ipv6 firewall mangle
add action=accept chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 limit=2,5:packet
add action=mark-connection chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 new-connection-mark=drop passthrough=yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for those more interested in the actual process, here is a video demonstrating the basic route-cache issue (commands, although very easy to figure out are obfuscated)&lt;/p&gt;

&lt;p&gt;Mikrotik has released a fix as of this morning (4/1/2019), although it is currently beta. ROS 6.45 addresses both the route cache and the neighbor table issue. More details on the discovery will be &lt;a href=&#34;https://indico.uknof.org.uk/event/46/contributions/speakers&#34;&gt;disclosed at the UKNOF conference&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;my-take&#34;&gt;My take:&lt;/h4&gt;

&lt;p&gt;A problem like this that is as egregious as described needs to be independently validated and ideally a remediation found before disclosure. If a mitigation strategy does not exist, the $vendor takes responsibility by default and realistically, nothing can be done until they fix it. It may also be disclosed as a zero-day-style, weaponized tactic. Obviously that is the worst case. The real point is that we’re a community, and we need to build the trust frameworks to work together on issues such as this without pointing fingers or running around with our hands waving. This behavior is, sadly, pretty easy to re-create. There is an old thread that implies some of this was triggered by &amp;ldquo;real traffic&amp;rdquo;, and I have definitely seen an uptick in ipv6 scanning that impacts major vendor router platforms to the point that they get salty about traffic flows and spike CPUs. This feels pretty darned similar, but not the catastrophic event horizon it&amp;rsquo;s being played out to be. It&amp;rsquo;s still bad, it stinks, and it&amp;rsquo;s definitely been handled in a way that is less than optimal. I would also like to point out a few things since there has been a fair amount of hair on fire panic. I realize I am being a tad pedantic, but it&amp;rsquo;s important to identify things correctly in order to handle them in the correct manner. This is not a security vulnerability as I would describe it. There is no remote or local execution of code, no raised privileges, no mechanism of compromise. I don&amp;rsquo;t think this is a software bug, either. It&amp;rsquo;s close, but in reality what this is is a poorly implemented protocol that had what I can only believe was a poverty of testing before release and as such allows for a remotely triggered denial of service. Denial of service isn&amp;rsquo;t necessarily malicious, it just means exactly what it says: service is denied. As mentioned earlier in the thread, this is like the old ping of death issue: a poorly executed stack. I&amp;rsquo;d like to know who has executed this in the wild and how far back this goes in their code train, references go back as far as 2013, but I suspect they go back to the original support.&lt;/p&gt;

&lt;h4 id=&#34;update&#34;&gt;-&amp;mdash; UPDATE&lt;/h4&gt;

&lt;p&gt;Mikrotik has addressed this issue with the release of ROS 6.44.2. The prior methodologies no longer exhaust resources and reload devices, as can be seen here&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Soap Box: Mikrotik &#34;IPv6 Apocalypse&#34;, or maybe not.</title>
      <link>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</link>
      <pubDate>Sun, 31 Mar 2019 17:35:10 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</guid>
      <description>

&lt;p&gt;Over the last few days there has been a &lt;em&gt;&lt;strong&gt;huge&lt;/strong&gt;&lt;/em&gt; amount of FUD and panic surrounding two as-yet-to-be-published CVEs (found &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19298&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19299&#34;&gt;here&lt;/a&gt;) related to Mikrotik&amp;rsquo;s IPv6 implementation.It is my opinion that this entire process has been poorly handled, and that the community involved tends to be fairly sensitive to issues such as, and the cloak and dagger nature of the two issues has only exacerbated it. Mikrotik, as a company, is well known for being terse in their responses and tight lipped with their internal workings and dealings with these kinds of issues. I take that as a given, that’s their business and realistically we’re entitled to know exactly none of that information, even if it would be nice to have it. The history behind this is discouraging, the original discovery was quite some time ago with reports dating back to 2013, and the person who originally uncovered the issues did so upwards of a year ago, bringing them to Mikrotik at that time, as can be seen in this &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=125841&amp;amp;p=654116&amp;amp;hilit=ndpexhaust26#p654116&#34;&gt;thread&lt;/a&gt;. Now, anyone with a passing knowledge of pen testing or IPv6 device load testing can trivially put together the information needed to decipher the problem and replicate it, neither are exactly complicated or &lt;a href=&#34;https://insinuator.net/2013/03/ipv6-neighbor-cache-exhaustion-attacks-risk-assessment-mitigation-strategies-part-1/&#34;&gt;new&lt;/a&gt;. Both can be done in literally one line of &lt;a href=&#34;https://tools.kali.org/information-gathering/thc-ipv6&#34;&gt;common, open source toolkits.&lt;/a&gt; The issues are not magical and are not even esoteric or cryptic. They are very straightforward, and by reading the threads and understanding how things like route caches and &lt;a href=&#34;https://en.wikipedia.org/wiki/Neighbor_Discovery_Protocol&#34;&gt;neighbor discovery&lt;/a&gt; work, they become very clear. Since this is IPv6 related I am very interested in it because I feel that WISPs and emerging markets are an excellent environment for moving IPv6 forward, and the equipment and mindset involved makes that fairly straightforward. Reverse engineering these given the information available is pretty straightforward, and &lt;a href=&#34;https://www.iparchitechs.com/&#34;&gt;folks other than me have done it&lt;/a&gt; too. I personally do not consider either of these a security vulnerability or a bug, per se. They’re both the result of a short sighted protocol implementation resulting in a very acute, unfortunate event. With the benefit of hindsight, and as an outsider, I can only wonder if this had been handled differently (i.e. not framed as a critical security vulnerability but rather a broken protocol), if the hysteria that resulted could have been quelled. On a &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=147048&amp;amp;start=50&#34;&gt;particular forum thread,&lt;/a&gt; this was likened to the discovery of the “ping of death”, and that feels like a good analogy to me.  It probably should have been handled that way. So, I will post my .02 as to how this kind of even can be handled in the future, in case there is no better process to work with: 1. Involve the vendor early. 2. Involve a trusted third party to validate the result. It’s very easy to miss trees when you’re stuck in a forest. 3rd party validation is pretty important either way as it proves a problem can be repeated independently. 3. Disclose the environment hardware, in detail, that was used to test and confirm the the issue in. 4. Have both validated it with said trusted, embargoed outside source(s). Again, ideally one is the vendor. 5. If unable to define and at least indicate that there is a remediation, leverage outside trusted source to &lt;strong&gt;make sure that’s not possible&lt;/strong&gt;. In this case, that seems to be kept between the person who discovered it and the vendor, which as discussed above has a track record of being pretty closed off. For this particular issue and platform, one can monitor the IPv6 route-cacheing near real-time, here is the command to do it at 1 second intervals```
[buraglio@gw] &amp;gt; /ipv6 route cache print interval=1
cache-size: 190max-cache-size: 1024000&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34; data-lang=&#34;The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34;&gt;/ipv6 firewall filter
add action=drop chain=forward connection-mark=drop connection-state=new
/ipv6 firewall mangle
add action=accept chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 limit=2,5:packet
add action=mark-connection chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 new-connection-mark=drop passthrough=yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for those more interested in the actual process, here is a video demonstrating the basic route-cache issue (commands, although very easy to figure out are obfuscated)&lt;/p&gt;

&lt;p&gt;Mikrotik has released a fix as of this morning (4/1/2019), although it is currently beta. ROS 6.45 addresses both the route cache and the neighbor table issue. More details on the discovery will be &lt;a href=&#34;https://indico.uknof.org.uk/event/46/contributions/speakers&#34;&gt;disclosed at the UKNOF conference&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;my-take&#34;&gt;My take:&lt;/h4&gt;

&lt;p&gt;A problem like this that is as egregious as described needs to be independently validated and ideally a remediation found before disclosure. If a mitigation strategy does not exist, the $vendor takes responsibility by default and realistically, nothing can be done until they fix it. It may also be disclosed as a zero-day-style, weaponized tactic. Obviously that is the worst case. The real point is that we’re a community, and we need to build the trust frameworks to work together on issues such as this without pointing fingers or running around with our hands waving. This behavior is, sadly, pretty easy to re-create. There is an old thread that implies some of this was triggered by &amp;ldquo;real traffic&amp;rdquo;, and I have definitely seen an uptick in ipv6 scanning that impacts major vendor router platforms to the point that they get salty about traffic flows and spike CPUs. This feels pretty darned similar, but not the catastrophic event horizon it&amp;rsquo;s being played out to be. It&amp;rsquo;s still bad, it stinks, and it&amp;rsquo;s definitely been handled in a way that is less than optimal. I would also like to point out a few things since there has been a fair amount of hair on fire panic. I realize I am being a tad pedantic, but it&amp;rsquo;s important to identify things correctly in order to handle them in the correct manner. This is not a security vulnerability as I would describe it. There is no remote or local execution of code, no raised privileges, no mechanism of compromise. I don&amp;rsquo;t think this is a software bug, either. It&amp;rsquo;s close, but in reality what this is is a poorly implemented protocol that had what I can only believe was a poverty of testing before release and as such allows for a remotely triggered denial of service. Denial of service isn&amp;rsquo;t necessarily malicious, it just means exactly what it says: service is denied. As mentioned earlier in the thread, this is like the old ping of death issue: a poorly executed stack. I&amp;rsquo;d like to know who has executed this in the wild and how far back this goes in their code train, references go back as far as 2013, but I suspect they go back to the original support.&lt;/p&gt;

&lt;h4 id=&#34;update&#34;&gt;-&amp;mdash; UPDATE&lt;/h4&gt;

&lt;p&gt;Mikrotik has addressed this issue with the release of ROS 6.44.2. The prior methodologies no longer exhaust resources and reload devices, as can be seen here&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Q&amp;A for ISPs</title>
      <link>https://forwardingplane.net/post/ipv6-qa-for-isps/</link>
      <pubDate>Sat, 15 Dec 2018 01:21:09 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-qa-for-isps/</guid>
      <description>&lt;p&gt;As a follow on to my post on &lt;a href=&#34;https://www.forwardingplane.net/2018/09/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/&#34;&gt;why small to medium ISPs should deploy IPv6&lt;/a&gt; and the associated &lt;a href=&#34;https://blog.apnic.net/2018/12/13/three-reasons-why-ipv6-is-worth-the-effort/&#34;&gt;APNIC blog post,&lt;/a&gt; I have begun to compile a list of commonly asked questions IPv6 and their answers in relation to how a small to medium sized ISP can (and should) deploy IPv6. Expect this list to change and grow over time. &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q: Is there DHCP in IPv6? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;p&gt;A:  There are &lt;a href=&#34;https://en.wikipedia.org/wiki/DHCPv6&#34;&gt;multiple DHCPv6 implementations&lt;/a&gt;, the one I like to use is isc-dhcpd as it tends to have the best standard support, is incredibly feature rich and well documented and is very scalable, but there are multiple options. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one know what IP address the CPE has?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: DUID (DHCP Unique Identifier), PPPoE, etc. There are several ways. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one perform traffic shaping for the entire /64 (or /48, or other nibble boundary block) assigned to the customer?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Don’t shape on L3, it doesn’t scale. Shape on L2 at the CPE or use PPPoE. &lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q) Can a dynamic CPE environment where devices can pull addresses with minimal input and work from the provider still work?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Yes, DHCPv6 and &lt;a href=&#34;https://en.wikipedia.org/wiki/Prefix_delegation&#34;&gt;DHCPv6-PD&lt;/a&gt; handle these functions. There are well traveled and well vetted how-to’s for this. It is how the large incumbent providers work, regardless of delivery last mile (DSL, DOCSIS, Fixed wireless, etc.) &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does the host configure a host address? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;p&gt;A: Most devices will use what is called SLAAC. Addresses are auto-generated based on a MAC. A given host will have multiple IPv6 addresses and this is normal. There will also be the following on a HOST:&lt;br /&gt;
A link local address on every interface (starts with fe80: and is used for any communication on the same L2 segment)&lt;br /&gt;
A privacy address that rotates which much of the traffic will be worked from&lt;br /&gt;
An EUI-64 address (the auto configured address)&lt;br /&gt;
Potentially, but only when configured:&lt;br /&gt;
A DHCPv6 assigned address. &lt;br /&gt;
A Static Address&lt;/p&gt;

&lt;p&gt;On the ISP side, you’ll see any or all of the following:&lt;br /&gt;
A link local address (starts with fe80:)&lt;br /&gt;
An EUI-64 address&lt;br /&gt;
A static address&lt;br /&gt;
A prefix delegated prefix&lt;/p&gt;

&lt;p&gt;———&lt;br /&gt;
Other commonly questions and advice&lt;/p&gt;

&lt;p&gt;Come up with a reasonable IPv6 address plan before you start - work through it as you can. Start with your backbone&lt;br /&gt;
You will no longer memorize addresses (which you should not do anyway), instead, do two things:&lt;/p&gt;

&lt;p&gt;Think of all prefixes like you would consider a unique IPv4 address 4.2.2.&lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt; ==2001:db8:44:22::/64&lt;br /&gt;
IPv6 addresses are written with the CIDR prefix (see above)&lt;/p&gt;

&lt;p&gt;Use DNS for everything you can - an IPAM like NetBox is your friend&lt;br /&gt;
It’s ok if your customers prefix delegation does not have reverse DNS&lt;br /&gt;
It’s ok to publicly address your infrastructure with IPv6. Use a single /48 dedicated for all infrastructure and then create an ACL at the network border to limit access&lt;br /&gt;
Public addresses for your customers are ok. &lt;br /&gt;
There is no NAT as in the IPv4 world, and there should not be NAT for IPv6. Period. &lt;br /&gt;
Yes, you want to dual-stack. It’s ok to have RFC1918 space plus public IPv6. In fact, that’s the most prevalent model (look at your cell phone)&lt;br /&gt;
You will have devices that won’t do IPv6. That’s expected. &lt;br /&gt;
Yes, you can do IPv6 only, but it’s significantly harder to manage than a standard dual stack network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Q&amp;A for ISPs</title>
      <link>https://forwardingplane.net/post/ipv6-qa-for-isps/</link>
      <pubDate>Sat, 15 Dec 2018 01:21:09 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-qa-for-isps/</guid>
      <description>&lt;p&gt;As a follow on to my post on &lt;a href=&#34;https://www.forwardingplane.net/2018/09/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/&#34;&gt;why small to medium ISPs should deploy IPv6&lt;/a&gt; and the associated &lt;a href=&#34;https://blog.apnic.net/2018/12/13/three-reasons-why-ipv6-is-worth-the-effort/&#34;&gt;APNIC blog post,&lt;/a&gt; I have begun to compile a list of commonly asked questions IPv6 and their answers in relation to how a small to medium sized ISP can (and should) deploy IPv6. Expect this list to change and grow over time. &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q: Is there DHCP in IPv6? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;/p&gt;

&lt;p&gt;A:  There are &lt;a href=&#34;https://en.wikipedia.org/wiki/DHCPv6&#34;&gt;multiple DHCPv6 implementations&lt;/a&gt;, the one I like to use is isc-dhcpd as it tends to have the best standard support, is incredibly feature rich and well documented and is very scalable, but there are multiple options. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one know what IP address the CPE has?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: DUID (DHCP Unique Identifier), PPPoE, etc. There are several ways. &lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does one perform traffic shaping for the entire /64 (or /48, or other nibble boundary block) assigned to the customer?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Don’t shape on L3, it doesn’t scale. Shape on L2 at the CPE or use PPPoE. &lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
&lt;strong&gt;Q) Can a dynamic CPE environment where devices can pull addresses with minimal input and work from the provider still work?&lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;ndash;&lt;br /&gt;
A: Yes, DHCPv6 and &lt;a href=&#34;https://en.wikipedia.org/wiki/Prefix_delegation&#34;&gt;DHCPv6-PD&lt;/a&gt; handle these functions. There are well traveled and well vetted how-to’s for this. It is how the large incumbent providers work, regardless of delivery last mile (DSL, DOCSIS, Fixed wireless, etc.) &lt;/p&gt;

&lt;p&gt;-&amp;mdash;&amp;mdash;&lt;br /&gt;
&lt;strong&gt;Q: How does the host configure a host address? &lt;/strong&gt;&lt;br /&gt;
-&amp;mdash;&amp;mdash;&lt;/p&gt;

&lt;p&gt;A: Most devices will use what is called SLAAC. Addresses are auto-generated based on a MAC. A given host will have multiple IPv6 addresses and this is normal. There will also be the following on a HOST:&lt;br /&gt;
A link local address on every interface (starts with fe80: and is used for any communication on the same L2 segment)&lt;br /&gt;
A privacy address that rotates which much of the traffic will be worked from&lt;br /&gt;
An EUI-64 address (the auto configured address)&lt;br /&gt;
Potentially, but only when configured:&lt;br /&gt;
A DHCPv6 assigned address. &lt;br /&gt;
A Static Address&lt;/p&gt;

&lt;p&gt;On the ISP side, you’ll see any or all of the following:&lt;br /&gt;
A link local address (starts with fe80:)&lt;br /&gt;
An EUI-64 address&lt;br /&gt;
A static address&lt;br /&gt;
A prefix delegated prefix&lt;/p&gt;

&lt;p&gt;———&lt;br /&gt;
Other commonly questions and advice&lt;/p&gt;

&lt;p&gt;Come up with a reasonable IPv6 address plan before you start - work through it as you can. Start with your backbone&lt;br /&gt;
You will no longer memorize addresses (which you should not do anyway), instead, do two things:&lt;/p&gt;

&lt;p&gt;Think of all prefixes like you would consider a unique IPv4 address 4.2.2.&lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt; ==2001:db8:44:22::/64&lt;br /&gt;
IPv6 addresses are written with the CIDR prefix (see above)&lt;/p&gt;

&lt;p&gt;Use DNS for everything you can - an IPAM like NetBox is your friend&lt;br /&gt;
It’s ok if your customers prefix delegation does not have reverse DNS&lt;br /&gt;
It’s ok to publicly address your infrastructure with IPv6. Use a single /48 dedicated for all infrastructure and then create an ACL at the network border to limit access&lt;br /&gt;
Public addresses for your customers are ok. &lt;br /&gt;
There is no NAT as in the IPv4 world, and there should not be NAT for IPv6. Period. &lt;br /&gt;
Yes, you want to dual-stack. It’s ok to have RFC1918 space plus public IPv6. In fact, that’s the most prevalent model (look at your cell phone)&lt;br /&gt;
You will have devices that won’t do IPv6. That’s expected. &lt;br /&gt;
Yes, you can do IPv6 only, but it’s significantly harder to manage than a standard dual stack network.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>As a small to medium ISP, why you should deploy IPv6</title>
      <link>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</link>
      <pubDate>Sat, 01 Sep 2018 16:47:23 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</guid>
      <description>

&lt;p&gt;IPv6 has been a crusade of mine for well over a decade. Wether it is teaching IPv6 workshops, offering advice to new users, answering questions, or evangelizing it ad nauseam, it is an important topic to me. The ISP world holds a special place in my heart since a good deal of my early experience came from building or assisting regional ISPs. Recently I had a fun opportunity to talk about deploying IPv6 on &lt;a href=&#34;http://thebrotherswisp.com/&#34;&gt;The Brothers WISP podcast&lt;/a&gt;. This was a really fun experience, and if you&amp;rsquo;re looking at deploying v6, take a listen (or watch) to this - it should give you the basics or at the very least a place to start.  &lt;/p&gt;

&lt;h3 id=&#34;links-to-discussed-topics&#34;&gt;Links to discussed topics&lt;/h3&gt;

&lt;p&gt;IPv4/IPv6 subnetting tool: &lt;a href=&#34;https://github.com/sii/sipcalc&#34;&gt;sipcalc&lt;/a&gt; &lt;a href=&#34;http://sipcalc.tools.uebi.net/&#34;&gt;Online version&lt;/a&gt; Great, Free training for IPv6, plus a free T-Shirt if you complete it. &lt;a href=&#34;https://ipv6.he.net/certification/&#34;&gt;HE IPv6 certification&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_DHCP_server_software&#34;&gt;DHCPv6 alternatives&lt;/a&gt; (YES, it exists) Looking to see if folks are tunneling using &lt;a href=&#34;https://tools.ietf.org/html/rfc3068&#34;&gt;6to4&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Teredo_tunneling&#34;&gt;Teredo&lt;/a&gt; in your network? Do netflow searches for these anycast addresses: 192.88.99.0/24 (6to4) 65.54.227.120 (Teredo) &lt;a href=&#34;https://howdoesinternetwork.com/2013/slaac&#34;&gt;Information on SLAAC&lt;/a&gt; (Auto-configuration) You might also be interested in a &lt;a href=&#34;https://www.youtube.com/watch?v=c8m2Sjre6t4&amp;amp;feature=youtu.be&#34;&gt;DNS podcast&lt;/a&gt; I did with Brothers WISP a while ago.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>As a small to medium ISP, why you should deploy IPv6</title>
      <link>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</link>
      <pubDate>Sat, 01 Sep 2018 16:47:23 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/as-a-small-to-medium-isp-why-you-should-deploy-ipv6/</guid>
      <description>

&lt;p&gt;IPv6 has been a crusade of mine for well over a decade. Wether it is teaching IPv6 workshops, offering advice to new users, answering questions, or evangelizing it ad nauseam, it is an important topic to me. The ISP world holds a special place in my heart since a good deal of my early experience came from building or assisting regional ISPs. Recently I had a fun opportunity to talk about deploying IPv6 on &lt;a href=&#34;http://thebrotherswisp.com/&#34;&gt;The Brothers WISP podcast&lt;/a&gt;. This was a really fun experience, and if you&amp;rsquo;re looking at deploying v6, take a listen (or watch) to this - it should give you the basics or at the very least a place to start.  &lt;/p&gt;

&lt;h3 id=&#34;links-to-discussed-topics&#34;&gt;Links to discussed topics&lt;/h3&gt;

&lt;p&gt;IPv4/IPv6 subnetting tool: &lt;a href=&#34;https://github.com/sii/sipcalc&#34;&gt;sipcalc&lt;/a&gt; &lt;a href=&#34;http://sipcalc.tools.uebi.net/&#34;&gt;Online version&lt;/a&gt; Great, Free training for IPv6, plus a free T-Shirt if you complete it. &lt;a href=&#34;https://ipv6.he.net/certification/&#34;&gt;HE IPv6 certification&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Comparison_of_DHCP_server_software&#34;&gt;DHCPv6 alternatives&lt;/a&gt; (YES, it exists) Looking to see if folks are tunneling using &lt;a href=&#34;https://tools.ietf.org/html/rfc3068&#34;&gt;6to4&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Teredo_tunneling&#34;&gt;Teredo&lt;/a&gt; in your network? Do netflow searches for these anycast addresses: 192.88.99.0/24 (6to4) 65.54.227.120 (Teredo) &lt;a href=&#34;https://howdoesinternetwork.com/2013/slaac&#34;&gt;Information on SLAAC&lt;/a&gt; (Auto-configuration) You might also be interested in a &lt;a href=&#34;https://www.youtube.com/watch?v=c8m2Sjre6t4&amp;amp;feature=youtu.be&#34;&gt;DNS podcast&lt;/a&gt; I did with Brothers WISP a while ago.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trouble with Tribbles .....errr NAT</title>
      <link>https://forwardingplane.net/post/trouble-with-tribbles-errr-nat/</link>
      <pubDate>Mon, 16 Jul 2018 10:24:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/trouble-with-tribbles-errr-nat/</guid>
      <description>

&lt;p&gt;As a follow up to my &lt;a href=&#34;https://www.forwardingplane.net/2018/06/nat-discussions/&#34;&gt;last post&lt;/a&gt;, I wanted to dive a little deeper into the world of address translation and to suss out some of the more compelling details.&lt;/p&gt;

&lt;p&gt;As I&amp;rsquo;ve said on many occasions, it pains me to see NAT referenced as a security mechanism. That said, where PNAT can be beneficial is in an overall privacy strategy, however, even that is comparatively low value and given the current state of global IPv4 allocations, arguably a detriment to usability - we’ll get to that - before we do, it is important to understand what ’NAT” as we call it today actually is, and to do that we need to explain all of the types of address translation (yes, there are several). When what was designed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Static, or one-to-one NAT&lt;/strong&gt; This is the original and most simple. It is comprised of an internal and corresponding external IP address. Every machine on the network still needs a public IP address for external mapping with this model. It was originally designed to solve the problem NAT was built to address: address translation between two networks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic NAT&lt;/strong&gt; This is a bit of a hybrid of static and the next type, NAPT. In this model, a NAT router maintains a set of external IPv4 address and cynically allocates one to internal addressed for outbound communication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network Address port translation (NAPT)&lt;/strong&gt; This is what most folks will mean when they say “NAT”. Really, this is address masquerading with port translation. This is what is often confused with a security tool, given that it provides a low level of obfuscation from external scanning and “hides” the hosts behind an externally facing address. This mechanism is typically conflated with stateful firewall implementation, which is not inclusive of this implementation.&lt;/p&gt;

&lt;p&gt;Because of the enterprise expectation of a modern UTM, NAPT is unfortunately used interchangeably by many security professionals. What NAPT actually buys is a mechanism for obfuscating many hosts to a smaller number of addresses, typically on the same device. By removing a single data reconnaissance vector (scanning of ipv4) you’re actually providing a new one that’s much easier to exploit (state table exhaustion). While it does work to prevent inbound scanning, that’s really all it does other than allow for network and port translation, it should not be expected to provide anything more than simple obscuring of the internal data. NAPT as security is primarily predicated on the notion that your source address is critically important and should be obscured. While this is true to a certain extent, this believe is somewhat antiquated and should be treated as such. Tracking via source address is still completely doable with simple tools, and geolocation is completely available (assuming it is correctly registered) based on the NAPT address. This is true of IPv4 and IPv6. What NAT does accomplish is prevention of scanning and external recon of potentially sensitive systems. That’s it. I would also assert that this over-stated sense of usefulness users a false sense of protection and encourages a relaxed diligence on hardening end hosts. The same level of protection can very easily be accomplished on a public IPv4 or IPv6 prefix with a simple stateful firewall or host based firewall. What NAPT buys is two fold:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Extension of IPv4 resources&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A poor shortcut to resource protection&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If sized appropriately, the expense of this is a very under-stated price tag&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A sizable cost for right-sized UTM&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Acceptance of the risk of a state table exhaustion DoS event&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Insecure internal resources, IoT devices, or BYOD nodes that are compromised or vulnerable.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without proper east-west filtering and a tight egress policy, this sheen of protection becomes significantly less useful. Add in the likelihood of &lt;a href=&#34;https://en.wikipedia.org/wiki/Carrier-grade_NAT&#34;&gt;carrier grade NAT (CGNAT)&lt;/a&gt; due to extreme &lt;a href=&#34;https://en.wikipedia.org/wiki/IPv4_address_exhaustion&#34;&gt;exhaustion of IPv4 resource&lt;/a&gt;, and you compound the limits with additional operational and troubleshooting overhead. IPv6, while the correct next step, does solve a large part of the issues, but not without it’s own [mostly one-time] costs, and given the large uptake in IPv6 from both the client and content perspectives, it would behoove every organization to get their IPv6 strategy sorted and underway.&lt;/p&gt;

&lt;h3 id=&#34;my-take&#34;&gt;&lt;strong&gt;My take&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;In the olden times of winnuke, providing a layer of confusion between the delicious caramel center of your network resource and the dragons of the internet was pretty important. The tracking mechanisms and scanning was mostly thwarted by the thin candy shell of the NAPT device. While this is still a very important aspect in your network architecture and defense in depth strategy, understanding the real risks and true value is important. The belief that NAPT provides your security (or that it is even a security tool at all) is somewhat misguided. With regard to privacy, the real threats lie in the metadata collection, and unless you are high profile or have a highly targeted business or personal footprint, the security incidents are far more nuanced and often happen at higher layers. In addition, lets not forget that a very, very real threat is not from random poking at our externally facing network resources, but in the social engineering attacks that are readily let right in the door. In addition, there are a number of significant risks that NAPT beings to bear based on it’s use of a state table to track IP to port mappings. All of these details need to be considered and continually revisited for relevance.&lt;/p&gt;

&lt;h3 id=&#34;further-study&#34;&gt;&lt;strong&gt;Further study&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Understanding that this is a very high profile, sensitive, and polarizing subject, additional reading and research is important. A few good white papers detailing shortcomings and misconceptions surrounding NAPT can be found &lt;a href=&#34;https://www.google.com/amp/s/www.calyptix.com/top-threats/ddos-attacks-101-types-targets-motivations/amp/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://f5.com/resources/white-papers/the-myth-of-network-address-translation-as-security&#34;&gt;here&lt;/a&gt;. In addition, &lt;a href=&#34;https://thenetworkcollective.com/&#34;&gt;The Network Collective&lt;/a&gt; invited me back to discuss privacy in networking. What resulted was a very spicy podcasts that really highlights the complexity of privacy as a concept in today&amp;rsquo;s internet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://vimeo.com/272381393&#34;&gt;Ep28 - For The Love Of NAT&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/networkcollective&#34;&gt;Network Collective&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Field Area Networking</title>
      <link>https://forwardingplane.net/post/field-area-networking/</link>
      <pubDate>Fri, 04 May 2018 13:38:15 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/field-area-networking/</guid>
      <description>

&lt;p&gt;It&amp;rsquo;s no secret that RF technologies and what like to call &amp;ldquo;specialty networking&amp;rdquo; are two of my favorite things in the networking space. &lt;strong&gt;Put them together and it is like chocolate and peanut butter!&lt;/strong&gt; Now, some may not consider Field Area Networking (FAN) to be &amp;ldquo;unconventional&amp;rdquo;, but it certainly falls well outside of the space of what is typically traditional enterprise networking. That said, Cisco&amp;rsquo;s FAN briefing at &lt;a href=&#34;http://techfieldday.com/event/nfd17/&#34;&gt;Network Field Day 17&lt;/a&gt; really got me excited and thinking about the alternatives for the IoT space. Other than cellular LTE or &lt;a href=&#34;https://www.link-labs.com/blog/what-is-lte-m&#34;&gt;LTE-M&lt;/a&gt;, there are few options for remote IoT devices with limited power draw and bandwidth requirements. So I went down the twisted path of investigating that space, and recently, I recorded a &lt;a href=&#34;https://thenetworkcollective.com/&#34;&gt;Network Collective&lt;/a&gt; short take on the subject, available below. The NFD 17 Cisco FAN briefing that this is based around is also worth a watch - this is really innovative stuff that many of us probably don&amp;rsquo;t think about. &lt;a href=&#34;https://vimeo.com/253197120&#34;&gt;Cisco Innovations for the Field Area Network with Rupak Chandra&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/sfoskett&#34;&gt;Stephen Foskett&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.  &lt;/p&gt;

&lt;h3 id=&#34;nick-s-take&#34;&gt;Nick&amp;rsquo;s take:&lt;/h3&gt;

&lt;p&gt;As we talk about things like cloud migration, automation, orchestration, and security architectures, lets consider the sheer scale of not just IoT networking but the sensor and other industrial networking _&lt;strong&gt;outside&lt;/strong&gt; _of the enterprise space. The sheer number of devices to be managed in these spaces is stupefying, and the transport of the data created by these networks as well as the management of the devices and network elements is a non-trivial detail. Building out networks such as a sensor network has a completely different scope and scale than a stereotypical enterprise or even a carrier service provider network. Keeping in mind just the number of hosts things like addressing schema become a critical part of the architecture (spoiler: you&amp;rsquo;re probably not going to be able to scale IPv4). Power and environmental considerations are also not nearly as squishy as they can be in a nice, controlled data center. Considering those data points, it&amp;rsquo;s pretty clear that there is plenty of interesting stuff happening in both the engineering and security areas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why you don&#39;t need a firewall [how to secure an open perimeter network]</title>
      <link>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</link>
      <pubDate>Mon, 08 Sep 2014 07:30:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</guid>
      <description>&lt;p&gt;I admit that the title was meant to be inflammatory.  However, there are use cases that aren&amp;rsquo;t terribly uncommon where an in-line security appliance is just not the correct tool for the job.  Someone once told me &amp;ldquo;a firewall protects a network like a fuse protects an electrical circuit&amp;rdquo;, and it&amp;rsquo;s mostly a correct statement. Firewall vendors will probably argue this and enterprise folks may discount this as heresy and call for burning me at the stake.  I can say, though, that the use of a firewall, IPS or other inline security appliance has presented many problems in many environments in my years as a network and security engineer and architect.    To that end, there are mechanisms for replacing the functions of a firewall and IPS with other options, which in many cases have a lower capital expense [although they may have a higher &lt;em&gt;initial&lt;/em&gt; operational expense].  I&amp;rsquo;ll outline them here, but before I do I want to re-iterate that NAT (PAT) is not a security tool, it&amp;rsquo;s a translation tool.  Nothing more.  So, I will leave that out.  If you don&amp;rsquo;t have appropriate IPv4 or IPv6 address space some of these things may need adjustments although they are still accomplishable by doing NAT on a border Layer 3 device.     Below is a talk that I gave at BroCon14 that is a rough outline of how to do this, if you don&amp;rsquo;t want to spend 30 minutes listening to me talk about it, the clifs notes are bulleted below, but the context is all in the video so I encourage you to watch it before responding to my post. For those that want to take a look, here is the talk. Here are the bullets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Announce only necessary resources &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One can utilize routing to only expose the pieces of the network that need to be exposed.  If you have a /16 and on;y a /24 needs to be exposed, only announce that prefix.  This is not that different than a typical DMZ.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter access to network, storage and management hardware&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Utilize best practice ingress filtering.  Follow &lt;a href=&#34;http://tools.ietf.org/html/bcp38&#34;&gt;BCP38&lt;/a&gt;. You should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Utilize host based firewalls&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a no-brainer.  Firewall as close to the resource as possible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Employ central host management&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make your life easy.  Cloud providers do it and it&amp;rsquo;s well documented nowadays.  There are &lt;a href=&#34;http://cfengine.com/&#34;&gt;many&lt;/a&gt; &lt;a href=&#34;http://puppetlabs.com/&#34;&gt;options&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Centralize logging and flow data collection&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another no brainer, you should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create baselines for traffic and activity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Data is good.  Knowledge is power.  Baselines are useful for both anomaly detection and forecasting and it&amp;rsquo;s not that hard to do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Deploy and tune IDS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Passive IDS system[s] off of a TAP or SPAN are key to this kind of architecture.  See video for more details but there are a bunch of good options. I prefer &lt;a href=&#34;http://www.bro.org&#34;&gt;Bro IDS&lt;/a&gt; but there are many players both commercial and FOSS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter with black hole routing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;http://www.forwardingplane.net/2011/10/black-hole-routing/&#34; title=&#34;Black Hole routing&#34;&gt;talked about this before&lt;/a&gt;.  Automating this is key to making it function efficiently and it is a fantastic tool.  This can be done with BGP (traditionally) or with something innovative like OpenFlow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Make use of regularly scheduled external vulnerability scanning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a great way to verify your exposure and works for any sized network.  Highly recommended.&lt;/p&gt;

&lt;p&gt;  Clearly this isn&amp;rsquo;t for everyone, and that&amp;rsquo;s ok.  For anyone that has struggled with issues involving security appliances either based on protocol, horsepower or interface speeds, there are options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aging hardware, IPv6 and the growing route table</title>
      <link>https://forwardingplane.net/post/aging-hardware-ipv6-and-the-growing-route-table/</link>
      <pubDate>Wed, 13 Aug 2014 05:00:56 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/aging-hardware-ipv6-and-the-growing-route-table/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;http://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34; title=&#34;BGP tools; troubleshooting and monitoring external routing in a nutshell&#34;&gt;blathered on about BGP&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2013/03/tuning-bgp-installed-ipv6-routes/&#34; title=&#34;Tuning BGP installed IPv6 routes&#34;&gt;forever&lt;/a&gt;.  Say what you will about the venerable protocol, it runs the interwebs, is reliable, extendable and well documented.  I&amp;rsquo;ve also &lt;a href=&#34;http://www.forwardingplane.net/2013/03/my-sdn-soapbox-now-with-ipv6/ &amp;quot;My SDN soapbox (now with IPv6!&#34;&gt;espoused&lt;/a&gt;&amp;rdquo;) &lt;a href=&#34;http://www.forwardingplane.net/2011/07/joint-techs-summer-2011-ipv6-talks/&#34; title=&#34;Joint Techs Summer 2011 IPv6 talks&#34;&gt;ad nauseam&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2011/03/ipv6-features-matrix-for-network-hardware/&#34; title=&#34;IPv6 Features matrix for Network Hardware&#34;&gt;about&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2012/11/and-a-purple-pony/&#34; title=&#34;And a purple pony.&#34;&gt;IPv6&lt;/a&gt;, so none of this [admitted] rant should really be a surprise coming from me. As of 8/12/2014, according to the &lt;a href=&#34;http://www.cidr-report.org/as2.0/#General_Status&#34;&gt;CIRD report&lt;/a&gt; (and many mailing lists), the &lt;a href=&#34;http://en.wikipedia.org/wiki/Default-free_zone&#34;&gt;default free&lt;/a&gt; global ipv4 routing table has reached 512k routes.  This is a milestone from many perspectives, but more importantly, it solidifies the fact that there is a great deal of equipment in critical points in the internet that is out of date and cannot perform as intended in its current configuration or function. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/08/8-12-2014-plot.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/08/8-12-2014-plot.png&#34; alt=&#34;8-12-2014-plot&#34; /&gt;&lt;/a&gt; This is a problem.  This is a problem for old hardware.  This is a problem for anyone that says their border router is &amp;ldquo;good enough&amp;rdquo;, and expects to take a default free table.  It&amp;rsquo;s a problem for anyone that wants to be multihomed on sub-par hardware.  I don&amp;rsquo;t think that many engineers would be surprised at how common this really is because network hardware is expensive, especially appropriate hardware that runs at site borders and in internet backbones, and by nature network engineer want to &amp;ldquo;make things work&amp;rdquo;.  I assert, however, that this may not be the best idea. The increased size of the default free zone has been forecasted for &lt;strong&gt;&lt;em&gt;years,&lt;/em&gt;&lt;/strong&gt;and with the inclusion of the 16k of ipv6 prefixes (&lt;a href=&#34;http://www.forwardingplane.net/2013/08/the-sad-state-of-ipv6-and-why-you-need-to-learn-it/&#34; title=&#34;The sad state of IPv6 and why you need to learn it.&#34;&gt;you are running IPv6&lt;/a&gt;, &lt;strong&gt;&lt;em&gt;right&lt;/em&gt;&lt;/strong&gt;?), resources quickly become exhausted on aging hardware.  This causes a cascading problem.  Forget the odd issues seen by not having enough TCAM to house the entire default free ipv4 table.  That problem is a haymaker swing that was telegraphed &lt;strong&gt;&lt;em&gt;long&lt;/em&gt;&lt;/strong&gt; ago and should have been coming; that ship has sailed. The bigger problem is that in flurrying around to deal with smaller TCAM sizes on gear that should have been replaced years ago, one course of action is to  repartition the TCAM, stripping away space allocated for IPv6 and allocating it to IPv4 in order to remain &amp;ldquo;default free&amp;rdquo; v4 tables.  I know because I&amp;rsquo;ve had to do this.  And it sucked. Personally, I felt a little like a sell out since I was robbing Peter to pay Paul and keep our &amp;ldquo;beloved&amp;rdquo; IPv4 running at the expense of the protocol we should have been migrated to years before but could not due to fear, uncertainty, doubt and, frankly, sheer laziness on the part of executives, developers, vendors and engineers. Blech.  I don not even like typing that.  We, I promise you,  in come cases are prolonging the deployment of IPv6 in favor of keeping v4 working due to this limitation.  And it stinks.  Like a skunk. Dipped in sewage. Wrapped in garbage.  Blown through an onion. It&amp;rsquo;s a banner day, make no mistake.  512k ipv4 routes in the global default free ipv4 table is a milestone.  However, lets not forget that much of the pain involved in expanding the ability to use more v4 would probably have been better served in expanding ipv6 support.  Be a catalyst for change and start learning and evangelizing IPv6. I often have a thought when discussing the merits of ipv6 with anyone that is arguing as to why they don&amp;rsquo;t want or need to deploy it: Would the internet/their network be a better place if we spent as much time making ipv6 work instead of going well out of our way to work around it? &lt;end rant&gt; =)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 3: IP Addressing and Subnet Tools</title>
      <link>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</link>
      <pubDate>Sat, 26 Jul 2014 16:46:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</guid>
      <description>&lt;p&gt;IP addressing and subnetting is a common interview subject. I assert that memorizing these things is useful for learning the concepts but ultimately futile in that it is time consuming and inefficient use of engineering time when tools can be utilized to accomplish the same goals in less time with fewer errors. Honestly, I gave up doing this kind of work manually around 10 years ago and have never regretted it, and in actuality, I&amp;rsquo;d probably struggle to do it at this point because it&amp;rsquo;s a repetitive process better suited by code. In the old days, subnetting IPv4 manually was a badge of honor (and one that I always hated), but I learned it because I needed to know it for cert tests and daily work. However, once I started doing IPv6 around 2001, it became clear that doing this kind of thing by hand was consuming more time than it needed to. Enter UNIX tools. HEX Hex isn&amp;rsquo;t really a tool as much as it&amp;rsquo;s a hack for your shell.  Remember the &lt;a href=&#34;http://www.forwardingplane.net/2014/04/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/&#34; title=&#34;NIX4NetEng #1 Managing dotfiles; pwn the unspoken pain of UNIX administration&#34;&gt;post on dotfiles&lt;/a&gt;? This is something that can go right into your .bashrc and allows for the quick and easy translation of decimal to hexidecimal, which is very useful for IPv6 dual stacking because [in my opinion] the appropriate addressing scheme is to match the last octet based on hex and not numerically. So, to do that one needs to be able to easily convert the last octet quickly and easily.  Adding this to your .bashrc will accomplish this:```
alias hex=&amp;lsquo;printf &amp;ldquo;%x\n&amp;rdquo;&amp;rsquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34; data-lang=&#34;Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34;&gt;(~) desktop $ hex 199
c7&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you&amp;rsquo;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```
10.143.27.&lt;sup&gt;199&lt;/sup&gt;&amp;frasl;&lt;sub&gt;27&lt;/sub&gt;
2001:DB8:1b::c7/120&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34; data-lang=&#34;There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34;&gt;(~) desktop $ sipcalc 2001:DB8:1b::c7/120
-\[ipv6 : 2001:DB8:1b::c7/120\] - 0
``````
\[IPV6 INFO\]
Expanded Address - 2001:0db8:001b:0000:0000:0000:0000:00c7
Compressed address - 2001:db8:1b::c7
Subnet prefix (masked) - 2001:db8:1b:0:0:0:0:0/120
Address ID (masked) - 0:0:0:0:0:0:0:c7/120
Prefix address - ffff:ffff:ffff:ffff:ffff:ffff:ffff:ff00
Prefix length - 120
Address type - Aggregatable Global Unicast Addresses
Network range - 2001:0db8:001b:0000:0000:0000:0000:0000 -
 2001:0db8:001b:0000:0000:0000:0000:00ff -&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for IPv4:&lt;code&gt;
(~) desktop $ sipcalc 10.143.27.199/27
-\[ipv4 : 10.143.27.199/27\] - 0
&lt;/code&gt;&lt;code&gt;
\[CIDR\]
Host address - 10.143.27.199
Host address (decimal) - 177150919
Host address (hex) - A8F1BC7
Network address - 10.143.27.192
Network mask - 255.255.255.224
Network mask (bits) - 27
Network mask (hex) - FFFFFFE0
Broadcast address - 10.143.27.223
Cisco wildcard - 0.0.0.31
Addresses in network - 32
Network range - 10.143.27.192 - 10.143.27.223
Usable range - 10.143.27.193 - 10.143.27.222
&lt;/code&gt;  Notable mention: Web tools are also useful and are becoming more prolific than the UNIX tools, but I will assume that you&amp;rsquo;re probably already loged into a UNIX system like a jump box or bastion host anyway and the tools are faster and thinner in that environment. That said, here are some useful web tools: &lt;a href=&#34;http://jodies.de/ipcalc&#34;&gt;ipcalc&lt;/a&gt; has the web interface to their tool. &lt;a href=&#34;http://www.gestioip.net/cgi-bin/subnet_calculator.cgi&#34;&gt;This site&lt;/a&gt; has a v4 and v6 calculator that works well and looks a lot like the output of sipcalc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install nfsen and nfdump on CentOS 6.5 for netflow and or sflow collection</title>
      <link>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</link>
      <pubDate>Sat, 11 Jan 2014 21:55:24 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</guid>
      <description>

&lt;p&gt;I am an absolutely &lt;strong&gt;huge&lt;/strong&gt; fan of statistical and instrumentation data, especially when it comes to traffic analysis, visualization and baselining.  I&amp;rsquo;ve rambled on about the importance of it at &lt;a href=&#34;http://searchnetworking.techtarget.com/news/2240212051/The-Der-Spiegel-NSA-revelations-What-network-engineers-need-to-know&#34;&gt;every opportunity&lt;/a&gt;.  As a result of that, I have been doing work with netflow and netflow-like data for a fairly long time.  My first collector was the &lt;a href=&#34;http://www.splintered.net/sw/flow-tools/&#34;&gt;OSU Flow tools&lt;/a&gt; based stuff  back around 13 years ago.  From there I played with all kinds of netflow tools, both &lt;a href=&#34;http://www.arbornetworks.com/&#34;&gt;commercial&lt;/a&gt; and open source, finally settling most of my focus on &lt;a href=&#34;http://nfdump.sourceforge.net/&#34;&gt;nfdump&lt;/a&gt; and &lt;a href=&#34;http://nfsen.sourceforge.net/&#34;&gt;nfsen&lt;/a&gt;. A bit of history: nfdump was born out of a research network, requiring it to be able to consume huge amounts of flows efficiently.  This makes it very powerful and very useful for nearly anyone, from the small technology tinkerer to to the enterprise network engineer up through the service provider architect.  nfsen is really just a php wrapper for nfdump, however, the really nice thing about it (other then being free, opensource software) is that it is extendable via &lt;a href=&#34;http://sourceforge.net/apps/trac/nfsen-plugins/&#34;&gt;plugins&lt;/a&gt;.  This is really what makes it a serious player from all angles.     From botnet detection to displaying IP geo-data on a map, there is likely a plugin for it.  Not finding what you are looking for?  Write it!  The architecture to use it is already there and documented. For ease of install, I chose CentOS 6.5.  Once you have a system up and running, to get nfsen/nfdump working, here is what you need to do:```
yum install -y httpd php wget gcc make rrdtool-devel &lt;br /&gt;
rrdtool-perl perl-MailTools perl-Socket6 flex byacc&lt;/p&gt;

&lt;p&gt;vi /etc/selinux/config
set SELINUX=disabled
reboot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-You&#39;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)```&#34; data-lang=&#34;You&#39;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)```&#34;&gt;sudo iptables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT
sudo ipt6ables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also allow for access to the web server you just installed.```
sudo ip6tables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 443 -j ACCEPT
sudo ip6tables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 80 -j ACCEPT&lt;br /&gt;
sudo iptables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 443 -j ACCEPT
sudo iptables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 80 -j ACCEPT&lt;br /&gt;
service iptables save
service ip6tables save&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Once you enable https you can safely remove the table rules for port 80. Start HTTPd```&#34; data-lang=&#34;Once you enable https you can safely remove the table rules for port 80. Start HTTPd```&#34;&gt;sudo service httpd start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable HTTPd at boot```
chkconfig httpd on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)```&#34; data-lang=&#34;Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)```&#34;&gt;wget http://downloads.sourceforge.net/project/nfdump/stable/nfdump-1.6.11/nfdump-1.6.11.tar.gz
wget http://downloads.sourceforge.net/project/nfsen/stable/nfsen-1.3.6p1/nfsen-1.3.6p1.tar.gz
``````
tar -zxvf nfdump-1.6.11.tar.gz 
./configure --enable-nfprofile --enable-nftrack --enable-sflow 
make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default 1.6.11 enables v9 and ipfix =)```
adduser netflow
vi /etc/group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add user netflow to group apache```&#34; data-lang=&#34;Add user netflow to group apache```&#34;&gt;vi etc/nfsen.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;change www user to apache Add your host to the file to allow for collection, my %sources looks like this:```
%sources = (
    &amp;lsquo;home&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9995&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#0000ff&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },
    &amp;lsquo;internal&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#FF0000&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },&lt;/p&gt;

&lt;h1 id=&#34;gw-port-9995-col-0000ff-type-netflow&#34;&gt;&amp;lsquo;gw&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9995&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#0000ff&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },&lt;/h1&gt;

&lt;h1 id=&#34;peer1-port-9996-ip-172-16-17-18&#34;&gt;&amp;lsquo;peer1&amp;rsquo;        =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;IP&amp;rsquo; =&amp;gt; &amp;lsquo;172.16.17.18&amp;rsquo; },&lt;/h1&gt;

&lt;h1 id=&#34;peer2-port-9996-ip-172-16-17-19&#34;&gt;&amp;lsquo;peer2&amp;rsquo;        =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;IP&amp;rsquo; =&amp;gt; &amp;lsquo;172.16.17.19&amp;rsquo; },&lt;/h1&gt;

&lt;p&gt;);&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow```&#34; data-lang=&#34;As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow```&#34;&gt;./install.pl etc/nfsen.conf
cd /home/netflow/bin/
./nfsen start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it start at boot (referenced from &lt;a href=&#34;http://sourceforge.net/mailarchive/message.php?msg_id=29434166&#34;&gt;this post&lt;/a&gt;).```
vi /etc/init.d/nfsen&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add this into the file:```&#34; data-lang=&#34;Add this into the file:```&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;#
&lt;span style=&#34;color:#75715e&#34;&gt;# chkconfig: - 50 50&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# description: nfsen&lt;/span&gt;

DAEMON&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/home/netflow/bin/nfsen

&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
		start&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON start
		;;
		stop&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON stop
		;;
		status&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON status
		;;
		restart&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON stop
		sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		$DAEMON start
		;;
		&lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Usage: &lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt; {start|stop|status|restart}&amp;#34;&lt;/span&gt;
		exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then chkconfig it on to start it at boot:```
chmod 755 nfsen &amp;amp;&amp;amp; chkconfig &amp;ndash;add nfsen &amp;amp;&amp;amp; chkconfig nfsen on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-That&#39;s pretty much it. Once you configure your netflow or sflow source, you should start seeing data in ~5-10 minutes. Point your browser at your web server and see: Mine is set as https://netmon/nfsen/nfsen.php (you&#39;ll need to include the &#34;nfsen.php&#34; uness you edit your apache config to recognize &#34;nfsen.php&#34; as in index.&#34; data-lang=&#34;That&#39;s pretty much it. Once you configure your netflow or sflow source, you should start seeing data in ~5-10 minutes. Point your browser at your web server and see: Mine is set as https://netmon/nfsen/nfsen.php (you&#39;ll need to include the &#34;nfsen.php&#34; uness you edit your apache config to recognize &#34;nfsen.php&#34; as in index.&#34;&gt;[![&lt;span style=&#34;color:#a6e22e&#34;&gt;Screen&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Shot&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2014&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.13.53&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PM&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM-913x1024.png)](http://www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM.png)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Common&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issues&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;see&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;one&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;every&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: nfsend connect() error: Permission denied!&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;It&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;always&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;permissions&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issue&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;documented&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;here&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//code.google.com/p/nfsenplugins/wiki/NFSEN_Installation_Gotchas).  You need to make sure that the nfsen package can read the nfsen.comm socket file. I fixed mine by doing```
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;chmod&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rwx&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;netflow&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My nfsen.conf file is using /home/netflow as the $BASEDIR.```
 &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34; alt=&#34;Screenshot 2014-01-11 13.04.17&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-You&#39;ll likely see &#34;Frontend - Backend version mismatch!&#34;, this is a known issue. There is a patch to fix it [here](http://sourceforge.net/p/nfsen/bugs/43/), I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:```&#34; data-lang=&#34;You&#39;ll likely see &#34;Frontend - Backend version mismatch!&#34;, this is a known issue. There is a patch to fix it [here](http://sourceforge.net/p/nfsen/bugs/43/), I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:```&#34;&gt;vi /usr/local/etc/rmflowdata.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste this in:```
#!/bin/bash&lt;/p&gt;

&lt;h1 id=&#34;prune-flow-data&#34;&gt;prune flow data&lt;/h1&gt;

&lt;h1 id=&#34;usage&#34;&gt;Usage:&lt;/h1&gt;

&lt;h1 id=&#34;30-is-the-number-of-days-adjust-accordingly&#34;&gt;+30 is the number of days, adjust accordingly.&lt;/h1&gt;

&lt;p&gt;/bin/find /home/netflow/profiles-data/live -name &amp;ldquo;nfcapd.*&amp;rdquo; -type f -mtime +30 -delete&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add this to your crontab:```&#34; data-lang=&#34;Add this to your crontab:```&#34;&gt;@daily /usr/local/bin/rmflowdata.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it executable&lt;code&gt;
chmod 755 /usr/local/bin/rmflowdata.sh
&lt;/code&gt;There are probably more elegant ways to do it but this works just fine, is lightweight and can be run manually if needed. There are a lot of great use cases for this.  If you&amp;rsquo;re looking for an SDN tie-in, guess what, there is one.  &lt;a href=&#34;http://blog.sflow.com/2010/05/configuring-open-vswitch.html&#34;&gt;OpenVSwitch supports sflow export&lt;/a&gt; and low-and-behold, nfsen and nfdump can easily consume and display sflow data. Want flow statistics on your all VM, OVS based SDN lab?  Guess what, you can! There are some other great things you can do with flow data, too, specifically sflow.  It&amp;rsquo;s not just for network statistics, there is a host &lt;a href=&#34;http://host-sflow.sourceforge.net/&#34;&gt;based sflow implementation&lt;/a&gt; that track any number of interesting metrics.  &lt;a href=&#34;http://blog.sflow.com/&#34;&gt;blog.sflow.com&lt;/a&gt; is a great resource for all things sflow (also, it does IPv6 by default, as it should). Ok, now you have &lt;strong&gt;absolutely&lt;/strong&gt; no good reason not to be collecting flow data.   It&amp;rsquo;s easy, it&amp;rsquo;s useful and almost everything (hosts, routers, virtual switches) supports exporting &lt;strong&gt;&lt;em&gt;some&lt;/em&gt;&lt;/strong&gt; kind of flow information.  You can even generate it from an inline linux box or a box off of an optical tap or a span port running &lt;a href=&#34;https://code.google.com/p/softflowd/&#34;&gt;softflowd&lt;/a&gt; or &lt;a href=&#34;http://www.ntop.org/products/nprobe/&#34;&gt;nprobe&lt;/a&gt;.   Both of which I can confirm work wonderfully (the above collector is gathering flows from softflowd running on my &lt;a href=&#34;http://www.forwardingplane.net/2013/07/building-a-secured-network-in-a-box/&#34; title=&#34;Building a secured network in a box&#34;&gt;security onion box&lt;/a&gt; as well as exported flows from pfflowd on a &lt;a href=&#34;http://www.pfsense.org/&#34;&gt;pfsense&lt;/a&gt; router).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sonicwall revisited - Now with IPv6 - and way too much licensing cruft.</title>
      <link>https://forwardingplane.net/post/sonicwall-revisited-now-with-ipv6-and-way-too-much-licensing-cruft/</link>
      <pubDate>Sat, 07 Dec 2013 15:45:06 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonicwall-revisited-now-with-ipv6-and-way-too-much-licensing-cruft/</guid>
      <description>&lt;p&gt;About a year ago &lt;a href=&#34;http://www.forwardingplane.net/2012/12/sonicwall-old-dog-learns-some-new-tricks/&#34; title=&#34;Sonicwall – Old dog learns [some] new tricks&#34;&gt;I did a brief review of the &amp;ldquo;new Sonicwall&amp;rdquo;&lt;/a&gt;, specifically a smaller branch office device that was said should have had all of the features of the larger devices.  I proposed that it had some significant limitations (much to the disagreement of a great deal of folks).  However, I stand by my statements.  If you ignore the fact that firewalls often cause more problems than they solve, that NAT is a nightmarish kludge (and not a security mechanism), and &lt;a href=&#34;http://www.forwardingplane.net/2013/03/why-hardware-firewalls-are-the-walking-dead/&#34; title=&#34;Why hardware firewalls are the walking dead&#34;&gt;will likely be phased out for better options eventually&lt;/a&gt;, the SonicOS I tested was pretty limited as far as what I believe should be features. Let&amp;rsquo;s be clear, I&amp;rsquo;m mostly talking about IPv6.  I&amp;rsquo;ve ranted and raved that anyone not doing IPv6 is already years behind.  Get on the ball, you&amp;rsquo;re already late to the game.  Yesterday, a colleague said something that resonated with me regarding this and it got me thinking about how much IPv6 support SonicOS had added.  Many folks that aren&amp;rsquo;t doing IPv6 think that instead of doing something that may be a little hard that they&amp;rsquo;re just not going to do anything.   They&amp;rsquo;re dead wrong.  They&amp;rsquo;re forcing themselves to do something else like CGN or multi-layer NAT, or something else equally (or more) unpleasant.  And then they&amp;rsquo;ll do IPv6 anyway after that. It &lt;strong&gt;is&lt;/strong&gt; inevitable. But I digress…. I pulled my old TZ-210 out and upgraded it to SonicOS Enhanced 5.9.0.2-107o.  What a pleasant surprise!  A &lt;strong&gt;huge&lt;/strong&gt; amount of IPv6 support added!  &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-v4.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-v4.png&#34; alt=&#34;sonicwall-v6-v4&#34; /&gt;&lt;/a&gt; They&amp;rsquo;ve really done their homework here.  I was very surprised to see things like DHCPv6-PD with interface tracking.  Well done, Dell.  This will allow for small and home offices to take advantage of the Comcast and AT&amp;amp;T DHCPv6-PD that they&amp;rsquo;ve been offering for a while now, and lets be honest, once it&amp;rsquo;s on, most folks will never even realize they&amp;rsquo;re using IPv6. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-dhcpv6.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-dhcpv6-257x300.png&#34; alt=&#34;sonicwall-dhcpv6&#34; /&gt;&lt;/a&gt; &amp;lt;== This is a giant step forward for reasons that are far beyond simple protocol support.   &lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-fw-rules.png&#34; alt=&#34;sonicwall-v6-fw-rules&#34; /&gt;   I&amp;rsquo;m very happy to see this level of support from Dell/Sonicwall.  I expected to put this box in, turn it on, use it for a few days and turn it off.  I set it up in transparent mode, tuned the rules a bit….and I have no real plans of taking it out.  I&amp;rsquo;m actually pretty happy with it for the application I&amp;rsquo;m using it for.  It doesn&amp;rsquo;t seem to really impede anything I want to do (after TCP ssh timeout rules to a reasonable time; BTW, timeouts are one of the reasons I don&amp;rsquo;t like firewalls).     This brings me to my problem with Sonicwall (and many network and network security vendors).  My licenses have all expired. I can understand having to license services that cost money because they&amp;rsquo;re licensed upstream services.  I get that, I really do.  However,  Some of the things that Dell requires licenses for seem a bit extreme to me.  The fact that I get essentially zero visualization options once the licenses expire is downright shameful.  No worries, I&amp;rsquo;ll just export Netflow/IPFIX data.  Nope, also a licensed feature.  You heard that right.  No flow export, no real time monitor.  Heck, I can&amp;rsquo;t even look at interface graphs on-box. I have to poll with a 3rd party tool suite.  Realistically, one gets significantly better instrumentation from a default &lt;a href=&#34;http://www.pfsense.org&#34;&gt;pfSense&lt;/a&gt; load.  And pfSense has had IPv6 support for years. If you take away all of the downright shameful licensing requirements to do anything useful with trending and instrumentation, this is a good platform. Their IPv6 support is solid now.   However, for anyone running  networks  that require instrumentation and visualization, you had better budget for [unnecessary] fees or have 3rd party mechanisms for collecting the data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The sad state of IPv6 and why you need to learn it.</title>
      <link>https://forwardingplane.net/post/the-sad-state-of-ipv6-and-why-you-need-to-learn-it/</link>
      <pubDate>Mon, 05 Aug 2013 11:18:03 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/the-sad-state-of-ipv6-and-why-you-need-to-learn-it/</guid>
      <description>&lt;p&gt;I have been learning and using IPv6 for a quite a while, even before I worked in research and education, back in the ISP days.  I thought I should learn it because, frankly, I figured we&amp;rsquo;d all be converted to it by now, already whole hog using it like it was the layer 3 addressing mechanism that it is.  Flashback: My first IPv6 access was via a tunnel to HE a long, long time ago and before that I was reading what I could about it.  I&amp;rsquo;ve been evangelizing IPv6 for about that long, too.  I&amp;rsquo;ve taught IPv6 networking workshops on many occasions showing eager network engineers, security engineers, sysadmins, incident responders and even the occasional CIO how to understand, interpret and plumb v6. Now, I love OpenFlow and SDN as much as the next network geek, and I think it&amp;rsquo;s about as disruptive and game changing as the next guy.  However, IPv6 is next.  There.  I said it.  We need it.  Hey, OpenFlow 1.3 supports it so there is your tie in.  We&amp;rsquo;re out of v4 for the most part and, lets be honest, NAT is a freaking abomination. It&amp;rsquo;s not a solution to anything other than over complicating a transit path with translational mappings. I recently received an email from a buddy from my first days in tech about &lt;a href=&#34;http://www.enhancedip.org/home&#34;&gt;a project that some colleagues of his had been working on&lt;/a&gt; and while at a base technical level it&amp;rsquo;s an interesting concept, this project infuriated me.  This is the problem with the industry, especially in North America. The right thing, in my opinion, is to put effort like this aside and concentrate on IPv6 development and deployment. Projects like this, while good intentioned and technically innovative, delay he inevitable and give lazy, &amp;ldquo;luddist&amp;rdquo; engineers and developers a way to keep ipv4 even longer. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/alarm_clock.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/alarm_clock.jpg&#34; alt=&#34;alarm_clock&#34; /&gt;&lt;/a&gt; I have mostly just kept this to myself publicly.  Sure, I blather on about it the office and preach about IPv6 over beers with networking professionals, but mostly I just suffer and bite my tongue when I hear some enterprise architect talk about firewalls, NAT, IPv4 only security appliances and how &amp;ldquo;they don&amp;rsquo;t need IPv6&amp;rdquo; or how &amp;ldquo;the enterprise isn&amp;rsquo;t ready&amp;rdquo; [for IPv6]. Wake up call, you&amp;rsquo;re late. &lt;strong&gt;IPv6 is here&lt;/strong&gt;.  It&amp;rsquo;s &lt;strong&gt;been&lt;/strong&gt; here.  It&amp;rsquo;s all over in Asia and other parts of the world.  It&amp;rsquo;s supported by default by your consumer service provider.  Guess what?  It&amp;rsquo;s too bad that your lazy developers didn&amp;rsquo;t code your apps for it. It&amp;rsquo;s too bad that your specialized app only supports IPv4 and probably doesn&amp;rsquo;t even understand DNS.  You&amp;rsquo;ll eventually have to deal with IPv6.  In actuality, you&amp;rsquo;re likely already using it and have no idea it is happening.  If someone finally tore that legacy XP machine from your change-despising hands you&amp;rsquo;re probably tunneling your traffic.  Unless you explicitly disable IPv6 on a modern operating system, you&amp;rsquo;re using it.  It may be just locally on your segment, but it&amp;rsquo;s on.  &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/borg.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/08/borg.jpg&#34; alt=&#34;borg&#34; /&gt;&lt;/a&gt; Get on board.  Resistance is futile.  There are great resources for learning IPv6.  Your desktop and server OS have probably supported it for years.  Your routers likely support routing it.  The last parts are going to be the security devices, policy and the legacy apps.  If you&amp;rsquo;re a networking guy, go do the &lt;a href=&#34;http://ipv6.he.net/certification/&#34;&gt;HE tunnelbroker certification process. &lt;/a&gt; They have a very good fundamentals tutorial and it covers everything you need to know to get started.  You can also get a cool shirt and some code to shove into your website.  Mine looks like this:// &amp;lt;![CDATA[ var user = &amp;ldquo;buraglio&amp;rdquo;; display_swf(user); // ]]&amp;gt;   Take the plunge, get some IPv6 going in your enterprise, home network, lab, whatever.  Learn and educate.  It will only improve your value and you&amp;rsquo;re going to have to learn it later anyway.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Feature Matrix (Again)</title>
      <link>https://forwardingplane.net/post/ipv6-feature-matrix-again/</link>
      <pubDate>Fri, 17 May 2013 22:01:27 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-feature-matrix-again/</guid>
      <description>&lt;p&gt;There has been some recent chatter on the &lt;a href=&#34;http://lists.cluenet.de/mailman/listinfo/ipv6-ops&#34;&gt;IPv6 Ops mailing list&lt;/a&gt; about the feature matrix. Sadly, I&amp;rsquo;ve let this sort of wither on the vine for a while in favor of OpenFlow and SDN.  At the end of the day, though, as a whole we actually &lt;strong&gt;need&lt;/strong&gt; IPv6 more than SDN and OpenFlow at this moment in time, so I&amp;rsquo;m resurrecting it.  It is available &lt;a href=&#34;https://docs.google.com/spreadsheet/ccc?key=0AkRPccDFxV1kdEVNNEhFbG9UZWJlNVJ4NHJlWGtWV1E&amp;amp;amp;usp=sharing&#34;&gt;here&lt;/a&gt;. A few additions have been made and there is now a &amp;ldquo;last edited&amp;rdquo; cell so folks can tell if the data is stale or not.  What we need now is your input.  Do you have experience with something that isn&amp;rsquo;t on here?  Send over some details.  We&amp;rsquo;ll get it added.  Don&amp;rsquo;t be shy.  This is important.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A missing link in small MPLS, 10G devices.</title>
      <link>https://forwardingplane.net/post/a-missing-link/</link>
      <pubDate>Fri, 29 Mar 2013 04:43:17 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/a-missing-link/</guid>
      <description>&lt;p&gt;Lately I&amp;rsquo;ve been lamenting the fact that there seems to be a lack of options in a very specific product level.  Lets say you have a network that looks like this:   &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/10G-Bldg1.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/10G-Bldg1.jpg&#34; alt=&#34;10G-Bldg&#34; /&gt;&lt;/a&gt;Right Away you&amp;rsquo;re limited since you need MPLS and more than 2 10G interfaces. Even more so if you require full support for IPv6 and ISIS. If budget is of any concern, you&amp;rsquo;re in real trouble. For many, Cisco pricing and smartnet is potentially going to exclude anything reasonable from them.  There are a substantial amount of non-enterprise folks out there that can&amp;rsquo;t afford the significant Cisco price tag but need the features.  I am here to say, this is a problem.  The attitude of &amp;ldquo;if you want the best you have to pay for it&amp;rdquo; doesn&amp;rsquo;t apply.  There is a real need for viable alternatives, not just because we need them, but because competition is a good thing for everyone. Juniper has the MX80, but it has a carrier grade price tag as well.  Juniper has limited MPLS support on the EX series, but the EX4200, which is arguably the most tried and true, has only 2 ports of 10G and, as mentioned, limited MPLS support.  The EX4500 is a tad better with its huge amount of 10G ports, but it has the same limited MPLS support and a crippled ARP and FIB table.  The 4550 with it&amp;rsquo;s single PFE sounds exciting but it has even less. Then you have the Brocade CES/R.  It is close.  The newer version has  4 x 10G ports, MPLS support (with a license), more appropriately priced support and, as a value add, very good OpenFlow support.  It is still limited as far as 10G scalability, so adding more access switches could be problematic. HP has some great products in the Procurve series.  They&amp;rsquo;re inexpensive, rock solid and packed with features. Unfortunately, the ones that meet the port density are fairly good sized chassis and none of them have MPLS.  Now, they do have an intriguing line up in the H3C series.  I believe there may be an option there, however, I have no idea on pricing and have yet to see one actually do MPLS (although they claim support).  I&amp;rsquo;m cautiously optimistic. Then you have Alcatel Lucent.   They do MPLS, they&amp;rsquo;re carrier devices.  They offer a 1U ( (&lt;a href=&#34;http://www.alcatel-lucent.com/products/7210-service-access-switch&#34;&gt;7210 Service Access Switch&lt;/a&gt;) device but I have no idea on cost and I&amp;rsquo;m still looking for 10G port density.  I suspect it is very reasonable.  Their &lt;a href=&#34;http://www.forwardingplane.net/2010/12/alcatel-lucent-rancid-scripts/&#34; title=&#34;Alcatel Lucent RANCID scripts&#34;&gt;CLI is a bit different&lt;/a&gt; but they&amp;rsquo;re very robust devices.  I&amp;rsquo;ve not used any but the 7750, so I cant comment as to how the smaller ones look.  It&amp;rsquo;s a possibility if it has the 10G ports. Arista is very close but they fall short on the MPLS support.   The primary take away from this commentary is that there are not a lot of options that meet the following criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1-2U&lt;/li&gt;
&lt;li&gt;&amp;gt; 4 10G ports&lt;/li&gt;
&lt;li&gt;MPLS&lt;/li&gt;
&lt;li&gt;Dual power supplies&lt;/li&gt;
&lt;li&gt;&amp;gt; 16,000/4,000 IPv4/IPv6 routes&lt;/li&gt;
&lt;li&gt;IPv6 support&lt;/li&gt;
&lt;li&gt;ISIS&lt;/li&gt;
&lt;li&gt;40G uplink&lt;/li&gt;
&lt;li&gt;OpenFlow support or roadmap&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reasonably priced&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I keep coming back to the old adage of &amp;ldquo;Cheap, Fast, Reliable.  Pick Two&amp;rdquo; and it drives me crazy.  We should have more options but I don&amp;rsquo;t think we do.  I would absolutely &lt;strong&gt;love&lt;/strong&gt; to be wrong, but every time I look at this I feel like I am picking out a cell phone plan.  The affordable ones are never quite enough and the plan above is overkill and too expensive.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My SDN soapbox (now with IPv6!)</title>
      <link>https://forwardingplane.net/post/my-sdn-soapbox-now-with-ipv6/</link>
      <pubDate>Sat, 23 Mar 2013 21:45:17 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/my-sdn-soapbox-now-with-ipv6/</guid>
      <description>&lt;p&gt;This week there was a lot of buzz about SDN (as usual). There was a&lt;a href=&#34;http://www.lightreading.com/blog/software-defined-networking/sdns-killer-app-more-network-control/240151376&#34;&gt; lightreading thread that I commented on&lt;/a&gt; and a fantastic read by &lt;a href=&#34;http://www.twitter.com/networkstatic&#34;&gt;Brent Salisbury&lt;/a&gt; about &lt;a href=&#34;http://networkstatic.net/be-the-steamroller-not-the-road/&#34;&gt;being the steamroller and not the road&lt;/a&gt; that got me thinking about OpenFlow and SDN in a way I had not before. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/fearofchange.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/fearofchange.jpg&#34; alt=&#34;fearofchange&#34; /&gt;&lt;/a&gt; &lt;soapbox&gt; All that is old is new again. I remember when internal networks were small and routing protocols were taboo in many internal environments. RIP (AKA routing by rumor) was about as innovative as we got, OSPF was &amp;ldquo;too complex&amp;rdquo; and was &amp;ldquo;software changing the network topology&amp;rdquo;, according to some folks I worked with in what seems like a lifetime ago. Clearly they didn&amp;rsquo;t have the entire picture and were clouded by FUD. Now using a link state protocol is a standard and one would probably not consider building a complex, production layer 3 network without an IGP like ISIS or OSPFv[&lt;sup&gt;2&lt;/sup&gt;&amp;frasl;&lt;sub&gt;3&lt;/sub&gt;] (or even EIGRP&amp;hellip;I guess). This is simple evolution and progression. The more folks try to resist, the further behind they&amp;rsquo;ll be left. SDN and OpenFlow are not unlike IPv6 in many ways when viewed from a technology implementation perspective, and in fact, we can probably learn from the resistance to IPv6 to help us with the acceptance of SDN and OpenFlow. V6 has been coming for years. It&amp;rsquo;s &lt;em&gt;mostly&lt;/em&gt; here. Backbones have been running it for a very long time and we actually &lt;strong&gt;need&lt;/strong&gt; it on the client side to account for the huge number of hosts now connecting to the public Internet. Many entities, especially very risk averse enterprises, are struggling to resist it (IPv6) and hold onto NAT and IPv4 as long as possible.  While this will almost certainly buy them a handful of years, it&amp;rsquo;s futile.  Translation and transition tech geared toward the folks that refuse to adapt will allow them to grasp onto legacy methodologies for a bit longer, but as the Borg say, &amp;ldquo;resistance is futile&amp;rdquo;. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/Borg.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/Borg-300x274.jpg&#34; alt=&#34;Borg&#34; /&gt;&lt;/a&gt; These same things are all going to happen with SDN. What we say is &amp;ldquo;OpenFlow is simply an open protocol for creating flow based forwarding.  It allows for the inclusion of other factors such as Layer4 to make those decisions more tunable and granular.&amp;rdquo; What skeptics hear is &amp;ldquo;There is a hole in the boat, we&amp;rsquo;re all going to die&amp;rdquo; or &amp;ldquo;Network Engineers are all going to be out of a job!&amp;rdquo; or &amp;ldquo;your job is going to be replaced by software&amp;rdquo; or even &amp;ldquo;software and applications will make the way we think about and do everything obsolete&amp;rdquo;, all of which translate to &amp;ldquo;dramatic and drastic change&amp;rdquo;. Most of this is just sensationalism and FUD. In my opinion, though, it is all based in truth .  It may be &amp;ldquo;drastic&amp;rdquo; but it&amp;rsquo;s not dramatic.  It&amp;rsquo;s natural evolution.  It will happen slowly.  We will have to change they way we do things. The proven fact we as networking and security professionals need to remember is that change going to happen with or without SDN, it&amp;rsquo;s the nature of an innovative field like technology to change.  None of us would be doing what we do without being inquisitive enough to figure out problems, challenge norms and shift thinking. SDN, just like IPv6, is happening.  Personally I&amp;rsquo;d rather be knowledgeable about as opposed to in the dark and scrambling to learn about them at the 11th hour. &lt;/soapbox&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tuning BGP installed IPv6 routes</title>
      <link>https://forwardingplane.net/post/tuning-bgp-installed-ipv6-routes/</link>
      <pubDate>Sat, 02 Mar 2013 13:15:37 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/tuning-bgp-installed-ipv6-routes/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently run into a situation where there was no longer enough space in the FIB to handle both the full IPv4 global table and the full IPv6 global table.  We prefer to run a default-free network within this particular SP network, but in this case, until a hardware refresh can happen, we&amp;rsquo;ll need to adjust that.  Given what we knew about the size of both tables, it made more sense to take a default IPv6 route from one transit provider and filter the rest.  How we did this isn&amp;rsquo;t a groundbreaking marvel by any means, but it&amp;rsquo;s probably worth writing down for someone else to reference since it also applies to IPv4. Since we already have global tables, a request to add IPv6 default to our existing full IPv6 table was made to one transit provider.  After that request was fulfilled, filter adjustments were made.  It should be note that all of these configs were generated off of Brocade MLX routers, so they may look a tad different than an IOS device. Create a prefix list to reference that will allow default:```
ipv6 prefix-list V6-PERMIT-DEFAULT seq 5 permit ::/0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Create the route map:```&#34; data-lang=&#34;Create the route map:```&#34;&gt;route-map IPv6-TRANSIT-DEFAULT-IN permit 100
match ipv6 address prefix-list IPv6-PERMIT-DEFAULT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the route-map to the peer:```
neighbor 2001:fd8:e00::2 route-map in IPv6-TRANSIT-DEFAULT-IN&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Before:```&#34; data-lang=&#34;Before:```&#34;&gt;Neighbor Address AS#  State Time  Rt:Accepted Filtered Sent ToSend
2001:fd8:e00::2 65001 ESTAB 15d10h34m  12003    0       14    0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After:```
Neighbor Address AS#  State Time  Rt:Accepted Filtered Sent ToSend
2001:fd8:e00::2 65001 ESTAB 15d10h34m     1    12002     14    0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now we&#39;ll need to filter the prefixes of every other peer to allow for only IPv6 routes sized /32 or larger:```&#34; data-lang=&#34;Now we&#39;ll need to filter the prefixes of every other peer to allow for only IPv6 routes sized /32 or larger:```&#34;&gt;route-map IPv6-BILAT-IN permit 100
 match ipv6 address prefix-list IPv6-PERMIT-ANY-32
 set community 65403:1425
 set local-preference 200 

ipv6 prefix-list IPv6-PERMIT-ANY-32 seq 5 permit ::/0 le 32&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once applied to the peers this will limit the routes installed into the FIB. Install them by adding the route-map to the appropriate peers:&lt;code&gt;
neighbor 2001:db8:0:300e::1 route-map in IPv6-BILAT-IN
&lt;/code&gt;```
SSH@RTR7#sh ipv6 bgp summary
  BGP4 Summary
  Router ID: 10.6.16.10   Local AS Number: 65403
  Confederation Identifier: not configured
  Confederation Peers:
  Maximum Number of IP ECMP Paths Supported for Load Sharing: 1
  Number of Neighbors Configured: 16, UP: 16
  Number of Routes Installed: 15297, Uses 1315542 bytes
  Number of Routes Advertising to All Neighbors: 50641 (5632 entries), Uses 270336 bytes
  Number of Attribute Entries Installed: 26036, Uses 2343240 bytes
  Neighbor Address  AS#         State     Time     Rt:Accepted Filtered Sent     ToSend&lt;/p&gt;

&lt;p&gt;2001:db8:1900:b::2
                      65531       ESTAB    56d 8h52m    14       0        2        0&lt;br /&gt;
  2001:db8:f000:213a::1
                      65164       ESTAB     3d19h31m    4187     4535     2        0&lt;br /&gt;
  2001:db8:0:300e::1
                      65381       ESTAB    56d 8h35m    5087     6532     2        0&lt;br /&gt;
  2001:db8:5fff:1::1
                      65237       ESTAB   149d16h18m    11       0        2        0&lt;br /&gt;
  2001:db8:1:102::1
                      65100       ESTAB    24d16h55m    3        0        2        0&lt;br /&gt;
  2001:db8:f10:1::1   65403       ESTAB   453d12h42m    3        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::2   65403       ESTAB   101d21h24m    2        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::3   65403       ESTAB   453d11h29m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::4   65403       ESTAB   453d11h 8m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::5   65403       ESTAB   453d12h17m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::6   65403       ESTAB   453d12h 3m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::7   65403       ESTAB   453d11h36m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::8   65403       ESTAB   160d17h52m    5078     0        5625     0&lt;br /&gt;
  2001:db8:f10:1::9   65403       ESTAB   453d11h 3m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:6013::2
                      65532       ESTAB    15d19h50m    904      3        2        0&lt;br /&gt;
  2001:db8:f10:6016::2
                      65527       ESTAB   126d15h29m    1        0        2        0
```As you can see, peers on AS65164 and AS65381 are both filtering a large amount of traffic that is smaller than /32. Couple that with the inclusion of a default route and the traffic has a good deal of best path and a default for everything else. Its not exactly the most elegant, but it does solve a problem that folks may be seeing on aging equipment with limited resources.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Toolkit 1.3 fun - scan6</title>
      <link>https://forwardingplane.net/post/ipv6-toolkit-1-3-fun-scan6/</link>
      <pubDate>Wed, 20 Feb 2013 10:53:38 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-toolkit-1-3-fun-scan6/</guid>
      <description>&lt;p&gt;Recently &lt;a href=&#34;http://www.si6networks.com/tools/ipv6toolkit/&#34;&gt;SI6 released the IPv6 Toolkit 1.3 &lt;/a&gt;  This release is on the heels of this &lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-opsec-ipv6-host-scanning-00&#34;&gt;IETF draft &lt;/a&gt; on IPv6 host scanning.  It was long thought that scanning an IPv6 network was impossible.  The address space was too large and reliably ascertaining the hosts from it would be too time consuming to even attempt.  However, as &lt;a href=&#34;http://en.wikipedia.org/wiki/Hans_Zarkov&#34;&gt;Dr. Hans Zarkov&lt;/a&gt; says in the 1980 classic cult film of my youth, &lt;a href=&#34;http://en.wikipedia.org/wiki/Flash_Gordon_(film)&#34;&gt;Flash Gordon&lt;/a&gt;, &amp;ldquo;You can&amp;rsquo;t beat the human spirit!&amp;ldquo;  That fine community out there has thought outside the box and found a way.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.thiel-a-vision.com/wp-content/uploads/2010/07/flash68sm.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a network engineer by profession, but I&amp;rsquo;ve been a security guy more than once during my ~15 years doing IT work; I think there is definite value in studying &amp;ldquo;the dark side&amp;rdquo; and learning it&amp;rsquo;s power.  Couple that with my zealotry of IPv6&amp;hellip;.and I&amp;rsquo;ve found a time vortex. Scanning IPv6 is not like scanning IPv4.   It can&amp;rsquo;t be.  A /64 network has 18,446,744,073,709,551,616 (18 quintillion) unique addresses and a /64 is the default allocation for an end user subnet.  Have fun scanning that one by one.  The methodology used by scan6 is pretty innovative, but first you have to build it. The &lt;a href=&#34;http://www.si6networks.com/tools/ipv6toolkit/&#34;&gt;IPv6 toolkit&lt;/a&gt; is available via download &lt;a href=&#34;http://www.si6networks.com/tools/ipv6toolkit/ipv6-toolkit-v1.3.1.tar.gz&#34;&gt;here&lt;/a&gt;.  It is current;y supported under FreeBSD, NetBSD, OpenBSD, Linux, and Mac OS X.  I&amp;rsquo;ve chosen to build mine on my laptop, a macbook pro running OS 10.8. It&amp;rsquo;s pretty straightforward to build assuming you have the Developers Tools and CLI support added. &lt;em&gt;(~/Downloads/ipv6-toolkit-v1.3) Tardis $ make&lt;/em&gt; &lt;em&gt;gcc -Wall -o flow6 tools/flow6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o frag6 tools/frag6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o icmp6 tools/icmp6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o jumbo6 tools/jumbo6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o na6 tools/na6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o ni6 tools/ni6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o ns6 tools/ns6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o ra6 tools/ra6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o rd6 tools/rd6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o rs6 tools/rs6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o scan6 tools/scan6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o tcp6 tools/tcp6.c -lpcap -lm&lt;/em&gt;   That&amp;rsquo;s it.  If you want to install it in the global environment, to a &amp;ldquo;&lt;em&gt;make install&lt;/em&gt;&amp;rdquo; Now for the good stuff.  The docs are well written for this tool. Here is an example of scanning a local segment in verbose mode and the output: &lt;em&gt;(~/Downloads/ipv6-toolkit-v6.8) tardis $ sudo ./scan6 -i en6 -l -e -v&lt;/em&gt; &lt;em&gt;Link-local addresses:&lt;/em&gt; &lt;em&gt;fe80::20d:b9ff:fe68:8ca6 @ 00:0d:b9:68:8c:a6&lt;/em&gt; &lt;em&gt;fe80::264:d6ff:fe25:9704 @ 00:64:d6:25:97:04&lt;/em&gt; &lt;em&gt;fe80::26f:f8ff:fe06:dcb4 @ 00:6f:f8:06:dc:b4&lt;/em&gt; &lt;em&gt;fe80::22cf:80ff:fea8:ec26 @ 20:cf:80:a8:ec:26&lt;/em&gt; &lt;em&gt;fe80::224:86ff:fe9f:c628 @ 00:24:86:9f:c6:28&lt;/em&gt; &lt;em&gt;fe80::267:f2ff:fe52:8574 @ 00:67:f2:52:85:74&lt;/em&gt; &lt;em&gt;fe80::8ed0:f8ff:fe8a:4d29 @ 8c:d0:f8:8a:4d:29&lt;/em&gt; &lt;em&gt;fe80::62fa:cdff:fe86:62bd @ 60:fa:cd:86:62:bd&lt;/em&gt; &lt;em&gt;fe80::629a:ddff:fe45:6c08 @ 60:9a:dd:45:6c:08&lt;/em&gt; &lt;em&gt;Global addresses:&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24::6 @ 00:0d:b9:68:8c:a6&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:224:86ff:fe9f:c628 @ 00:24:86:9f:c6:28&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:22cf:80ff:fea8:ec26 @ 20:cf:80:a8:ec:26&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:26f:f8ff:fe06:dcb4 @ 00:6f:f8:06:dc:b4&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:267:f2ff:fe52:8574 @ 00:67:f2:52:85:74&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:62fa:cdff:fe86:62bd @ 60:fa:cd:86:62:bd&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:8ed0:f8ff:fe8a:4d29 @ 8c:d0:f8:8a:4d:29&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:629a:ddff:fe45:6c08 @ 60:9a:dd:45:6c:08&lt;/em&gt; This example,  taken straight from the documentation and run on my local network (with MAC and v6 addresses changed to protect the innocent), will &amp;ldquo;Perform host scanning on the local network (“-l” option) using interface “eth0” (“-i” option). Use both ICMPv6 echo requests and unrecognized IPv6 options of type 10xxxxxx (default). Print link- link layer addresses along with IPv6 addresses (“-e” option). Be verbose (“-v” option).&amp;rdquo; One of the interesting things I saw available in this scan6 tool was the ability to narrow down a search based on a known OUI.  If someone wanted to search for virtual machines hosted by VMWare host and the IPv4 address of the VMWare host is known, this command would be useful for scanning from a host off net, scanning a network in the lab area:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo ./scan6 -i en0 -d 2001:db8:e00:4000::/64 –tgt-virtual-machines vmware –tgt-ipv4-embedded 10.17.4.&lt;sup&gt;195&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; What this does is target the /64 but narrow down the search to vmwre specific virtual machines hosted on the vmware host at IPv4 address 10.17.4.&lt;sup&gt;195&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt;. It is able to accomplish this because it can make assumptions about vmware (or virtual box) based on their OUI and how they build their The OUI will always be set to  00:05:59 for VMWare.  Additionally, The next 16-bits of the MAC address are set to the same value as the last 16 bits of the console operating system&amp;rsquo;s primary IPv4 address. If that were not enough, the final eight bits of the MAC address are set to a hash value based on the name of the virtual machine&amp;rsquo;s configuration file. That, according to the IETF draft and math, means that if you know the VMWare host IPv4 address you can reduce a scan of 64 bits down to just 8 bits.  This is a powerful set of tools that this post does not even scratch the surface of. Be careful using this scan tool, there are a number of devices that will have their neighbor table exhausted and potentially cause a DoS by running the networking gear out of resources, which in and of itself is another potential use of this tool.  There is a HUGE amount of work to be done and learned about IPv6, it&amp;rsquo;s not going away and, in fact, I&amp;rsquo;ve been using it in one form or another for 10 years or so.  If you&amp;rsquo;re a network engineer or a security professional you&amp;rsquo;re doing yourself a disservice by not learning it. In addition to the scan6 binary, the toolkit includes: flow6 frag6 icmp6 jumbo6 na6 ni6 ns6 ra6 rd6 rs6 scan6 tcp6 With the content providers and consumer ISPs providing native IPv6 more and more every day (my comcast service has a DHCPv6-PD /64 and a DHCPv6 /128 provisioned by default) the world at large is doing more v6.  If you&amp;rsquo;ve got MS windows on your network and it&amp;rsquo;s even relatively new, you&amp;rsquo;ve got v6 unless you policy it as disabled.  It&amp;rsquo;s tunneling it. Make these part of your arsenal for testing gear, pen testing, whatever. I promise it&amp;rsquo;s worth your time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to install and use the Airport utility under Mountain Lion</title>
      <link>https://forwardingplane.net/post/how-to-install-and-use-the-airport-utility-under-mountain-lion/</link>
      <pubDate>Wed, 09 Jan 2013 09:58:47 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/how-to-install-and-use-the-airport-utility-under-mountain-lion/</guid>
      <description>&lt;p&gt;I have a bunch of Apple wireless gear  at my house.  It&amp;rsquo;s inexpensive, feature rich and easy to maintain.  However, with the update to mountain lion a while ago, the ability to install  the older Airport Utility stopped.  This is annoying since I have what apple now considers &amp;ldquo;advanced&amp;rdquo; features like IPv6 at my home and essentially all my gear here is a lab (except for the plex server =) I&amp;rsquo;ve been spending a lot of time on &lt;a href=&#34;http://www.cacti.net&#34;&gt;cacti&lt;/a&gt; lately, and I wanted to test out the syslog plugin&amp;hellip;.ok, easy.  It&amp;rsquo;s all set up.  Then I got to thinking &amp;ldquo;why not just let this run and syslog all my gear like the good &amp;lsquo;ol days?&amp;rdquo;  Nerdy?  Yes, but hey, I collect flow data at home and have a &lt;a href=&#34;http://www.forwardingplane.net/homenet/&#34;&gt;weathermap&lt;/a&gt; of my home network.  It keeps me eating my own dog food with the netflow exporter plugin on &lt;a href=&#34;http://www.pfsense.org&#34;&gt;pfSense&lt;/a&gt; and it&amp;rsquo;s fun. Uh, oh.  No ability to set syslog receiver on the airport gear anymore.  Not cool.  [Guess what, no way to change IPv6 settings anymore either] No way to do a standard install of the old utility. Lame, Apple, Lame.  After poking around a bit I found a pretty easy way to do it as long as you&amp;rsquo;re not afraid of the command line. Since at least a few other folks will want to do this, here it is: &lt;a href=&#34;http://support.apple.com/kb/DL1536&#34;&gt;Download the App&lt;/a&gt; from Apple. Mount the Downloaded disk. Open Terminal. Type:&lt;code&gt;
pkgutil --expand /Volumes/AirPortUtility/AirPortUtility56.pkg
cd ~/Desktop/AirPortTemp~/Desktop/AirPortTemp/AirPortUtility56Lion.pkg/
open Payload
cd &amp;quot;Payload 2 2/Applications/Utilities/&amp;quot;
open .
&lt;/code&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/01/Screen-Shot-2013-01-08-at-11.32.08-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/01/Screen-Shot-2013-01-08-at-11.32.08-PM.png&#34; alt=&#34;&#34; title=&#34;Screen Shot 2013-01-08 at 11.32.08 PM&#34; /&gt;&lt;/a&gt; Done.  That should open a finder window with the App in it.  You can copy it to you /Applications/Utilities folder and use it alongside the newer one.  You&amp;rsquo;ll need to authenticate to copy into the /Applications/Utilities directory. Edits made and Poof!  Now I can see my syslogs from within cacti.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A day with only IPv6</title>
      <link>https://forwardingplane.net/post/a-day-with-only-ipv6/</link>
      <pubDate>Thu, 13 Dec 2012 17:58:46 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/a-day-with-only-ipv6/</guid>
      <description>&lt;p&gt;IPv6 is coming.  Like SDN, we can&amp;rsquo;t ignore it.  Are you ready?  Are you apps ready?  I&amp;rsquo;ll wager the answer is no.  Mine aren&amp;rsquo;t.  I&amp;rsquo;ve been working on IPv6 for about 11 years, from early days of tunnels to full native IPv6 at home and at work.  In teaching the IPv6 workshop for internet2, one of the things that I always suggest is to have a dual stacked host and an IPv6 only host available for testing.  These can be virtual machines or physical host, the important detail is that that need to be something that is deployed and a known working configuration. Ideally they&amp;rsquo;re a mirror or an analog of a typical workstation and or server on your network. I&amp;rsquo;ve been doing this for some time, but I must admit I&amp;rsquo;m a little ashamed that I&amp;rsquo;ve never tried to do this for my personal day to day workstation, only for one off testing.  Well, that ends now, and the results aren&amp;rsquo;t pretty. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/noipv42.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/noipv42.png&#34; alt=&#34;&#34; title=&#34;noipv4&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My every day workstation is a mac. So, to remain productive, I didn&amp;rsquo;t use my primary workstation, but instead I attempted to mirror it as closely as possible.  The chosen analog was a mac mini running MacOS 10.7.  It was immediately clear that this wasn&amp;rsquo;t going to be a fully functional workstation. Right from the get go there was an issue.  IPv6 doesn&amp;rsquo;t do any options in the SLACC implementation that 90% of folks doing dual stack are going to use.  DHCPv6 is still not widely deployed, DHCPv6 relay isn&amp;rsquo;t available in a vast swath of network hardware and most folks are going to initially start with stateless auto config, at least until they realize it&amp;rsquo;s more or less unmanageable.  Translated: you have no DNS without explicitly setting it statically. Yuck.  I strongly discourage statically assigning things.  It makes changes far more painful than they need to be, is a support nightmare at nearly any scale  and decentralizes control. However, I had to for this test.  Fine, an IPv6 resolver was added. Next step, run patching.  Nope.  Apple doesn&amp;rsquo;t support patching via their automated process via IPv6.  Most of this should be served by Akamai, which does support v6 in many cases, but not this one.  I can&amp;rsquo;t even patch the workstation without either running my own IPv6 enabled patch service (which requires manual configuration of a host to utilize), using a thumb drive or IPv6 enabled network mapping to grab the patches or plumbing IPv4 into it. After fighting through patching the host, I wanted to actually use it.  This was mostly an exercise in patience as well.  The google based services I used all just worked.  Searches, gmail, blogger, etc.  I didn&amp;rsquo;t notice any difference whatsoever. One interesting thing that I noticed right away was that many ads and images on pages I was able to surf to weren&amp;rsquo;t working at all.  Ad content providers are behind the curve on delivering over IPv6.  This surprised me a bit since this is a revenue stream that is going to grow, and they&amp;rsquo;re missing the boat.  The upside was that I didn&amp;rsquo;t need to look at a bunch of ads, potentially distracting images and marketing hype. Many of my work services such as exchange aren&amp;rsquo;t yet IPv6 enabled, I knew that wasn&amp;rsquo;t going to work because it&amp;rsquo;s actually on my teams list to remedy, however, I gave it a try anyway.  No go on OWA.  No go on any of the exchange access whatsoever.  NTP sync worked just fine after adding in our NTP server, its been IPv6 ready for a very long time. Luckily for me, most of what I do is CLI based and the equipment I need to get into and help maintain has been IPv6 enabled for years.  SSH on this mac worked with absolutely no issues, as expected.  It&amp;rsquo;s one of those nice things that I&amp;rsquo;d been using IPv6 for in a dual stacked environment for years and is essentially transparent. I was able to work on this blog post, since &lt;a href=&#34;http://www.forwardingplane.net&#34;&gt;forwardingplane.net&lt;/a&gt; has been IPv6 compliant since it&amp;rsquo;s inception thanks to the hosting provider, &lt;a href=&#34;http://www.arpnetworks.com&#34;&gt;arp networks&lt;/a&gt;. Other services that I use regularly, are a mixed bag.  &lt;a href=&#34;http://www.box.net&#34;&gt;Box.net&lt;/a&gt; has no IPv6 support. &lt;a href=&#34;http://www.dropbox.com&#34;&gt;Dropbox&lt;/a&gt;, which I expected to work since it is hosted in the amazon cloud, doesn&amp;rsquo;t but probably trivially could.  &lt;a href=&#34;https://spideroak.com&#34;&gt;Spideroak&lt;/a&gt; didn&amp;rsquo;t work with only IPv6.  &lt;a href=&#34;http://www.crashplan.com&#34;&gt;Crashplan&lt;/a&gt; didn&amp;rsquo;t work to the cloud or my NAS.  NAS was expected since it doesn&amp;rsquo;t do v6.  This is a frightening wake-up call.  Enabling IPv6 support into these every day apps should have been done from the beginning or at the very least before IPv6 day. Some other things I noticed, my &lt;a href=&#34;http://www.amazon.com/D-Link-DNS-343-Network-Attached-Enclosure/dp/B0019VSU88&#34;&gt;2 NAS&lt;/a&gt; at home don&amp;rsquo;t do IPv6 at all.  The aging Dell powerconnect gig switch I have at home doesn&amp;rsquo;t do IPv6.  My &lt;a href=&#34;http://o-www.sonicwall.com/us/en/products/TZ_210.html&#34;&gt;Sonicwall TZ 210 wireless-N&lt;/a&gt; that I&amp;rsquo;ve been testing at home has no IPv6 support by default although I think there is Beta code that I&amp;rsquo;ve been trying to get my hands on. My appleTV, however, does do IPv6 as do my Linux VMs, Windows 7 VM and host Linux system.  My normal gateway device, a &lt;a href=&#34;http://www.pfsense.org&#34;&gt;pfSense&lt;/a&gt; install running on a &lt;a href=&#34;http://pcengines.ch/alix.htm&#34;&gt;PC Engines ALIX&lt;/a&gt; board has done IPv6, correctly mind you, for years, either by code I hacked into it (in the early days) or fully supported by the project.  It supports dhcpv6 server, dhcpv6-pd from my upstream provider and SLAAC.  It also does IPv6 firewall functions better than most commercial firewall devices. I&amp;rsquo;m 100% sure it&amp;rsquo;s just the tip of the iceberg. If you&amp;rsquo;re a networking professional and you&amp;rsquo;re not learning IPv6, you&amp;rsquo;re already 10 years behind.  Head in the sand won&amp;rsquo;t make it go away, it&amp;rsquo;s happening, just like SDN is happening.  In fact, they&amp;rsquo;ll &lt;a href=&#34;http://www.openflow.org/wk/index.php/OpenFlow_1_2_proposal#IPv6_support&#34;&gt;be happening together in some cases&lt;/a&gt;.  Learning new things is fun, and IPv6 is a necessity.  You can hide behind NAT and existing allocations for a while, but believe me, you&amp;rsquo;re doing yourself a disservice as well as missing out on some cool stuff if you&amp;rsquo;re not talking about your IPv6 plans and learning about this inevitable reality.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MacOS 10.7 and IPv6 privacy addressing</title>
      <link>https://forwardingplane.net/post/macos-10-7-and-ipv6-privacy-addressing/</link>
      <pubDate>Sun, 31 Jul 2011 02:40:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/macos-10-7-and-ipv6-privacy-addressing/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m not a fan of IPv6 privacy addressing. I understand the logic behind it, I really doo, obfuscate the LLADDR (MAC address) of the host in question, but I really dont&amp;rsquo;t see the realistic purpose. If someone wanted to use my mac address, what good would that really get them, unless they&amp;rsquo;re on the same layer 2 segment? More importantly, if they;re on the same layer 2 segment, they have my MAC address anyway.&lt;br /&gt;
Privacy addresses cause more heartburn than they cure. How do I track someone who has a rotating address? Am I scraping the neighbor table of my network equipment often enough to have reasonable accountability? Probably, but what if I&amp;rsquo;m not? I could go on and on about how I think &lt;a href=&#34;http://www.ietf.org/rfc/rfc4941.txt&#34;&gt;RFC4941&lt;/a&gt; addresses aren&amp;rsquo;t that useful, but instead I&amp;rsquo;ll just write down how to disable them (I&amp;rsquo;ve always been known as more of a machete than a scalpel anyway =).&lt;/p&gt;

&lt;p&gt;With MacOS 10.7 (Lion) it&amp;rsquo;s now on by default. To disable it, you need to open a terminal and type:&lt;/p&gt;

&lt;p&gt;_sudo sysctl -w net.inet6.ip6.use_tempaddr=0&lt;br /&gt;
_&lt;br /&gt;
Poof! There you go. &lt;a href=&#34;http://tech.buraglio.com/2011/07/osx-107-lion-dhcpv6-client-working-with.html&#34;&gt;You should be using DHCPv6 anyway&lt;/a&gt; =) [](&lt;a href=&#34;http://events.internet2.edu/2011/jt-uaf/agenda.cfm?go=session&amp;amp;id=10001852&amp;amp;event=1151&#34;&gt;http://events.internet2.edu/2011/jt-uaf/agenda.cfm?go=session&amp;amp;id=10001852&amp;amp;event=1151&lt;/a&gt;) &lt;a href=&#34;http://events.internet2.edu/2011/jt-uaf/agenda.cfm?go=session&amp;amp;id=10001852&amp;amp;event=1151&#34;&gt;&lt;strong&gt;*cue vendors getting off their rear ends and implementing dhcpv6 relay*&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;-&amp;ndash;edit&amp;mdash;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good point made by Charley Kline, to make this persist across reboots a line needs to be added to your /etc/sysctl.conf.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To accomplish this, edit /etc/sysctl.conf&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;sudo vi /etc/sysctl.conf&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add the following line:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;net.inet6.ip6.use_tempaddr=0&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;--edit&amp;ndash;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For all you windows users:&lt;/p&gt;

&lt;p&gt;XP:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;netsh interface ipv6 set privacy state=disabled store=persistent&lt;br /&gt;
netsh interface ipv6 set privacy state=disabled&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Vista:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;netsh interface ipv6 set global randomizeidentifiers=disabled&lt;br /&gt;
netsh interface ipv6 set global randomizeidentifiers=disabled store=persistent&lt;br /&gt;
netsh interface ipv6 set privacy disabled&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I assume Windows 7 is similar to Vista, but I have not tested.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OSX (10.7; Lion) DHCPv6 client working with pfsense server.</title>
      <link>https://forwardingplane.net/post/osx-10-7-lion-dhcpv6-client-working-with-pfsense-server/</link>
      <pubDate>Tue, 26 Jul 2011 18:20:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/osx-10-7-lion-dhcpv6-client-working-with-pfsense-server/</guid>
      <description>&lt;p&gt;It looks like MacOS 10.7 (Lion) has fully functioning DHCPv6. It&amp;rsquo;s about time.&lt;/p&gt;

&lt;p&gt;Before:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-6FQwzCiawpg/TjDWmwrbONI/AAAAAAAAAEI/9mOtP9fMbqE/s1600/Screen%2BShot%2B2011-07-25%2Bat%2B8.45.24%2BPM.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-6FQwzCiawpg/TjDWmwrbONI/AAAAAAAAAEI/9mOtP9fMbqE/s400/Screen%2BShot%2B2011-07-25%2Bat%2B8.45.24%2BPM.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-stFnUb3g1zI/TjDW1MDpOyI/AAAAAAAAAEY/YgG7fXCfujY/s1600/Screen%2BShot%2B2011-07-26%2Bat%2B7.18.45%2BAM.png&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-stFnUb3g1zI/TjDW1MDpOyI/AAAAAAAAAEY/YgG7fXCfujY/s400/Screen%2BShot%2B2011-07-26%2Bat%2B7.18.45%2BAM.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;pfSense setup:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-gSN5Rx7vIUU/TjDW0t1BcEI/AAAAAAAAAEQ/1hQNIlCJl30/s1600/Screen%2BShot%2B2011-07-26%2Bat%2B7.16.50%2BAM.png&#34;&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-gSN5Rx7vIUU/TjDW0t1BcEI/AAAAAAAAAEQ/1hQNIlCJl30/s400/Screen%2BShot%2B2011-07-26%2Bat%2B7.16.50%2BAM.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using Internet Systems Consortium DHCP Server 4.2.1-P1 as the server (on my pfSense box) I am able to get not only a privacy address (via stateless autoconfigure) but also a normal EUI-64 address as well as an IPv6 address via dhcpv6.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t do anything except use the &amp;ldquo;Automatic&amp;rdquo; setting in the network control panel, so out of the box OSX 10.7 &amp;ldquo;Lion&amp;rdquo; looks like it does the right thing with DHCPv6, at least at face value.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Joint Techs Summer 2011 IPv6 talks</title>
      <link>https://forwardingplane.net/post/joint-techs-summer-2011-ipv6-talks/</link>
      <pubDate>Mon, 18 Jul 2011 09:54:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/joint-techs-summer-2011-ipv6-talks/</guid>
      <description>&lt;p&gt;If anyone is interested in the talks I participated in at Joint Techs in Fairbanks, AK, they are now on the internet2 sites.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://events.internet2.edu/2011/jt-uaf/agenda.cfm?go=session&amp;amp;id=10001852&amp;amp;event=1151&#34;&gt;IPv6 feature support&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://events.internet2.edu/2011/jt-uaf/agenda.cfm?go=session&amp;amp;id=10001863&amp;amp;event=1151&#34;&gt;IPv6 campus panel discussion&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;They&amp;rsquo;re apparently not embeddable, but can be watched from the Joint Techs site.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Features matrix for Network Hardware</title>
      <link>https://forwardingplane.net/post/ipv6-features-matrix-for-network-hardware/</link>
      <pubDate>Wed, 16 Mar 2011 21:55:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-features-matrix-for-network-hardware/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been doing a lot of IPv6 stuff lately, and one of the things I didn&amp;rsquo;t find (and kinda just wanted to put one together for my own benefit) is a matrix of features I thought were important to have on the IPv6 side for common network hardware. Below is a work in progress of what I have so far, which will automatically publish changes from &lt;a href=&#34;http://bit.ly/network-hardware-v6-feature-matrix&#34;&gt;this spreadsheet&lt;/a&gt;. Please email me if you&amp;rsquo;re interested in adding to this or correcting anything I may be incorrect on.&lt;/p&gt;

&lt;p&gt;This has evolved into something else entirely. I&amp;rsquo;ve had a very good response to this very rudimentary start of a feature matrix and have decided that it&amp;rsquo;s going to get expanded into whatever it needs to become. I&amp;rsquo;ve added the start of a matrix for network security hardware / appliances &lt;a href=&#34;http://www.forwardingplane.net/bit.ly/ipv6-security-matrix&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;
I may eventually break this out into L2 and L3 as well as security appliances.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A bit of IPv6 humor for the holidays</title>
      <link>https://forwardingplane.net/post/a-bit-of-ipv6-humor-for-the-holidays/</link>
      <pubDate>Fri, 24 Dec 2010 03:15:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/a-bit-of-ipv6-humor-for-the-holidays/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_99YK8gwWGlQ/TRO8rtT4cyI/AAAAAAAAACs/9K8i0PsSr14/s1600/Screen%2Bshot%2B2010-12-23%2Bat%2B3.16.15%2BPM.png&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/_99YK8gwWGlQ/TRO8rtT4cyI/AAAAAAAAACs/9K8i0PsSr14/s400/Screen%2Bshot%2B2010-12-23%2Bat%2B3.16.15%2BPM.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A quick screen grab from &lt;a href=&#34;http://fun.drno.de/txt/ipv6partitions.txt&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enabling IPv6 on Juniper SRX 5800 cluster</title>
      <link>https://forwardingplane.net/post/enabling-ipv6-on-juniper-srx-5800-cluster/</link>
      <pubDate>Wed, 20 Oct 2010 21:59:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/enabling-ipv6-on-juniper-srx-5800-cluster/</guid>
      <description>&lt;p&gt;After &lt;a href=&#34;http://tech.buraglio.com/2010/09/srx-ipv6-flow-based-processing.html&#34;&gt;enabling the IPv6 Flow based processing&lt;/a&gt;, we decided to get rolling with making our IPv6 path congruent with everything else (IPv4 unicast and multicast). With all of the other things we had going on, we thought this would be a low hanging fruit that would be easily plucked from the routing tree. Well, a minor oversight on our part caught us by surprise.&lt;/p&gt;

&lt;p&gt;According to this &lt;a href=&#34;http://www.juniper.net/techpubs/software/junos-security/junos-security10.2/junos-srx-jseries-support-reference/jd0e5522.html&#34;&gt;handy dandy matrix for JunOS 10.2 on the SRX&lt;/a&gt;, Active/Active is actually not supported for v6 processing. After configuring all of the rest of the path, BGP peerings, OSPFv3, an IPv6 firewall policy, we were a bit surprised to see OSPFv3 adjacencies andappropriate routes, but absolutely no state for v6 traffic that was not destined for the RE.&lt;/p&gt;

&lt;p&gt;About 30 seconds of google searching came up with the matrix, which we somehow missed, that showed exactly what we feared:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lh3.ggpht.com/_99YK8gwWGlQ/TL8UouI51lI/AAAAAAAAACM/7humintSX-I/s1152/Screen%20shot%202010-10-20%20at%2011.09.54%20AM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;My first reaction was&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.popartuk.com/g/l/lgmp0163+homer-simpson-doh-the-simpsons-mini-poster.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;How could we have missed that? We knew that IDP wouldn&amp;rsquo;t work on v6 until a future release (probably sometime of next year, we&amp;rsquo;re hoping). Oh well, we missed something. It was bound to happen sooner or later with as many moving parts as we have. Doing some more digging it looks like we&amp;rsquo;re not going to get Active/Active until around the same time as IDP&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SRX IPv6 flow based processing</title>
      <link>https://forwardingplane.net/post/srx-ipv6-flow-based-processing/</link>
      <pubDate>Thu, 16 Sep 2010 17:18:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/srx-ipv6-flow-based-processing/</guid>
      <description>&lt;p&gt;One of our plans is to consolidate as many of the egress trafic paths as possible.  To facilitate this, we had to do some things like buy carrier grade equipment.  Enter the &lt;a href=&#34;http://bit.ly/9jrUiG&#34;&gt;SRX 5800&lt;/a&gt;.  No one really does IPS/IDP+Firewall quite like the SRX.  After extensive research and exhaustive hands on testing with quite a bit of equipment, that is what we settled on.  Even the IBM &amp;ldquo;technical evangelist&amp;rdquo; guy that came to talk to us said &amp;ldquo;No one really does it like they do&amp;rdquo; when referring to Juniper and 10G firewall/IPS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.juniper.net/shared/img/products/srx-series/srx5800/lbox-srx5800-left.jpg&#34;&gt;&lt;img src=&#34;http://www.juniper.net/shared/img/products/srx-series/srx5800/lbox-srx5800-left.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lets make one thing clear, IPv6 isn&amp;rsquo;t going away.  We&amp;rsquo;ll all be using in in the next few years, and so, to that end, it needs to work through our network as closely to the way folks are using the current resources as we can make it&amp;hellip;.within the confines of our resources and the limitations of IPv4 and IPv6 respectively.&lt;/p&gt;

&lt;p&gt;To make IPv6 process similarly to IPv4 on the SRX 5800 cluster, we have to enable flow based security processing for it.  To make that happen, you have to do the following things, as documented &lt;a href=&#34;http://bit.ly/9jrUiG&#34;&gt;here&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;set security forwarding-options family inet6 mode flow-based&lt;/p&gt;

&lt;p&gt;Enabling this actually requires a reboot of the boxes, and on a chassis cluster, I&amp;rsquo;ve been told by our Agility JTAC guy (and learned the herd way because I&amp;rsquo;m stubborn like that) that you need to reboot both cluster nodes at the same time (which I find dumb since the purpose of a firewall cluster is almost always redundancy).&lt;/p&gt;

&lt;p&gt;Regardless, I used the recommended method and kicked the boxes after a commit check.&lt;/p&gt;

&lt;p&gt;commit check&lt;/p&gt;

&lt;p&gt;The router then spits out the following information after the commit check:&lt;/p&gt;

&lt;p&gt;node0:&lt;br /&gt;
warning: You have enabled/disabled inet6 flow.&lt;br /&gt;
You must reboot the system for your change to take effect.&lt;br /&gt;
If you have deployed a cluster, be sure to reboot all nodes.&lt;br /&gt;
configuration check succeeds&lt;/p&gt;

&lt;p&gt;node1:&lt;br /&gt;
warning: You have enabled/disabled inet6 flow.&lt;br /&gt;
You must reboot the system for your change to take effect.&lt;br /&gt;
If you have deployed a cluster, be sure to reboot all nodes.&lt;br /&gt;
configuration check succeeds&lt;/p&gt;

&lt;p&gt;From here I like to comment all of my commits, as it&amp;rsquo;s just good practice and it will be logged on your handy &lt;a href=&#34;http://campin.net/syslog-ng/faq.html&#34;&gt;syslog server&lt;/a&gt; for later use or reference.&lt;/p&gt;

&lt;p&gt;commit comment &amp;ldquo;Enabling Flow-Based Processing for IPv6 Traffic&amp;rdquo;&lt;/p&gt;

&lt;p&gt;And from there, a reboot of both nodes (at the same time) is necessary..&lt;/p&gt;

&lt;p&gt;request system reboot&lt;/p&gt;

&lt;p&gt;And then, we wait&amp;hellip;&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;..and wait some more&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;.and then&amp;hellip;..the prompt on the console is back.&lt;/p&gt;

&lt;p&gt;&amp;hellip;&amp;hellip;&amp;hellip;..and after about 6-7 minutes, we have OSPF adjacencies and packets are flowing.  The SPCs take a bit to self test, fully boot and start processing traffic, as I would expect from something processing so many pieces of so much traffic.  &lt;/p&gt;

&lt;p&gt;Now we need to verify that what we did actually worked.  From the SRX, check the security flow status:&lt;/p&gt;

&lt;p&gt;show security flow status&lt;/p&gt;

&lt;p&gt;node0:&lt;br /&gt;
-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;br /&gt;
  Flow forwarding mode:&lt;br /&gt;
    Inet forwarding mode: flow based&lt;br /&gt;
    Inet6 forwarding mode: flow based&lt;br /&gt;
    MPLS forwarding mode: drop&lt;br /&gt;
    ISO forwarding mode: drop&lt;br /&gt;
    Flow trace status&lt;br /&gt;
    Flow tracing status: off&lt;/p&gt;

&lt;p&gt;node1:&lt;br /&gt;
-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;br /&gt;
  Flow forwarding mode:&lt;br /&gt;
    Inet forwarding mode: flow based&lt;br /&gt;
    Inet6 forwarding mode: flow based&lt;br /&gt;
    MPLS forwarding mode: drop&lt;br /&gt;
    ISO forwarding mode: drop&lt;br /&gt;
    Flow trace status&lt;br /&gt;
    Flow tracing status: off&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re looking for:&lt;/p&gt;

&lt;p&gt;    Inet6 forwarding mode: flow based&lt;/p&gt;

&lt;p&gt;This would have said &amp;ldquo;drop&amp;rdquo; before the change. &lt;/p&gt;

&lt;p&gt;We hope to actually swing over our IPv6 traffic soon and start processing it on the SRXs.  I&amp;rsquo;ll post notes as soon as we go forward with that.  &lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Viewing ipv6 router advertisements</title>
      <link>https://forwardingplane.net/post/viewing-ipv6-router-advertisements/</link>
      <pubDate>Fri, 03 Sep 2010 19:00:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/viewing-ipv6-router-advertisements/</guid>
      <description>&lt;p&gt;I knew a tool like this had to exist, but I had never needed to look in the past.  While debugging a RA problem, I come upon the need to view IPv6 router advertisements.  How can one do this?  tcpdump?  Yeah, I guess that could work.  It&amp;rsquo;s almost like using a bulldozer when a wheelbarrow is all you need, though.  I could use &lt;a href=&#34;http://ndpmon.sourceforge.net/&#34;&gt;ndpmon&lt;/a&gt;, I suppose, but that, too seems like overkill.&lt;br /&gt;
So, the search began. After about 10 seconds of google searching&amp;hellip;.. Success!  A tool, does in fact exist for viewing exactly that type of packet.&lt;br /&gt;
Enter &lt;a href=&#34;http://gd.tuwien.ac.at/linuxcommand.org/man_pages/radvdump8.html&#34;&gt;radvdump&lt;/a&gt;.  It is part of the marvelous &lt;a href=&#34;http://www.freebsd.org/cgi/man.cgi?query=rtadvd&amp;amp;sektion=8&#34;&gt;rtadvd&lt;/a&gt; project.  It also exists in &lt;a href=&#34;http://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sweet, now I can see my IPv6 router advertisements in a very simple manner.  The syntax is very straightforward, the command sudo /opt/local/sbin/radvdump will yield you pretty much everything you need to know about what is in your router advertisement:&lt;/p&gt;

&lt;p&gt;# radvd configuration generated by radvdump 1.6&lt;br /&gt;
# based on Router Advertisement from fe80::20d:b9ff:fe18:8ca1&lt;br /&gt;
# received by interface en0&lt;/p&gt;

&lt;p&gt;interface en0&lt;br /&gt;
{&lt;br /&gt;
AdvSendAdvert on;&lt;br /&gt;
# Note: {Min,Max}RtrAdvInterval cannot be obtained with radvdump&lt;br /&gt;
AdvManagedFlag off;&lt;br /&gt;
AdvOtherConfigFlag off;&lt;br /&gt;
AdvReachableTime 0;&lt;br /&gt;
AdvRetransTimer 0;&lt;br /&gt;
AdvCurHopLimit 64;&lt;br /&gt;
AdvDefaultLifetime 1800;&lt;br /&gt;
AdvHomeAgentFlag off;&lt;br /&gt;
AdvDefaultPreference medium;&lt;br /&gt;
AdvSourceLLAddress on;&lt;/p&gt;

&lt;p&gt;prefix 2001:470:xxxx:xxx::/64&lt;br /&gt;
{&lt;br /&gt;
AdvValidLifetime 2592000;&lt;br /&gt;
AdvPreferredLifetime 604800;&lt;br /&gt;
AdvOnLink on;&lt;br /&gt;
AdvAutonomous on;&lt;br /&gt;
AdvRouterAddr off;&lt;br /&gt;
}; # End of prefix definition&lt;/p&gt;

&lt;p&gt;prefix 2001:470:xxxx:xxx::/64&lt;br /&gt;
{&lt;br /&gt;
AdvValidLifetime 2592000;&lt;br /&gt;
AdvPreferredLifetime 604800;&lt;br /&gt;
AdvOnLink on;&lt;br /&gt;
AdvAutonomous on;&lt;br /&gt;
AdvRouterAddr off;&lt;br /&gt;
}; # End of prefix definition&lt;/p&gt;

&lt;p&gt;}; # End of interface definition&lt;/p&gt;

&lt;p&gt;Once you have all of that working, head over to see the &lt;a href=&#34;http://www.kame.net/&#34;&gt;dancing kame&lt;/a&gt; (if you&amp;rsquo;re old school) of just head to &lt;a href=&#34;http://www.buraglio.com/&#34;&gt;my main domain&lt;/a&gt; and it&amp;rsquo;ll show you your ipv4 or ipv6 address at the top. Alternatively, you can use &lt;a href=&#34;http://www.google.com/intl/en/ipv6/&#34;&gt;google over ipv6&lt;/a&gt; in a number of &lt;a href=&#34;http://ipv6.google.com/&#34;&gt;ways&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
