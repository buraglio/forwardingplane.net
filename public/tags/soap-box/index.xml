<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>
    Soap Box on ForwardingPlane.net
    
    </title>
    <link>https://forwardingplane.net/tags/soap-box/</link>
    <description>Recent content 
    
    in Soap Box on ForwardingPlane.net
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <copyright>Copyright (c) 2019, all rights reserved.</copyright>
    <lastBuildDate>Sun, 30 Jun 2019 02:15:32 +0000</lastBuildDate>
    
    
        <atom:link href="https://forwardingplane.net/tags/soap-box/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The BGP conundrum</title>
      <link>https://forwardingplane.net/post/the-bgp-conundrum/</link>
      <pubDate>Sun, 30 Jun 2019 02:15:32 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/the-bgp-conundrum/</guid>
      <description>&lt;p&gt;BGP. It’s that magical protocol that runs the internet. For for as much as BGP is a fundamental, critical, irreplaceable part of the core functioning of the internet, it is a protocol that has not aged well as far as security is concerned. See, BGP was born when the internet was really still an academic experiment. Handshakes and loose agreements were totally fine for connecting a new site. &lt;/p&gt;

&lt;p&gt;Then came the awakening. &lt;img src=&#34;https://www.forwardingplane.net/wp-content/uploads/2019/06/Awakening.jpg&#34; alt=&#34;Awakening&#34; title=&#34;Awakening.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once the internet was used for more critical things, security was obviously more important. But BGP did not really evolve at the same rate - and more importantly, the security model surrounding it was mostly left behind. The reasons aren&amp;rsquo;t really important, but the fallout absolutely is. Retrofitting security into an externally exposed protocol is demonstrably difficult. It has been &lt;a href=&#34;https://tools.ietf.org/html/rfc8205&#34;&gt;tried&lt;/a&gt; and &lt;a href=&#34;https://tools.ietf.org/html/rfc6810&#34;&gt;tried&lt;/a&gt; and &lt;a href=&#34;https://tools.ietf.org/id/draft-sa-grow-maxprefix-00.html&#34;&gt;tried&lt;/a&gt; and &lt;a href=&#34;https://www.radb.net/&#34;&gt;tried&lt;/a&gt;. The real limit in this space exists because of the nature of the protocol itself - it is external in nature, thereby requiring coordination between multiple parties. The mechanics of this are two fold: personal interaction to agree on the peering, and technical compliance for the protocol to adhere to the agreed upon policy.&lt;/p&gt;

&lt;p&gt;Technical limitations imposed by vendors and hardware limits have plagued this space for decades. However, the real problem, as with most things technical, is actually the people. A reluctance to agree on methodology, a refusal to spend the time to work out the procedures, an inability or lack of resources for understanding the steps necessary, an unwillingness (intentional or unintentional) to help the community further the progress. None of this really matters other than knowing where we can improve. So, to that end, I humbly recommend that all BGP operators read and implement best practices. Much of this is spelled out clearly in the &lt;a href=&#34;https://www.manrs.org/isps/&#34;&gt;MANRS project&lt;/a&gt;, and it should be used as a shining example of community based action that can produce actual demonstrable results. If you’re interested in tools for troubleshooting BGP or better understanding the scope and scale of the DFZ (Default Free Zone), check out a past post I did on &lt;a href=&#34;https://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34;&gt;BGP tools,&lt;/a&gt; &lt;a href=&#34;https://www.forwardingplane.net/2016/05/bgp-rpki-why-arent-we-using-it/&#34;&gt;RPKI&lt;/a&gt;, and &lt;a href=&#34;https://www.forwardingplane.net/2018/02/strategy-series-view-outside-network/&#34;&gt;visibility outside of your network.&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;As a follow on to the last global BGP blunder, &lt;a href=&#34;https://twitter.com/bcjordo?lang=en&#34;&gt;Jordan Martin&lt;/a&gt; and I talk about the how and the what of the event in this quick &lt;a href=&#34;https://thenetworkcollective.com/2019/06/bgp-blunder/&#34;&gt;Network Collective short take&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rant: toolexplodeaphobia</title>
      <link>https://forwardingplane.net/post/1672/</link>
      <pubDate>Fri, 03 May 2019 13:58:55 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/1672/</guid>
      <description>&lt;p&gt;It’s kinda like having RouteExplorer and Arbor Peakflow. They have a decent overlap but *just* enough difference to want both&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Soap Box: Mikrotik &#34;IPv6 Apocalypse&#34;, or maybe not.</title>
      <link>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</link>
      <pubDate>Sun, 31 Mar 2019 17:35:10 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/soap-box-mikrotik-ipv6-apocalypse-or-maybe-not/</guid>
      <description>

&lt;p&gt;Over the last few days there has been a &lt;em&gt;&lt;strong&gt;huge&lt;/strong&gt;&lt;/em&gt; amount of FUD and panic surrounding two as-yet-to-be-published CVEs (found &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19298&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19299&#34;&gt;here&lt;/a&gt;) related to Mikrotik&amp;rsquo;s IPv6 implementation.It is my opinion that this entire process has been poorly handled, and that the community involved tends to be fairly sensitive to issues such as, and the cloak and dagger nature of the two issues has only exacerbated it. Mikrotik, as a company, is well known for being terse in their responses and tight lipped with their internal workings and dealings with these kinds of issues. I take that as a given, that’s their business and realistically we’re entitled to know exactly none of that information, even if it would be nice to have it. The history behind this is discouraging, the original discovery was quite some time ago with reports dating back to 2013, and the person who originally uncovered the issues did so upwards of a year ago, bringing them to Mikrotik at that time, as can be seen in this &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=125841&amp;amp;p=654116&amp;amp;hilit=ndpexhaust26#p654116&#34;&gt;thread&lt;/a&gt;. Now, anyone with a passing knowledge of pen testing or IPv6 device load testing can trivially put together the information needed to decipher the problem and replicate it, neither are exactly complicated or &lt;a href=&#34;https://insinuator.net/2013/03/ipv6-neighbor-cache-exhaustion-attacks-risk-assessment-mitigation-strategies-part-1/&#34;&gt;new&lt;/a&gt;. Both can be done in literally one line of &lt;a href=&#34;https://tools.kali.org/information-gathering/thc-ipv6&#34;&gt;common, open source toolkits.&lt;/a&gt; The issues are not magical and are not even esoteric or cryptic. They are very straightforward, and by reading the threads and understanding how things like route caches and &lt;a href=&#34;https://en.wikipedia.org/wiki/Neighbor_Discovery_Protocol&#34;&gt;neighbor discovery&lt;/a&gt; work, they become very clear. Since this is IPv6 related I am very interested in it because I feel that WISPs and emerging markets are an excellent environment for moving IPv6 forward, and the equipment and mindset involved makes that fairly straightforward. Reverse engineering these given the information available is pretty straightforward, and &lt;a href=&#34;https://www.iparchitechs.com/&#34;&gt;folks other than me have done it&lt;/a&gt; too. I personally do not consider either of these a security vulnerability or a bug, per se. They’re both the result of a short sighted protocol implementation resulting in a very acute, unfortunate event. With the benefit of hindsight, and as an outsider, I can only wonder if this had been handled differently (i.e. not framed as a critical security vulnerability but rather a broken protocol), if the hysteria that resulted could have been quelled. On a &lt;a href=&#34;https://forum.mikrotik.com/viewtopic.php?f=2&amp;amp;t=147048&amp;amp;start=50&#34;&gt;particular forum thread,&lt;/a&gt; this was likened to the discovery of the “ping of death”, and that feels like a good analogy to me.  It probably should have been handled that way. So, I will post my .02 as to how this kind of even can be handled in the future, in case there is no better process to work with: 1. Involve the vendor early. 2. Involve a trusted third party to validate the result. It’s very easy to miss trees when you’re stuck in a forest. 3rd party validation is pretty important either way as it proves a problem can be repeated independently. 3. Disclose the environment hardware, in detail, that was used to test and confirm the the issue in. 4. Have both validated it with said trusted, embargoed outside source(s). Again, ideally one is the vendor. 5. If unable to define and at least indicate that there is a remediation, leverage outside trusted source to &lt;strong&gt;make sure that’s not possible&lt;/strong&gt;. In this case, that seems to be kept between the person who discovered it and the vendor, which as discussed above has a track record of being pretty closed off. For this particular issue and platform, one can monitor the IPv6 route-cacheing near real-time, here is the command to do it at 1 second intervals```
[buraglio@gw] &amp;gt; /ipv6 route cache print interval=1
cache-size: 190max-cache-size: 1024000&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34; data-lang=&#34;The ND issue can be mitigated with the following command (obviously adjusted for your own environment).```&#34;&gt;/ipv6 firewall filter
add action=drop chain=forward connection-mark=drop connection-state=new
/ipv6 firewall mangle
add action=accept chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 limit=2,5:packet
add action=mark-connection chain=prerouting connection-state=new dst-address=\\
2001:db8:3::/64 new-connection-mark=drop passthrough=yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for those more interested in the actual process, here is a video demonstrating the basic route-cache issue (commands, although very easy to figure out are obfuscated)&lt;/p&gt;

&lt;p&gt;Mikrotik has released a fix as of this morning (4/1/2019), although it is currently beta. ROS 6.45 addresses both the route cache and the neighbor table issue. More details on the discovery will be &lt;a href=&#34;https://indico.uknof.org.uk/event/46/contributions/speakers&#34;&gt;disclosed at the UKNOF conference&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;my-take&#34;&gt;My take:&lt;/h4&gt;

&lt;p&gt;A problem like this that is as egregious as described needs to be independently validated and ideally a remediation found before disclosure. If a mitigation strategy does not exist, the $vendor takes responsibility by default and realistically, nothing can be done until they fix it. It may also be disclosed as a zero-day-style, weaponized tactic. Obviously that is the worst case. The real point is that we’re a community, and we need to build the trust frameworks to work together on issues such as this without pointing fingers or running around with our hands waving. This behavior is, sadly, pretty easy to re-create. There is an old thread that implies some of this was triggered by &amp;ldquo;real traffic&amp;rdquo;, and I have definitely seen an uptick in ipv6 scanning that impacts major vendor router platforms to the point that they get salty about traffic flows and spike CPUs. This feels pretty darned similar, but not the catastrophic event horizon it&amp;rsquo;s being played out to be. It&amp;rsquo;s still bad, it stinks, and it&amp;rsquo;s definitely been handled in a way that is less than optimal. I would also like to point out a few things since there has been a fair amount of hair on fire panic. I realize I am being a tad pedantic, but it&amp;rsquo;s important to identify things correctly in order to handle them in the correct manner. This is not a security vulnerability as I would describe it. There is no remote or local execution of code, no raised privileges, no mechanism of compromise. I don&amp;rsquo;t think this is a software bug, either. It&amp;rsquo;s close, but in reality what this is is a poorly implemented protocol that had what I can only believe was a poverty of testing before release and as such allows for a remotely triggered denial of service. Denial of service isn&amp;rsquo;t necessarily malicious, it just means exactly what it says: service is denied. As mentioned earlier in the thread, this is like the old ping of death issue: a poorly executed stack. I&amp;rsquo;d like to know who has executed this in the wild and how far back this goes in their code train, references go back as far as 2013, but I suspect they go back to the original support.&lt;/p&gt;

&lt;h4 id=&#34;update&#34;&gt;-&amp;mdash; UPDATE&lt;/h4&gt;

&lt;p&gt;Mikrotik has addressed this issue with the release of ROS 6.44.2. The prior methodologies no longer exhaust resources and reload devices, as can be seen here&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Faucet: Enterprise OpenFlow in production</title>
      <link>https://forwardingplane.net/post/faucet-enterprise-openflow-in-production/</link>
      <pubDate>Mon, 05 Nov 2018 10:56:21 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/faucet-enterprise-openflow-in-production/</guid>
      <description>

&lt;p&gt;Remember OpenFlow? It was the media and marketing darling for the better part of 5 years as “the machine” conflated OpenFlow with SDN and SDN with - almost literally - everything. &amp;ldquo;Still Does Nothing&amp;rdquo; was a common phrase uttered around those of us that had run large scale, complex networks for a long time. Quietly, &lt;a href=&#34;https://faucet-sdn.blogspot.com/&#34;&gt;and mostly&lt;/a&gt;, out of the fickle media and blogosphere eye, a scrappy little SDN project called &lt;a href=&#34;https://github.com/faucetsdn/faucet&#34;&gt;faucet&lt;/a&gt; has been &lt;a href=&#34;https://github.com/faucetsdn/faucet&#34;&gt;diligently plugging away&lt;/a&gt; &amp;ndash; making easy to use, production quality, well documented, and very stable code that runs OpenFlow networks quite happily in production and at scale. Oh, did I mention that it&amp;rsquo;s also got a very small footprint? Did I also mention that we&amp;rsquo;ve built a multi-terabit network that scales, transiting IPv4, IPv6, L2/L3 switching as well as routing? Or that faucet can control switches from multiple vendors, including P4 vendors who provide a P4-to-OF bridge, and interoperates with non-SDN networks? Or (and possibly most importantly) that faucet provides automated integration tests, allowing many bugs to be caught early (sometimes even by the switch vendor) before shipping new releases? Well, I should probably mention those things. I&amp;rsquo;ve been lucky enough to have been involved in SDN off and on since around 2009, and I can emphatically say that of the production SDN and OpenFlow networks that I have been intimately involved in, this combination of hardware, software and people has been, hands down, the most rewarding and most supportable. In fact, this has been so supportable and great to work with, we migrated our production branch office over to a set of faucet controlled SDN switches, and will soon migrate first hop routing over to our robust faucet system. &amp;ldquo;However did you do this?!?!&amp;rdquo; you might be inclined to say. Well, I&amp;rsquo;m glad you asked, because I am going to tell you.    First, though, there should be some design goals. As many of the naysayers of SDN will happy point out, &amp;ldquo;what problem are you trying to solve?&amp;rdquo; to that end, here is what our design goals were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run all layer 2 in via faucet&lt;/li&gt;
&lt;li&gt;Remove need to log into any network elements after deployment (other than firmware updates)&lt;/li&gt;
&lt;li&gt;Centralize management&lt;/li&gt;
&lt;li&gt;Stretch goal to NFV BGP, do first hop L3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Easy enough, right? It really is. For our deployment we leveraged Aruba 2930F switches giving us a wealth of 1G copper ports and a handful of 10G SFP+ ports. Luckily, we already had this gear because as so many that have tried to deploy openflow in the past have seen, all hardware is not created equally. Luckily, the &lt;a href=&#34;https://www.faucet.org.nz/&#34;&gt;faucet foundation&lt;/a&gt; has published a list of requirements for support, and there are a reasonable number of vendors that actually conform. The real key that I learned in this process is that without proper vendor support (which had been several lacking in the past), and without multi-table, OpenFlow is not positioned for success. It comes down to using the right tools for the job, and OpenFlow (as well as SDN) is no different. Originally this post was to detail the process of building this network, much like posts in the past where there has been a “do this, then do that” how-to, it’s more or less unnecessary here. Why? The faucet project is serious, well documented and generally here to work. The expectation is that this is not an enclave, or a science experiment, or a lab. It’s a production network with real people and real traffic. Read that again. The expectation is that this is stable, supportable, and can do in ready to use day-to-day. And it doesn’t disappoint. Installing is a snap, the &lt;a href=&#34;https://docs.faucet.nz/en/latest/tutorials/first_time.html&#34;&gt;documentation&lt;/a&gt; for faucet is fantastic and complete. If there is something missing or a question, the developers are incredibly responsive and very quick to answer and address any issues that may arise. It’s extremely low footprint - it runs very well on a raspberry pi and does not tax a raspberry pi series 2, even with the gauge telemetry interface (there is a &lt;a href=&#34;https://docs.faucet.nz/en/latest/installation.html#installing-on-raspberry-pi&#34;&gt;pre-built pi OS&lt;/a&gt; for anyone that would prefer a more turnkey option). You may be thinking “_But Nick, I need my CLI!!!_” You’re covered - and here is why: the developers use this system. They run real networks with it. Every day. They know what is necessary to manage and maintain a real production network and sometimes that means troubleshooting. Like many engineers that learned on traditional network equipment, most of us prefer a CLI to troubleshoot, so the inclusion of this feature from the controller is not really a surprise. The fctl command provides a reasonable visibility into the operations of the controller and can be augmented and scripted.```
buraglio@faucet:~ $ /usr/bin/fctl &amp;ndash;help&lt;/p&gt;

&lt;p&gt;usage:&lt;/p&gt;

&lt;p&gt;MACs learned on a DP.&lt;/p&gt;

&lt;p&gt;/usr/bin/fctl -n &amp;ndash;endpoints=&lt;a href=&#34;http://172.17.0.1:9302&#34;&gt;http://172.17.0.1:9302&lt;/a&gt; &amp;ndash;metrics=learned_macs &amp;ndash;labels=dp_id:0xb827eb608918&lt;/p&gt;

&lt;p&gt;Status of all DPs&lt;/p&gt;

&lt;p&gt;/usr/bin/fctl -n &amp;ndash;endpoints=&lt;a href=&#34;http://172.17.0.1:9302&#34;&gt;http://172.17.0.1:9302&lt;/a&gt; &amp;ndash;metrics=dp_status&lt;/p&gt;

&lt;p&gt;Retrieve FAUCET/Gauge state using Prometheus variables.&lt;/p&gt;

&lt;p&gt;optional arguments:&lt;/p&gt;

&lt;p&gt;-h, &amp;ndash;help            show this help message and exit&lt;/p&gt;

&lt;p&gt;-n, &amp;ndash;nonzero         nonzero results only&lt;/p&gt;

&lt;p&gt;-e ENDPOINTS, &amp;ndash;endpoints ENDPOINTS&lt;/p&gt;

&lt;p&gt;list of endpoint URLs to query&lt;/p&gt;

&lt;p&gt;-m METRICS, &amp;ndash;metrics METRICS&lt;/p&gt;

&lt;p&gt;list of metrics to query&lt;/p&gt;

&lt;p&gt;-l LABELS, &amp;ndash;labels LABELS&lt;/p&gt;

&lt;p&gt;list of labels that must be present&lt;/p&gt;

&lt;p&gt;&amp;ndash;display-labels DISPLAY_LABELS&lt;/p&gt;

&lt;p&gt;list of labels to filter display by (default all)
```Monitoring is also taken into account in the form of the gauge interface, which provides a nearly-real-time telemetry stream of important and useful information. Leveraging both the wealth of topological information that the controller has at its disposal and a familiar &lt;a href=&#34;https://github.com/prometheus&#34;&gt;prometheus&lt;/a&gt; / &lt;a href=&#34;https://grafana.com/&#34;&gt;grafana&lt;/a&gt; back / front end interface, the oft-touted notion of streaming telemetry is fully - and quite capably - realized. From the perspective of a networking monitoring and statistics geek, this is the cat’s meow. Very, very data rich. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/grafana-screencap.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/grafana-screencap-1024x275.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; A simple diagram of our office network pretty well explains the decoupled control plane architecture. Keep it simple, architect for success. Fundamentally SDN networks should be designed like other networks, redundant systems, good monitoring, out of band access. A good design principle is that if you wouldn’t do it on a traditional network, you probably shouldn’t do it for an SDN based network.   &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/faunet-office.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/faunet-office.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;   Don’t trust me? Fair enough, check out the &lt;a href=&#34;https://www.waikato.ac.nz/research/units/wand.shtml&#34;&gt;University of Waikato&lt;/a&gt; interface &lt;a href=&#34;https://grafana.redcables.wand.nz/d/000000003/redcables-bgp?orgId=1&#34;&gt;here&lt;/a&gt;. For more interface on the deployment at &lt;a href=&#34;https://wand.net.nz/&#34;&gt;WAND&lt;/a&gt;, check &lt;a href=&#34;https://redcables.wand.nz/&#34;&gt;this link&lt;/a&gt;. You won’t be disappointed.    &lt;/p&gt;

&lt;h2 id=&#34;my-take&#34;&gt;My take&lt;/h2&gt;

&lt;h3 id=&#34;building-and-running-it&#34;&gt;Building and running it&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://docs.faucet.nz/en/latest/&#34;&gt;documentation for faucet&lt;/a&gt; is indescribably better than any other SDN project I have worked with over the span of nearly 10 years. &lt;strong&gt;It’s also supportable.&lt;/strong&gt; My office has been running the enterprise network off of faucet for a while now, without issue, and it meets our design goals [stretch goal of BGP NFV is still in process - testing is successful]). It is easy to manage and very information rich. I can see security minded folks being very interested in the ACLs and other such options available.&lt;/p&gt;

&lt;h3 id=&#34;telemetry-and-analytics&#34;&gt;Telemetry and analytics    &lt;/h3&gt;

&lt;p&gt;   Where so many others in this space are talking about their Telemetry solution, this one is already here, complete, and usable. Frankly, I am fully comfortable running a production network on this technology, operationally it is truly easier. From a security perspective, the options added scale well and deliver on their promise. Where OpenFlow was once touted as the networking silver bullet (without a lot of real stick time to prove or disprove it), it has now fallen comfortable into a nice, supportable model.&lt;/p&gt;

&lt;h3 id=&#34;up-next&#34;&gt;Up next….    &lt;/h3&gt;

&lt;p&gt;If you think this is cool, wait until &lt;a href=&#34;https://sc18.supercomputing.org/&#34;&gt;SuperComputing 18&lt;/a&gt;, where we’re deploying a &lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6461072411969363968/&#34;&gt;first-of-it’s kind network&lt;/a&gt;, all controlled by FAUCET.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DDoS mitigation podcast, black hole routing</title>
      <link>https://forwardingplane.net/post/ddos-mitigation-podcast-black-hole-routing/</link>
      <pubDate>Thu, 01 Nov 2018 10:53:08 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ddos-mitigation-podcast-black-hole-routing/</guid>
      <description>&lt;p&gt;As an often-security-engineer and an individual that has been working on large networks for quite a while, dealing with DDoS, or the threat of DDoS is a well traveled path. Recently I was invited to discuss some of the basics of DDoS mitigation on the Network Collective Podcast. This was a really fun and insightful chat with a wealth of great information for engineers and operators of any skill level.   &lt;a href=&#34;https://vimeo.com/298146825&#34;&gt;Ep38 - DDoS Mitigation&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/networkcollective&#34;&gt;Network Collective&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.   As mentioned in the cast, there are some good, free resources out there for black hole routing. &lt;a href=&#34;https://fod.grnet.gr/welcome?next=/&#34;&gt;GRnet firewall on Demand&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2011/10/black-hole-routing/&#34;&gt;BlackHole Routing Basics&lt;/a&gt; &lt;a href=&#34;https://www.nanog.org/sites/default/files/tuesday_general_ddos_ryburn_63.16.pdf&#34;&gt;Using BGP FlowSpec slides from NANOG&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The rush to automation and the IT pendulum</title>
      <link>https://forwardingplane.net/post/the-rush-to-automation-and-the-it-pendulum/</link>
      <pubDate>Thu, 18 Oct 2018 14:20:52 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/the-rush-to-automation-and-the-it-pendulum/</guid>
      <description>

&lt;p&gt;Recently, the venerable &lt;a href=&#34;https://blog.ipspace.net&#34;&gt;Ivan Pepelnjak&lt;/a&gt; published a very insightful article about &lt;a href=&#34;https://blog.ipspace.net/2018/10/why-is-network-automation-such-hot-topic.html&#34;&gt;automation becoming such a popular topic&lt;/a&gt; that was spawned by an email from one of his readers. I found this article to be spot on, and wanted to add a bit of my own opinion into the automation pie, as I have been spending a lot of time on automation as it related to existing networks as well as into SDN based environments. There is a link, and I wanted to explore it a bit more whilst adding a healthy dose of my opinion. A very large part of the automation push is the IT pendulum swing. Like those of us that worked in the burgeoning ISP world, automating was born of necessity. Except - we didn&amp;rsquo;t call it automation. Most of us didn&amp;rsquo;t call it anything, it was sysadmin scripting at worst and full blown orchestration at best. And there were even commercial platforms (see broadband provisioning tools). However, like many of us that were in the early ISP days, at the very least we had some rudimentary programming and scripting skills because we either had to develop them to stay afloat or we came from an early applied computer science background. Those skills, like a lot of other things, also have the pendulum swing.&lt;/p&gt;

&lt;h2 id=&#34;https-media-giphy-com-media-tttkr0wqcuct2-giphy-gif&#34;&gt;&lt;img src=&#34;https://media.giphy.com/media/ttTKR0wqCUCt2/giphy.gif&#34; alt=&#34;&#34; /&gt;&lt;/h2&gt;

&lt;h2 id=&#34;the-pendulum&#34;&gt;The pendulum.&lt;/h2&gt;

&lt;p&gt;Think of the pendulum in terms of computing, as it&amp;rsquo;s the easiest to quantify. Computing went from centralized (i.e. the mainframe) to decentralized (i.e. the desktop PC). Now we&amp;rsquo;re moving back into the &amp;ldquo;centralized&amp;rdquo; model in the push to cloud (ok, that may be a tad different, but conceptually it&amp;rsquo;s the same - work with me). Moving computationally expensive operations out of a single, personal system into a larger resource while reducing the overhead of the end station. Think &lt;a href=&#34;https://www.amazon.com/Google-Pixelbook-RAM-128GB-GA00122-US/dp/B075JSK7TR/ref=sr_1_4_acs_osp_osp19-42c2a08e-2d_2?s=pc&amp;amp;ie=UTF8&amp;amp;qid=1539871559&amp;amp;sr=1-4-acs&amp;amp;keywords=chromebook&amp;amp;tag=crverifiedexp-20&amp;amp;ascsubtag=42c2a08e-2d48-4a89-8acb-841bc830f277&amp;amp;linkCode=oas&amp;amp;cv_ct_id=amzn1.osp.42c2a08e-2d48-4a89-8acb-841bc830f277&amp;amp;cv_ct_pg=search&amp;amp;cv_ct_wn=osp-search&amp;amp;pf_rd_s=desktop-sx-inline&amp;amp;pd_rd_w=qgIuG&amp;amp;pf_rd_i=chromebook&amp;amp;pd_rd_wg=OLHr0&amp;amp;pf_rd_p=53b688eb-671a-4acd-886f-dc89fa36d3d2&amp;amp;pf_rd_t=301&amp;amp;pd_rd_r=4d4ed571-35bf-4be9-860c-7deaa1ce8cc4&amp;amp;pf_rd_r=QNRHZW6VWAWZ13HMDGF7&amp;amp;pf_rd_m=ATVPDKIKX0DER&amp;amp;creativeASIN=B075JSK7TR&amp;amp;pf_rd_p=53b688eb-671a-4acd-886f-dc89fa36d3d2&amp;amp;pd_rd_wg=OLHr0&amp;amp;pd_rd_i=B075JSK7TR&amp;amp;pf_rd_s=desktop-sx-inline&amp;amp;pf_rd_t=301&amp;amp;pf_rd_i=chromebook&amp;amp;pf_rd_m=ATVPDKIKX0DER&amp;amp;pd_rd_w=qgIuG&amp;amp;pf_rd_r=QNRHZW6VWAWZ13HMDGF7&amp;amp;pd_rd_r=4d4ed571-35bf-4be9-860c-7deaa1ce8cc4&#34;&gt;Chromebook&lt;/a&gt; or VDI thin client. Dramatic changes do not happen quickly in the networking world, and there are a number of simple reasons why&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mean time to replacement is somewhere between 5 and 10 years depending on the environment&lt;/li&gt;
&lt;li&gt;Standards for networking take &lt;strong&gt;For-ev-er&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, even if the time to replace lifecycle is short, the windows for new tech standards, vendor implementation, and knowledge dissemination to occur rarely, if ever, line up. What this means is that new tech is very slow to adopt in the network world. Even I make the mistake of being far too impatient with this process sometimes, as &lt;a href=&#34;https://twitter.com/bcjordo?lang=en&#34;&gt;Jordan Marti&lt;/a&gt;n called me out on in a &lt;a href=&#34;https://thenetworkcollective.com/2018/02/otc-nfd17/&#34;&gt;Network Collective podcast&lt;/a&gt; a few months ago (p.s., it&amp;rsquo;s a fun listen - check it out). Back to automation. As IT changed in non-service providers from a questionable money sink to a potentially critical revenue generating business and communications environment the generalist IT workers slowly morphed into the specialists. Developers, Network Engineers, Systems Engineers, phone system admins, etc. As this occurred, the disciplines fractured and the skillsets refined, and in many cases lost the generalist foundation in trade for a deeply focused skill set.&lt;/p&gt;

&lt;h2 id=&#34;the-sdn&#34;&gt;The SDN&lt;/h2&gt;

&lt;p&gt;After a decade or two of this shift, SDN blows onto the scene. SDN, as it emerges and becomes the new marketing darling of many a start up and huge company alike, promises to destroy boundaries and obsolete basically everything - equipment, skill sets, people, cars, dogs, cats, water, air&amp;hellip;&amp;hellip;.everything. The issue is that from a few research products that had ground breaking ideas came a monster. As over-hyped, over-marketed, and under developed juggernaut that had a different meaning to anyone you asked. Whole some folks plugged away quietly on &lt;a href=&#34;https://faucet.nz/&#34;&gt;projects that actually wor&lt;/a&gt;k, and &lt;a href=&#34;http://www.forwardingplane.net/2012/11/sdn-across-domains-in-the-wan-a-novice-look/&#34;&gt;experimented&lt;/a&gt; with &lt;a href=&#34;https://esnetupdates.wordpress.com/2015/11/03/esnets-nick-buraglio-leading-scinets-first-sdn-effort-at-sc15/&#34;&gt;deployments meant to function in production&lt;/a&gt;, the marketing machines created more and more hype and delivered only a few promises. This is the far out pendulum swing. Many operators recoiled. Enterprises said &amp;ldquo;why?&amp;rdquo;, and folks trying to push boundaries with new deployments were saying &amp;ldquo;&lt;em&gt;wait, let&amp;rsquo;s figure out &amp;ldquo;what&amp;rdquo; before we ask &amp;ldquo;why?&amp;rdquo;&lt;/em&gt;&amp;rdquo;. Then the pendulum started swinging back. Automation is back, and now there are &lt;a href=&#34;https://www.ansible.com/&#34;&gt;products&lt;/a&gt; and tools, and &lt;a href=&#34;https://www.ipspace.net/Hands-On_Network_Automation&#34;&gt;resources&lt;/a&gt;. We&amp;rsquo;re centering on a safer alternative that conservative enterprises can deploy safely and without event. We&amp;rsquo;re back to the fundamentals and the basics of what worked long ago - but now we have help.&lt;/p&gt;

&lt;h2 id=&#34;my-take&#34;&gt;My take&lt;/h2&gt;

&lt;p&gt;Make no mistake, I am still believer in the fundamentals that something resembling SDN brings to the table and have been working on &lt;a href=&#34;https://sc18.supercomputing.org/blog/&#34;&gt;significant SDN projects even recently&lt;/a&gt;, including moving our entire office over to FAUCET controlled switches (more on this soon), and a fair amount of work in the segment routing / PCE space. However, I am not a fan of the marketing machine, especially when there is a poverty of useful data to build said marketing from, and said marketing contains an &lt;a href=&#34;https://www.forwardingplane.net/2013/03/my-sdn-soapbox-now-with-ipv6/&#34;&gt;overabundance of sensational FUD&lt;/a&gt;. New technology needs to be supportable to be deployed, and it happens, very, very slowly. Much like IPv4 to IPv6, Frame Relay to ATM, and circuit switched to packet switched, as SDN technologies become more and more exposed and easier to use, they become &amp;ldquo;just another thing&amp;rdquo;, and that takes time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Speculation on the obvious: stuff changes, why freak out?</title>
      <link>https://forwardingplane.net/post/speculation-obvious-stuff-changes-freak/</link>
      <pubDate>Fri, 08 Dec 2017 00:30:15 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/speculation-obvious-stuff-changes-freak/</guid>
      <description>&lt;p&gt;I have my +100 hat of irreverence on today so it&amp;rsquo;s time for a soapbox post. Having recently read a several posts and articles on what seems to be the never-ending cavalcade of assertions that &amp;ldquo;networking people will be out of jobs and you&amp;rsquo;d better learn to be a programmer&amp;rdquo; - or more succinctly put: the &amp;ldquo;dramatic changes in IT networking&amp;rdquo;. To this I respond simply:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://giphy.com/gifs/duh-my-little-pony-I2GbfS4S53Fss&#34;&gt;via GIPHY&lt;/a&gt; The scorched earth, &amp;ldquo;there&amp;rsquo;s a hole in the boat, we&amp;rsquo;re all going to die!&amp;rdquo; stuff is really just sensationalism, and frankly I&amp;rsquo;m kinda tired of it because we shouldn&amp;rsquo;t need to point it out. The fact of the matter is that the only constant is change. IT has changed dramatically since I got involved in the 90&amp;rsquo;s. I don&amp;rsquo;t feel that- and I&amp;rsquo;m pretty sure I&amp;rsquo;m right - there is anything dramatically different in the current and forthcoming changes in data networking than anything that has happened in the last thirty years. Sure, we&amp;rsquo;re talking about AI and &amp;ldquo;Intent&amp;rdquo; and automation. The fact of the matter is that there is nothing any more dramatic happening now than thirty years ago, it is just easier to see now. Lets think about something most of us can relate to: The phone that sits in my pocket is orders of magnitude faster than my first PC, like &lt;em&gt;multiple&lt;/em&gt; CPU cores at 2.9Ghz vs 1.77Mhz faster. It has a resolution and color profile that is, quite frankly, &lt;strong&gt;&lt;em&gt;insane&lt;/em&gt;&lt;/strong&gt; compared to a monochrome screen. It has Gigs of memory where my first PC had 4k. It connects to a &lt;strong&gt;global network&lt;/strong&gt; &amp;mdash;-with &lt;strong&gt;NO WIRES&lt;/strong&gt;. I don&amp;rsquo;t even need to plug it in to charge it with good &amp;lsquo;ol electricity. For all intents and purposes, this thing that I carry around and toss on my desk like something I could care less about is freaking &lt;strong&gt;MAGIC&lt;/strong&gt; compared to what computing was like thirty years ago. No, twenty years ago. No, TEN years ago. I can literally talk to it and it does &amp;ldquo;stuff&amp;rdquo; for me. It&amp;rsquo;s like Star Trek came to life without but is oddly lacking the green alien lady. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/12/welcome-to-the-world-of-tomorrow.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/12/welcome-to-the-world-of-tomorrow.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; Progress happens, things change. You get the point. What does this mean? It means the same thing that it&amp;rsquo;s always meant since the beginning of time. Adapt or be left behind. This isn&amp;rsquo;t a new concept. If you&amp;rsquo;re unwilling to change and learn, you might be in trouble, enjoy your typewriter, or your token ring. Or your FDDI. Or Windows 3.11 for workgroups. Or floppy disks. Or using cassette tapes for storage of your totally tubular BASIC program. If you&amp;rsquo;re remotely close to opposite of that you&amp;rsquo;ll be fine. If you&amp;rsquo;re still struggling with change, I suggest reading &amp;ldquo;&lt;a href=&#34;https://www.amazon.com/Moved-Cheese-Spencer-Johnson-M-D/dp/0743582853&#34;&gt;Who moved my cheese?&lt;/a&gt;&amp;rdquo;. It&amp;rsquo;s seriously worth your time, I have read it several times myself. Tragedy averted.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configuration backups and an opportunity for automation and management</title>
      <link>https://forwardingplane.net/post/configuration-backups-opportunity-automation-management/</link>
      <pubDate>Tue, 03 Oct 2017 17:19:54 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/configuration-backups-opportunity-automation-management/</guid>
      <description>

&lt;p&gt;Configuration management is a critical part of successfully and efficiently run any network. From the early days of networking there have been options for doing configuration backup. Several projects have been around for literally decades, enabling the backup of a myriad of critical network devices and providing historical archives. Many of these projects and platforms require a reasonable amount of unix experience and perhaps some development skills. I’m going to give a quick synopsis of my three favorites, these a all very different in execution but provide the same types of services - configuration backup, diff, and archive (and not much else). While this is important (you’re doing this stuff, right!?!?!)&lt;/p&gt;

&lt;h3 id=&#34;unimus-https-www-unimus-net&#34;&gt;&lt;a href=&#34;https://www.unimus.net&#34;&gt;Unimus&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Unimius is a commercial platform (free for up to 5 devices) that runs on-premesis. It provides a very easy to use configuration and management web interface and has wonderfully - and uncommonly - responsive help and support. This platform has support for winning on windows, linux, Mac, whatever runs Java. It’s reasonably priced and has a large amount of what I call “hooks” into other things. Unimus also has some an option that is uncommon - it can back up web based equipment. Unimus has a huge amount of device support as well. I did find a few caveats which I suspect are java limitations. For example, It cannot take an IPv6 address as as a “device” and seems to fall back on v4 if the hosts are dual stacked. I also have yet to find a way to define a specific user for discovery which has resulted in some false positives as far as ssh brute force rules. I like this project quite a bit and think it has a lot of potential to do a lot more from the management perspective should they choose to do so.&lt;/p&gt;

&lt;h4 id=&#34;unimus-high-level&#34;&gt; Unimus High level&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Java based&lt;/li&gt;
&lt;li&gt;Commercial (license based on number of devices)&lt;/li&gt;
&lt;li&gt;Good web interface for view and configuration&lt;/li&gt;
&lt;li&gt;Cannot take a v6 address as an input device - works resolving v6 addresses&lt;/li&gt;
&lt;li&gt;Multi device config diff&lt;/li&gt;
&lt;li&gt;Extremely useful configuration search option&lt;/li&gt;
&lt;li&gt;Multiple notification options (slack, email, etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rancid-http-www-shrubbery-net-rancid&#34;&gt;&lt;a href=&#34;http://www.shrubbery.net/rancid/&#34;&gt;RANCID&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;RANCID is the first config backup system I ever used and has been actively developed for decades. It’s written in perl, expect, and shell. I’ve written several modules for RANCID over the years and has an large install base due to it’s longevity. It has has a recent-ish re-write which has made it more scalable but has made it much harder to extend comparatively speaking. It’s also been forked several times adding things like git repo support.&lt;/p&gt;

&lt;p&gt;Of the network management options I’ve seen (more on that below), most of the ones not using something like NetConf are leveraging the login scripts from RANCID to do the heavy lifting.&lt;/p&gt;

&lt;h4 id=&#34;rancid-high-level&#34;&gt;RANCID High Level&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Decent device support&lt;/li&gt;
&lt;li&gt;Multiple repositories (RCS, SVN, CVS, GIT)&lt;/li&gt;
&lt;li&gt;Several forks - can be confusing&lt;/li&gt;
&lt;li&gt;RANCID 3 changes the architecture and syntax dramatically&lt;/li&gt;
&lt;li&gt;Has a series of login scripts that are commonly leveraged for performing other actions like pushing configuration&lt;/li&gt;
&lt;li&gt;Code is crufty - decades of history rolled into the text&lt;/li&gt;
&lt;li&gt;Perl, Expect, and shell based&lt;/li&gt;
&lt;li&gt;Web front end is an add on for viewing the chosen repository&lt;/li&gt;
&lt;li&gt;Notification typically consists of email diffs&lt;/li&gt;
&lt;li&gt;Code has a reasonable amount of age on it and can be a bit of a challenge to decipher&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;oxidized-https-github-com-ytti-oxidized&#34;&gt;&lt;a href=&#34;https://github.com/ytti/oxidized&#34;&gt;Oxidized&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Oxidized is an interesting project. It’s written by a very, very clued network engineer / toolsmith and has a huge amount of device support. Oxidized seems to have flexibility as one of its main driving goals - it’s crazy flexible and works extremely well. It’s written in ruby and simple setup isn’t hard at all (and is well documented). It integrates in a lot of tools such as &lt;a href=&#34;https://www.librenms.org/&#34;&gt;librenms&lt;/a&gt; and &lt;a href=&#34;https://slack.com/&#34;&gt;slack&lt;/a&gt;. Oxidized required a little bit of knowledge of setting up simple linux services but it feels a &lt;em&gt;lot&lt;/em&gt; more modern than some of the legacy tools like RANCID. This has been my go-to for a while now.&lt;/p&gt;

&lt;h4 id=&#34;oxidized-high-level&#34;&gt;Oxidized High Level&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Ruby based&lt;/li&gt;
&lt;li&gt;Extremely flexible&lt;/li&gt;
&lt;li&gt;Actively developed&lt;/li&gt;
&lt;li&gt;Good support&lt;/li&gt;
&lt;li&gt;Great device support&lt;/li&gt;
&lt;li&gt;Very modular&lt;/li&gt;
&lt;li&gt;Code base is clean and streamlined&lt;/li&gt;
&lt;li&gt;Notifications can be somewhat convoluted to set up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Network Management as defined by me: Having knowledge of the network ecosystem from the packet flow to the active configuration. Leveraging this knowledge in order to push change to production network equipment either programmatically or on-demand.&lt;/p&gt;

&lt;p&gt;These items should all be thought of as configuration archiving tools, not as configuration management - the reason being is that by default none of them push changes. They all grab the configurations, diff against an existing stored configuration and calculate a diff, likely storing it for historical research / baseline research and triage. The lack of what I am describing as “management” is a real opportunity as there is very little available that is available out of the box that is:&lt;/p&gt;

&lt;p&gt;A. Multiplatform and&lt;/p&gt;

&lt;p&gt;B. Actually usable&lt;/p&gt;

&lt;p&gt;What we have here is an opportunity. An opportunity to add some level of automation or “management” into the existing configuration archiving tools. Look at the attributes of all of these tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They’re cross platform, non-vendor specific. I do not know how most people work, but in 20 years I have never worked on a single vendor network. Ever.&lt;/li&gt;
&lt;li&gt;They have knowledge of some commands in each platform,&lt;/li&gt;
&lt;li&gt;They’re already trusted to log in and at least read configurations meaning they’re trusted to have access and they’re trusted to know and save the configuration.&lt;/li&gt;
&lt;li&gt;At least one of them has been historically used to prop up home grown management tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This seems self evident. Adding some rudimentary ability to make simple changes to network equipment is a good start.&lt;/p&gt;

&lt;p&gt;This could be something as simple as  setting an NTP server or creating a VLAN, but if any of them were to start wrapping these into supported code, make it easy to set up, and easy to use, we’d be well on our way to having “automation for the rest of us”. Once things are trusted enough to make the change the next logical step is allowing those changes to happen autonomously. NTP server deviate from the norm? Change it automatically. This can also be leveraged as a baseline deviation outdoing tool with the integration of a simple “source of truth” for common attributes. The opportunities are ripe and ready to be picked.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No privacy may be the new privacy.</title>
      <link>https://forwardingplane.net/post/no-privacy-may-new-privacy/</link>
      <pubDate>Sat, 25 Mar 2017 18:06:01 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/no-privacy-may-new-privacy/</guid>
      <description>&lt;p&gt;Taking politics and putting them aside, what the new administration has &lt;a href=&#34;https://www.nytimes.com/2017/03/23/technology/congress-moves-to-strike-internet-privacy-rules-from-obama-era.html?_r=0&#34;&gt;been attempting to change&lt;/a&gt; with regard to internet privacy is something we should &lt;em&gt;&lt;strong&gt;all&lt;/strong&gt;&lt;/em&gt; be informed about. Wether you have a tin foil hat or don&amp;rsquo;t care, &amp;ldquo;knowing is half the battle&amp;rdquo;. The other half is doing - which I will also lend some brief insight to (sorta). What&amp;rsquo;s changing? Nothing yet (as of the time of this writing). What will likely change? The ability of your internet (mobile or not) to sell your browsing habits and personal usage data. What does this mean? Well, it means that if you visit facebook, amazon, JC Penny, or buy-adult-toys.com a lot, that information can be sold to advertisers, private companies, etc., etc. &amp;ldquo;But I use SSL, I&amp;rsquo;m safe&amp;rdquo;. Nope. DNS query data - the requests made for a domain name like google.com, used to map a name to an IPvX address - that can be sold too. The content of the browsing is great, but the knowledge that a site was visited is just as useful&amp;hellip;and this data is generated not just by traditional &amp;ldquo;browsing&amp;rdquo;, everything that touches the internet uses it. Apps, Games, everything. Removing these rules also means that there is no oversight into how this collection can be done, what kind of data - sensitive or not - can be collected and sold and to whom. That&amp;rsquo;s what deregulation looks like, folks.&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/personal.info_.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/personal.info_.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; What does this mean for the average internet user like, say, my Mom or Dad? It means that when they look at ANYTHING online, it&amp;rsquo;s likely going to be collected, indexed, data mined, and then sold to be further data mined and then these users will get targeted for a barrage of advertising. Worse yet, this data is ripe for misuse. What if the data is compromised? Sorry. That&amp;rsquo;ll suck for sure. Even worse that than, what if that data is used by nation states? What if it&amp;rsquo;s misinterpreted? It&amp;rsquo;s a mess. Has this data been used in this manner in the past? Sure. All of the providers use it internally. &lt;a href=&#34;http://money.cnn.com/2016/07/25/technology/yahoo-verizon-deal-sale/&#34;&gt;Verizon bought yahoo&lt;/a&gt; for this reason.  The real issue is that most people do not understand what all of this means. Since the internet is a completely traceable environment in 99.999% of cases, unlike really anything prior, this is paramount. What can you do? Well, if you&amp;rsquo;re not technical, good luck. Perhaps if this happens it will spark a new industry of private overlays like Tor to be commercialized and widely adopted. Wait with the FCC leaning toward rolling back net neutrality those services could likely be slowed or blocked completely. Sorry. On the fringes are the mom-and-pop ISPs - they still exist. WISPs, small and rural providers. These are less likely to be the safest bet in the future should this come to pass. Mobile metadata - what will generate the majority of the controversy - is likely to be the most often sold because there will be such a diverse and deep pool of data. Another of the side effects is this could potentially be an even higher adoption of SSL, which is good, but may also lead to a higher adoption of the vile SSL decryption practice. Lets hope not. What will I do? Not sure. I have extensive experience running DNS servers and VPNs. I may just start connecting to one of my VPS devices and run everything over OpenVPN from both mobile and traditional connections. There are some super simple &lt;a href=&#34;https://github.com/kylemanna/docker-openvpn&#34;&gt;docker how-tos&lt;/a&gt; out there that Ive used in the past. VPS service are cheap, I have a few but my &lt;a href=&#34;https://prgmr.com/xen/&#34;&gt;prgmr.com&lt;/a&gt; VPS is my favorite. Don&amp;rsquo;t forget to tunnel IPv6 too. Welcome to 2017.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Buzzwords, technology, terminology, and the interconnection of modern networking</title>
      <link>https://forwardingplane.net/post/buzzwords-technology-terminology-interconnection-modern-networking/</link>
      <pubDate>Mon, 18 Jan 2016 16:33:09 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/buzzwords-technology-terminology-interconnection-modern-networking/</guid>
      <description>&lt;p&gt;&lt;em&gt;I&amp;rsquo;m way overdue for a soapbox session &amp;ndash; I found this one in my drafts and thought it was something I needed to put out there. It&amp;rsquo;s already dated in terminology but that actually helps make the point - it&amp;rsquo;s hard to keep up. &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lets throw this out there: social media can be exhausting. Do not misunderstand me, it’s a great tool for communication, obtaining and disseminating information as well as standard goofing around. It’s also a serious business for a huge amount of companies. I use it extensively myself and I’ll assume there is a pretty good chance you followed a tweet or other social media link to get here. However, for a green network engineer looking for a path forward it can be a bit daunting. Those my age never had the social media aspect to deal with when we were learning, we may have had IRC or other haphazard back channels to bounce ideas and questions, but for the most part, the resources were far more limited than they are today. In actuality, I believe that this was a bit of an advantage that we had over today: we were often forced to bulldoze through problems, making mistakes that taught us deep understandings of the inner working of that given technology. It also sucked a lot more [time].&lt;/p&gt;

&lt;p&gt;Am I right? Maybe. Maybe not. Who is to say? These days I take full advantage of the wealth of information that is the internet for both personal and professional tasks, I would be a tad crazy not to. It&amp;rsquo;s why I write the tech stuff I write.&lt;/p&gt;

&lt;p&gt;With all of that, though, comes so many buzzwords and so much hype that it is very easy for an aspiring network engineer (or any professional IT hopeful, student or casual techie) to become completely overwhelmed by simply looking at twitter and following a handful of key players. I’ve been doing what I do with networks since the 1990s and even I have been feeling a little overwhelmed by the sheer number of “Network Engineer Killer” or “Must know” technologies being thrown around in the last few years. It&amp;rsquo;s both exciting, encouraging and at the same time enough to make even the most grizzly engineer feel snowed under.&lt;/p&gt;

&lt;p&gt;Wait for it……Cloud. No wait, DevOps. Containers! NO! NO! SDN! They&amp;rsquo;re all cool and they&amp;rsquo;re all important. They are also a lot to take in.&lt;/p&gt;

&lt;p&gt;I have been thinking a great deal about DevOps and SDN lately. Being a really, really bad developer, DevOps is a tad uncomfortable for me. It is an obviously useful skill set: Understanding code and automation. It’s powerful and &lt;strong&gt;will&lt;/strong&gt; make your professional life easier. Do you need to obsess over it? Probably not (do you need to obsess over any of it?!?). Remember that internet thing that I mentioned before? Yeah, there are a lot of resources there. Search engines are your friend.&lt;/p&gt;

&lt;p&gt;Will you need to know the concepts? For sure. Guess what, though? There are a &lt;strong&gt;ton&lt;/strong&gt; of resources for that too.&lt;/p&gt;

&lt;p&gt;As I was brainstorming this, I mind-mapped some of the things that jumped into my brain [&lt;a href=&#34;https://mindnode.com/&#34;&gt;mindnode pro&lt;/a&gt; is a fantastic app for this, I highly recommend it]. Things that get a lot of attention and maybe deserve a cursory glance. Lets break them down in a simple-ish and concise-ish manner and understand that by the time of this writing I’m positive it will be outdated and there will be some new whiz-bang thing that the marketing machine will be saying is the “something-killer&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Here are the high level things I see thrown around a lot. For what it’s worth, OpenDayLight has &lt;a href=&#34;http://www.opendaylight.org/project/technical-overview&#34;&gt;a page&lt;/a&gt; with some definitions that is pretty good, too.&lt;/p&gt;

&lt;p&gt; &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/07/Networking-Tech-Relationships.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/07/Networking-Tech-Relationships.png&#34; alt=&#34;Networking Tech Relationships&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is absolutely &lt;strong&gt;not&lt;/strong&gt; all-encompassing and is likely missing major things, however, the point is really not to be accurate as much as it is to demonstrate that there is a &lt;strong&gt;monumental&lt;/strong&gt; amount of scope that is in some ways interconnected and in other ways completely autonomous. It is also pretty clear that due to the nature of what “DevOps” is, it has ties into many other things.&lt;/p&gt;

&lt;p&gt;The biggest take-away is that the communication paths need to be there - Better communication between these specializations makes for better, more secure, more usable tools.&lt;/p&gt;

&lt;p&gt;It is how the DevOps is done, &lt;strong&gt;not&lt;/strong&gt; what it is doing.&lt;/p&gt;

&lt;p&gt;What I am really getting at here is that there is no need to get overwhelmed. You don’t need to know all of this stuff. If you know a little about most of it and a lot about one or two topics, then in my opinion you are doing really, really well.&lt;/p&gt;

&lt;p&gt;My best advice to any new IT person is not to know everything but to know where to find it - and then share what you learned.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building Interdomain SDN part 3</title>
      <link>https://forwardingplane.net/post/building-interdomain-sdn-part-3/</link>
      <pubDate>Fri, 06 Nov 2015 04:37:23 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/building-interdomain-sdn-part-3/</guid>
      <description>&lt;p&gt;A few years ago I wrote &lt;a href=&#34;http://www.forwardingplane.net/2012/11/sdn-across-domains-in-the-wan-a-novice-look/&#34;&gt;some text&lt;/a&gt; on &lt;a href=&#34;http://www.forwardingplane.net/2013/01/sdn-across-the-wan-part-deux-primitives/&#34;&gt;interdomain SDN&lt;/a&gt;. Years later, work is being done, smart people are thinking about it and building ways to make it a reality. Not being one to give up on an idea, I gave &lt;a href=&#34;https://docs.google.com/presentation/d/1anAaqWR8wmzKO5fqidDy9QJXW4RiVshX9Miq3PoDv9E/edit&#34;&gt;this presentation&lt;/a&gt; in may at &lt;a href=&#34;http://chinog.org/meetings/chi-nog-05/&#34;&gt;ChiNOG&lt;/a&gt;  on what my take on what that architecture should be. I (we) propose that the use of existing protocols such as &lt;a href=&#34;https://tools.ietf.org/html/rfc5575&#34;&gt;BGP FlowSpec&lt;/a&gt; will make this realistically deployable and maintainable given some &lt;a href=&#34;https://github.com/dwcarder/sdn-ix-demo&#34;&gt;simple, pluggable middleware&lt;/a&gt;. As work continues to happen on this, my belief is that this is a very sound (and simple) concept. The middleware is modular and flexible enough that it can stand alone or plug into an existing code base such as ODL or Ryu. As &lt;a href=&#34;http://sc15blog.blogspot.com/2015/11/simplifying-worlds-most-powerful.html&#34;&gt;I work on the SDN deployment&lt;/a&gt; for the &lt;a href=&#34;http://www.sc15.org&#34;&gt;annual international supercomputing conference&lt;/a&gt;, and work on the &lt;a href=&#34;https://www.es.net/network-r-and-d/workshops/&#34;&gt;SDN for scientific networking workshop&lt;/a&gt;,  I become more and more convinced that there needs to be an operationally viable and simple way to support these types of networks in ways that are thin and simple since it is a newer concept and some of the protocols involved (e.g. OpenFlow) is still in its infancy.  Here is the video of the talk for anyone interested in listening to me talk about it for 20 minutes. As a reference, this is a great talk from the same conference on BGP FlowSpec that adds a lot of credence to the use of it as a policy dissemination protocol.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Brocade does a double down on SDN</title>
      <link>https://forwardingplane.net/post/brocade-does-a-double-down-on-sdn/</link>
      <pubDate>Sat, 28 Mar 2015 16:09:11 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/brocade-does-a-double-down-on-sdn/</guid>
      <description>&lt;p&gt;Since &lt;a href=&#34;http://techfieldday.com/event/nfd9/&#34;&gt;Network Field Day 9&lt;/a&gt;, I have spent more and more time mentally grinding on what Brocade is doing. I have been a pretty vocal critic of the foundry hardware and software platform since my first experience with it years and years ago. I found it to be lacking in completed features, Layer 3 functionality and general stability.&lt;br /&gt;
This is one reason that anyone reading this should take pause and think about the background this post is sourcing from and how much of a shift it is. I tend to be a pretty harsh critic and have (more than once) been labeled as irreverent when it comes to what is stated in the network and security industry, instead focusing on what is actually necessary in a production network. Brocade has added some good products and features, keeping their SDN features at the forefront, as expected. These are great, but while useful and innovataive, I am less interested in those technical abilities. Brocade has been a long standing icon in the SDN and specifically in the openflow and &lt;a href=&#34;http://www.opendaylight.org&#34;&gt;OpenDayLight&lt;/a&gt; space since the very early days. In fact, from an outsiders perspective they&amp;rsquo;ve bet their networking arm on it. They were one of the first to market and are able to make software changes quickly and add significant features due to the fact that their larger boxes are FPGA based. This is where it gets interesting for me as someone that had to manage large Foundry/Brocade networks for a number of years and who sports the scars and experiences to prove it. Knowing that the majority of the issues with their platform were software related things like lack of full featured protocols, buggy Layer 3 features and their infamously poor multicast support, the fact that they are laser focused on software defined networking has my wheels turning, and let me tell you why:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Brocade is slurping up pretty much all of the thought leaders, idea producers, and game changers in the SDN community. This isn&amp;rsquo;t exactly ground breaking news, but it is worth repeating because it is significant. It signals, in a very public way, that they are not messing around. They&amp;rsquo;re embracing SDN and they are ready to stop selling sugar water and change the [networking]world. There is a related branch to this, bear with me, I&amp;rsquo;ll come back to it.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;Brocade purchased &lt;a href=&#34;http://www.brocade.com/launch/vyatta/&#34;&gt;Vyatta&lt;/a&gt;, a completely software based company and they did not just absorb the IP and rebadge it. They are actively integrating it, as a product, into their portfolio.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;Brocade is &lt;strong&gt;supporting&lt;/strong&gt; an open sourced based commercialized SDN controller. This signals that they are ready for someone to buy it, deploy it and use it in production. And to answer support questions.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Circling back to my first point:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Brocade hired &lt;a href=&#34;https://www.linkedin.com/in/michaelbushong&#34;&gt;Michael Bushong&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may ask, why does that really matter? I assert that this indicates a very key element inside of Brocade: they know that they need to adapt and that they need a visionary to help direct that change. Bushong has a long history of enacting significant change. He is also a smart guy (see degree from UC Berkeley in advanced heat transfer &amp;amp; fluid dynamics). Bushong was responsible for the SDN group and the One Junos initiative at Juniper. He was also a key player at Plexxi, a very innovative networking company with a unique product. He knows how to motivate and promote change and has built a culture that is open to it. In fact, after the NFD9 presentation several of the team members approached a handful of us and asked us to elaborate on the things we were asking about and requesting. I have also received follow ups on those items. These things may seem insignificant, but give some serious thought to how often network vendors ask these questions, follow up and actually &lt;em&gt;listen&lt;/em&gt; to needs and requirements that are non-standard.&lt;/p&gt;

&lt;p&gt;All of that opinion aside, Brocade is also bringing good featues and really thinking about how to change and more importantly, improve, a key element in a sucessful company (see H.G Wells: &amp;ldquo;Adapt or perish, now as ever, is nature&amp;rsquo;s inexorable imperative.&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;I remain intrigued.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenDNS acquires BGPMon and the future of route monitoring</title>
      <link>https://forwardingplane.net/post/opendns-acquires-bgpmon-and-the-future-of-route-monitoring/</link>
      <pubDate>Fri, 20 Mar 2015 05:18:30 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/opendns-acquires-bgpmon-and-the-future-of-route-monitoring/</guid>
      <description>&lt;p&gt;For those that run BGP networks, &lt;a href=&#34;http://www.bgpmon.net&#34;&gt;BGPmon&lt;/a&gt; is often a tool they turn to for some really unique and hard to find information. Remember back in February 2008 when Pakistan Telecom &amp;ldquo;blocked&amp;rdquo; &lt;a href=&#34;http://www.youtube.com/buraglio&#34;&gt;Youtube&lt;/a&gt;? That one was a really, really public example of something that BGPMon caught. BGPmon has been around for a long, long time. Quietly watching prefixes. Silently noting changes and reporting them to the ones lucky enough to know of its existence. For those that don&amp;rsquo;t &lt;a href=&#34;http://searchtelecom.techtarget.com/feature/BGP-essentials-The-protocol-that-makes-the-Internet-work&#34;&gt;know how BGP works&lt;/a&gt;, I am not going to go into it too much other than to say that it is both the foundation that the internet is built upon, and one of the most antiquated trust models that exists in a world where most of the pundits are going on and on about SDN and network engineers being out of a job in 10 years. See, the problem with BGP is not that it is a terrible protocol. Quite the opposite, it is elegant in its simplicity and ability to be extended.It is lightweight and arguably the easiest of the routing protocols with the exception of RIPv2.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Many have argued that it is not a routing protocol, per se, but a policy enforcement framework for paths, but that is a completely different discussion. I happen to agree&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The issue with BGP is that its install base is so vast that changing it is not unlike parting the red sea or holding the earth on ones shoulders, because that is what BGP does. It holds the internet on its shoulders every bit as much as things like fiber in the ground does. Lets get back to BGPmon. BGPmon does something that nothing else really does. It watches the global routing table from points all over the globe and keeps track of prefixes. For a network operation that provides transit, financial services or any sensitive data, notification of a ROA violation, prefix hijack or more specific route announcement is a critical service. BGPmon provides that among other equally distinct services. In fact, &lt;a href=&#34;https://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34;&gt;I have it listed as one of my critical tools for maintaining, monitoring and troubleshooting external routing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What does the acquisition of BGPmon by OpenDNS mean? I honestly can not say, but I am fairly confident that it means good things and &lt;a href=&#34;https://blog.opendns.com/2015/03/12/opendns-acquires-bgpmon/&#34;&gt;OpenDNS has a very, very encouraging position&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Moving forward, our integration plan for BGPmon is straightforward. We’ll invest in building out the service and making it more complete—but we also are committed to keeping the free features free. We’ll continue to use BGPmon data and innovate to augment our predictive intelligence and provide better threat protection to OpenDNS customers. So basically status quo for current customers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Strong backing from a forward thinking company with a solid track record of good products likely means a bright future for an invaluable service. I am optimistic and encouraged, this was the next logical step and they have taken it with elegance and thought.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why you don&#39;t need a firewall [how to secure an open perimeter network]</title>
      <link>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</link>
      <pubDate>Mon, 08 Sep 2014 07:30:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</guid>
      <description>&lt;p&gt;I admit that the title was meant to be inflammatory.  However, there are use cases that aren&amp;rsquo;t terribly uncommon where an in-line security appliance is just not the correct tool for the job.  Someone once told me &amp;ldquo;a firewall protects a network like a fuse protects an electrical circuit&amp;rdquo;, and it&amp;rsquo;s mostly a correct statement. Firewall vendors will probably argue this and enterprise folks may discount this as heresy and call for burning me at the stake.  I can say, though, that the use of a firewall, IPS or other inline security appliance has presented many problems in many environments in my years as a network and security engineer and architect.    To that end, there are mechanisms for replacing the functions of a firewall and IPS with other options, which in many cases have a lower capital expense [although they may have a higher &lt;em&gt;initial&lt;/em&gt; operational expense].  I&amp;rsquo;ll outline them here, but before I do I want to re-iterate that NAT (PAT) is not a security tool, it&amp;rsquo;s a translation tool.  Nothing more.  So, I will leave that out.  If you don&amp;rsquo;t have appropriate IPv4 or IPv6 address space some of these things may need adjustments although they are still accomplishable by doing NAT on a border Layer 3 device.     Below is a talk that I gave at BroCon14 that is a rough outline of how to do this, if you don&amp;rsquo;t want to spend 30 minutes listening to me talk about it, the clifs notes are bulleted below, but the context is all in the video so I encourage you to watch it before responding to my post. For those that want to take a look, here is the talk. Here are the bullets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Announce only necessary resources &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One can utilize routing to only expose the pieces of the network that need to be exposed.  If you have a /16 and on;y a /24 needs to be exposed, only announce that prefix.  This is not that different than a typical DMZ.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter access to network, storage and management hardware&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Utilize best practice ingress filtering.  Follow &lt;a href=&#34;http://tools.ietf.org/html/bcp38&#34;&gt;BCP38&lt;/a&gt;. You should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Utilize host based firewalls&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a no-brainer.  Firewall as close to the resource as possible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Employ central host management&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make your life easy.  Cloud providers do it and it&amp;rsquo;s well documented nowadays.  There are &lt;a href=&#34;http://cfengine.com/&#34;&gt;many&lt;/a&gt; &lt;a href=&#34;http://puppetlabs.com/&#34;&gt;options&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Centralize logging and flow data collection&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another no brainer, you should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create baselines for traffic and activity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Data is good.  Knowledge is power.  Baselines are useful for both anomaly detection and forecasting and it&amp;rsquo;s not that hard to do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Deploy and tune IDS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Passive IDS system[s] off of a TAP or SPAN are key to this kind of architecture.  See video for more details but there are a bunch of good options. I prefer &lt;a href=&#34;http://www.bro.org&#34;&gt;Bro IDS&lt;/a&gt; but there are many players both commercial and FOSS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter with black hole routing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;http://www.forwardingplane.net/2011/10/black-hole-routing/&#34; title=&#34;Black Hole routing&#34;&gt;talked about this before&lt;/a&gt;.  Automating this is key to making it function efficiently and it is a fantastic tool.  This can be done with BGP (traditionally) or with something innovative like OpenFlow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Make use of regularly scheduled external vulnerability scanning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a great way to verify your exposure and works for any sized network.  Highly recommended.&lt;/p&gt;

&lt;p&gt;  Clearly this isn&amp;rsquo;t for everyone, and that&amp;rsquo;s ok.  For anyone that has struggled with issues involving security appliances either based on protocol, horsepower or interface speeds, there are options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aging hardware, IPv6 and the growing route table</title>
      <link>https://forwardingplane.net/post/aging-hardware-ipv6-and-the-growing-route-table/</link>
      <pubDate>Wed, 13 Aug 2014 05:00:56 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/aging-hardware-ipv6-and-the-growing-route-table/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;http://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34; title=&#34;BGP tools; troubleshooting and monitoring external routing in a nutshell&#34;&gt;blathered on about BGP&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2013/03/tuning-bgp-installed-ipv6-routes/&#34; title=&#34;Tuning BGP installed IPv6 routes&#34;&gt;forever&lt;/a&gt;.  Say what you will about the venerable protocol, it runs the interwebs, is reliable, extendable and well documented.  I&amp;rsquo;ve also &lt;a href=&#34;http://www.forwardingplane.net/2013/03/my-sdn-soapbox-now-with-ipv6/ &amp;quot;My SDN soapbox (now with IPv6!&#34;&gt;espoused&lt;/a&gt;&amp;rdquo;) &lt;a href=&#34;http://www.forwardingplane.net/2011/07/joint-techs-summer-2011-ipv6-talks/&#34; title=&#34;Joint Techs Summer 2011 IPv6 talks&#34;&gt;ad nauseam&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2011/03/ipv6-features-matrix-for-network-hardware/&#34; title=&#34;IPv6 Features matrix for Network Hardware&#34;&gt;about&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2012/11/and-a-purple-pony/&#34; title=&#34;And a purple pony.&#34;&gt;IPv6&lt;/a&gt;, so none of this [admitted] rant should really be a surprise coming from me. As of 8/12/2014, according to the &lt;a href=&#34;http://www.cidr-report.org/as2.0/#General_Status&#34;&gt;CIRD report&lt;/a&gt; (and many mailing lists), the &lt;a href=&#34;http://en.wikipedia.org/wiki/Default-free_zone&#34;&gt;default free&lt;/a&gt; global ipv4 routing table has reached 512k routes.  This is a milestone from many perspectives, but more importantly, it solidifies the fact that there is a great deal of equipment in critical points in the internet that is out of date and cannot perform as intended in its current configuration or function. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/08/8-12-2014-plot.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/08/8-12-2014-plot.png&#34; alt=&#34;8-12-2014-plot&#34; /&gt;&lt;/a&gt; This is a problem.  This is a problem for old hardware.  This is a problem for anyone that says their border router is &amp;ldquo;good enough&amp;rdquo;, and expects to take a default free table.  It&amp;rsquo;s a problem for anyone that wants to be multihomed on sub-par hardware.  I don&amp;rsquo;t think that many engineers would be surprised at how common this really is because network hardware is expensive, especially appropriate hardware that runs at site borders and in internet backbones, and by nature network engineer want to &amp;ldquo;make things work&amp;rdquo;.  I assert, however, that this may not be the best idea. The increased size of the default free zone has been forecasted for &lt;strong&gt;&lt;em&gt;years,&lt;/em&gt;&lt;/strong&gt;and with the inclusion of the 16k of ipv6 prefixes (&lt;a href=&#34;http://www.forwardingplane.net/2013/08/the-sad-state-of-ipv6-and-why-you-need-to-learn-it/&#34; title=&#34;The sad state of IPv6 and why you need to learn it.&#34;&gt;you are running IPv6&lt;/a&gt;, &lt;strong&gt;&lt;em&gt;right&lt;/em&gt;&lt;/strong&gt;?), resources quickly become exhausted on aging hardware.  This causes a cascading problem.  Forget the odd issues seen by not having enough TCAM to house the entire default free ipv4 table.  That problem is a haymaker swing that was telegraphed &lt;strong&gt;&lt;em&gt;long&lt;/em&gt;&lt;/strong&gt; ago and should have been coming; that ship has sailed. The bigger problem is that in flurrying around to deal with smaller TCAM sizes on gear that should have been replaced years ago, one course of action is to  repartition the TCAM, stripping away space allocated for IPv6 and allocating it to IPv4 in order to remain &amp;ldquo;default free&amp;rdquo; v4 tables.  I know because I&amp;rsquo;ve had to do this.  And it sucked. Personally, I felt a little like a sell out since I was robbing Peter to pay Paul and keep our &amp;ldquo;beloved&amp;rdquo; IPv4 running at the expense of the protocol we should have been migrated to years before but could not due to fear, uncertainty, doubt and, frankly, sheer laziness on the part of executives, developers, vendors and engineers. Blech.  I don not even like typing that.  We, I promise you,  in come cases are prolonging the deployment of IPv6 in favor of keeping v4 working due to this limitation.  And it stinks.  Like a skunk. Dipped in sewage. Wrapped in garbage.  Blown through an onion. It&amp;rsquo;s a banner day, make no mistake.  512k ipv4 routes in the global default free ipv4 table is a milestone.  However, lets not forget that much of the pain involved in expanding the ability to use more v4 would probably have been better served in expanding ipv6 support.  Be a catalyst for change and start learning and evangelizing IPv6. I often have a thought when discussing the merits of ipv6 with anyone that is arguing as to why they don&amp;rsquo;t want or need to deploy it: Would the internet/their network be a better place if we spent as much time making ipv6 work instead of going well out of our way to work around it? &lt;end rant&gt; =)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
