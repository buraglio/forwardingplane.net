<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>
    UNIX on ForwardingPlane.net
    
    </title>
    <link>https://forwardingplane.net/tags/unix/</link>
    <description>Recent content 
    
    in UNIX on ForwardingPlane.net
    </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <copyright>Copyright (c) 2019, all rights reserved.</copyright>
    <lastBuildDate>Mon, 29 Apr 2019 10:23:32 +0000</lastBuildDate>
    
    
        <atom:link href="https://forwardingplane.net/tags/unix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The value of measurements: Network Latency</title>
      <link>https://forwardingplane.net/post/the-value-of-measurements-network-latency/</link>
      <pubDate>Mon, 29 Apr 2019 10:23:32 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/the-value-of-measurements-network-latency/</guid>
      <description>&lt;p&gt;There is no shortage of network telemetry data that can be collected, recorded, graphed, and stored for cross reference and triage. Not one to be underestimated, latency at a can be incredibly powerful when leveraged for baseline and deviation notification. As I have &lt;a href=&#34;https://www.forwardingplane.net/2018/02/strategy-series-view-outside-network/&#34;&gt;eluded to in the past,&lt;/a&gt; there are many tools in this space. &lt;a href=&#34;https://netbeez.net/blog/how-to-leverage-latency-testing-and-long-term-trend-collection/&#34;&gt;I have written about a few of them in detail&lt;/a&gt; and touched on others in passing. Regardless of the tool, the data is powerful and the instrumentation they provide will only serve to make your network more robust and easier to work on. One tool that is particularly easy to set up and utilize is &lt;a href=&#34;https://oss.oetiker.ch/smokeping/&#34;&gt;smokeping&lt;/a&gt;. From the authors site: &lt;em&gt;SmokePing keeps track of your network latency:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Best of breed latency visualisation.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Interactive graph explorer.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Wide range of latency measurement plugins.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Master/Slave System for distributed measurement.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Highly configurable alerting system.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Live Latency Charts with the most &amp;lsquo;interesting&amp;rsquo; graphs.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Free and OpenSource Software written in Perl written by Tobi Oetiker, the creator of MRTG and RRDtool &lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://www.forwardingplane.net/wp-content/uploads/2019/04/download_Comcast_Chicago_last_864000.png&#34; alt=&#34;Download Comcast Chicago last 864000&#34; title=&#34;download_Comcast_Chicago_last_864000.png&#34; /&gt; &lt;em&gt;Comcast SpeedTest.net graph for home network&lt;/em&gt; Now, you may be asking _“why do I need to track latency?_”, well, the data is incredibly powerful and can be indicators of anything from a failing optic to a network compromise. This is especially useful in small to medium sized ISPs (and especially WISPs), where cost of software and operational overhead is at a premium, and customer satisfaction is the currency that is dealt. In fact, I was able to use smokeqping to help diagnose a functional denial of service of a commonly deployed cable CPE as detailed &lt;a href=&#34;https://forums.businesshelp.comcast.com/t5/IPV6/Reproducible-denial-of-service-of-Netgear-CPE-running-native/m-p/31597#M787&#34;&gt;here&lt;/a&gt;. &lt;strong&gt;I can’t emphasize enough how useful long term trend data is.&lt;/strong&gt; Smokeping can be used to monitor more than just ping RTT, it supports a myriad of plugins allowing for application latency of protocols such as DNS queries, http get, ssh daemon response, speed test results, the list of plugins - or as smokeping calls them, probes - goes on and can be found &lt;a href=&#34;https://oss.oetiker.ch/smokeping/probe/index.en.html&#34;&gt;here&lt;/a&gt;. Where this is particularly useful is in simulating customer experience.  As with most things in life, perspective is paramount. To address this, smokeping can also be deployed as a distributed model. Deploying it with installations more local to a customer or in a far flung site, say on a raspberry pi, located in remote POP sides or pedestal locations will provide a closer perspective to what the customer actually sees. In the past I have deployed remote raspberry pi devices in an actual FTTH pedestal connected to an ONT to provide the exact customer point of view and it provided a wealth of information I would not otherwise be able to see. There are a myriad of different instal guides for Smokeping, my recommended starting point is by &lt;a href=&#34;https://github.com/magicdude4eva&#34;&gt;Gerd Naschenweng&lt;/a&gt; and can be found &lt;a href=&#34;https://github.com/magicdude4eva/docker-smokeping&#34;&gt;here&lt;/a&gt;. It provides a docker instance but also has a very good set of configuration files to build examples from. Don’t discount latency data - it’s a powerful set of information for any working network. For anyone interested in seeing a working smokeping installation, mine is public and available to view. It provides a few things such as DNS latency, RTT for v4 and v6, RTT for ZeroTier hosts and RIPE ATLAS probes, etc. It’s a powerful toolkit. My public cloud instance is hosted at &lt;a href=&#34;http://www.prgmr.com&#34;&gt;prgmr.com&lt;/a&gt; and can be found &lt;a href=&#34;https://watcher.forwardingplane.net/smokeping/smokeping.cgi&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS - the treasure trove of information your ISP can see</title>
      <link>https://forwardingplane.net/post/dns-the-treasure-trove-of-information-your-isp-can-see/</link>
      <pubDate>Mon, 10 Dec 2018 10:23:42 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/dns-the-treasure-trove-of-information-your-isp-can-see/</guid>
      <description>&lt;p&gt;In recent years, the nature of &lt;a href=&#34;http://fortune.com/2017/11/23/net-neutrality-explained-what-it-means-and-why-it-matters/&#34;&gt;privacy on the internet&lt;/a&gt; has become a very important topic amongst those concerned with the now lack of &lt;a href=&#34;https://www.theverge.com/2017/12/14/16776154/fcc-net-neutrality-vote-results-rules-repealed&#34;&gt;net neutrality&lt;/a&gt;. The de-facto mechanism for dealing with privacy has been to &amp;ldquo;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;SSL all the things&lt;/a&gt;&amp;rdquo;, which I am very much in favor of. What many do not realize, though, is that simply using SSL for the traffic that transits a given ISP still leaves a wealth of thick, rich, delicious personal data still easily available to your ISP to harvest, sell, and do with as they please. This data comes in the form of DNS queries. DNS is the nearly-always-forgotten, crucial aspect of how the internet functions. Without DNS, nothing works. Everything appears broken and manifest as what appears to be a networking problem. ISPs typically provide what is called a &lt;a href=&#34;https://umbrella.cisco.com/blog/2014/07/16/difference-authoritative-recursive-dns-nameservers/&#34;&gt;recursive resolver&lt;/a&gt;, which for most people is handed down by a local provider to the customer premise equipment (CPE; usually a modem or optical terminal of some kind) that they install at a residence. This CPE then hands that resolver to your clients that use it to - you guessed it - recursively resolve DNS queries. These queries can be logged and then mined for browsing habits, etc. Anyone that has ever done any network forensics will know straight away that the value of the information contained in DNS query logs is very, very high. &lt;/p&gt;

&lt;p&gt;What this means is that even though a privacy conscious individual is hiding the bulk of their content in SSL, meaning the bulk of what they’re reading, searching for, and doing, is encrypted, the requests for that content or activity is not. For example, an ISP can potentially see that a client is making many, many queries for $onlineshopping.com and begin selling that data to advertisers. If you think they’re not doing this now, &lt;a href=&#34;https://www.wired.com/story/can-verizon-build-a-strong-brand-from-the-bones-of-yahoo-and-aol/&#34;&gt;think again&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Great, so $bigbadprovider can see your queries. There are a number of pretty good ways to work around this, and &lt;a href=&#34;https://pi-hole.net/&#34;&gt;one of my favorite projects&lt;/a&gt; handily deals with one of them with great simplicity. What I am referring to is the newly popular &lt;a href=&#34;https://scotthelme.co.uk/securing-dns-across-all-of-my-devices-with-pihole-dns-over-https-1-1-1-1/&#34;&gt;DNS over HTTPS&lt;/a&gt;, which is supported by the &lt;a href=&#34;https://one.one.one.one/&#34;&gt;cloudflare 1.1.1.1 service&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So, as a thought experiment I decided to play Reeses Peanut butter and chocolate with two of my favorite technological creations: the aforementioned PiHole, and &lt;a href=&#34;https://zerotier.com/&#34;&gt;ZeroTier&lt;/a&gt;. Now anyone that isn’t familiar with ZeroTier, you should acquaint yourself - Packet Pushers did a good &lt;a href=&#34;https://packetpushers.net/podcast/pq-134-meet-zerotier-open-source-networking/&#34;&gt;podcast on it back in November of 2017&lt;/a&gt;. It’s functionally an encrypted overlay supporting dual stack networking with auto configuration and gateway capabilities, and it runs on almost everything. I love this overlay technology and have been using it for a while - highly recommended.&lt;/p&gt;

&lt;p&gt;Back to my peanut butter and chocolate experiment. So, given that I had an existing ZeroTier network and an existing PiHole setup at home, I went over to &lt;a href=&#34;https://www.vultr.com/?ref=7692870&#34;&gt;Vultr.com&lt;/a&gt; and spun up a small VM for $3.50/mo, integrated it into my fleet with my Ansible and Salt tools, and installed ZeroTier and Pihole. From there I set up this DNS hierarchy. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vS-DsmzNWvE335KZtNo6AHX3SySG-VQWhK7i9sNgT6mFMHC5VzRWtMuJg5JraU2dJTFQT4QIGnfaMFP/pub?w=960&amp;amp;h=720&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;What this buys me is a fully encrypted DNS path up through the Vultr.com VM host without modifying the underlying DNS transport. And it works surprisingly well. I ran SmokePing from two hosts - both leveraging ZeroTier to do their testing, one on my local network and one in the cloud - to measure latency for a few days before I did this and kept that running after the deployment. Now, it’s not perfect but my family and I have been using this for about a month with minimal issues. Once in a great while we’ll see some slow DNS resolution time, but overall it works fairly well. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.forwardingplane.net/wp-content/uploads/2018/12/Resolver-Queries.png&#34; alt=&#34;Resolver Queries&#34; title=&#34;Resolver Queries.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My take &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The idea of using a public resolver kinda bothers me, I realize it’s probably unfounded, but I know how to and have run resolvers for ISPs and organizations for like 20 years, so I have the burden of knowledge about what is in the logs and how to run my own. Using a secured recursive resolver is simply trading transit privacy for lack of query privacy somewhere else. Then there is the issue of content networks that use DNS queries to take you to the best / topologically closest cache of their content [NOTE: this, along with the forensics data for debugging potential security issues is a &lt;strong&gt;top&lt;/strong&gt; reason that all ISPs should run their own resolvers]. I fully realize that a normal end user running their own resolver is unlikely and that this deployment is a bit overkill. However, as I can demonstrably prove, it works. And it works pretty well. It also has the added bonus of allowing me to have internal DNS resolution of my own hosts and any mobile ZeroTier client. Is it for everyone? No way. Does it prove viability for low/medium traffic use? Sure. The point is really just to get folks thinking about information leaking that they may not have considered. The nature of the internet makes true privacy pretty much impossible, but there are a few ways to make your data a little harder to for companies to compile and capitalize on if you truly don’t want them to.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating an internal span port inside proxmox OVS</title>
      <link>https://forwardingplane.net/post/creating-internal-span-port-inside-proxmox-ovs/</link>
      <pubDate>Tue, 21 Mar 2017 03:49:58 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/creating-internal-span-port-inside-proxmox-ovs/</guid>
      <description>&lt;p&gt;In the last few years I have moved all of my virtualization to &lt;a href=&#34;https://www.proxmox.com/en/&#34;&gt;proxmox&lt;/a&gt; and docker. Seeing as I like to look at packets because I am a closet security guy, and being as I have been working off-and-on on a security project in recent times, I wanted to be able to span a port not only from a hardware switch, but also within my software switches. I had been using linux bridge, which I am not a fan of, so when I started down this path I did not look hard to find a way to do so under that platform. Instead I used it as an opportunity to move some of the internal bridges to &lt;a href=&#34;http://openvswitch.org/&#34;&gt;OpenVSwitch&lt;/a&gt;. I wanted to create an OVS span port internally. I had experience with OVS in the past for SDN work that I was doing, but I had never created a mirror port. I briefly thought about using OpenFlow to do it, but the unnecessary complexity was off putting. Instead I chose to create a simple mirror of a span port from my switch. So, traffic flow goes as such: &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/OVS-SPAN-1.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/OVS-SPAN-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;     This was fairly trivial, and I was seeing packets in no time. I&amp;rsquo;m not going to go through creating an OVS bridge in proxmox, there are lots of &lt;a href=&#34;https://pve.proxmox.com/wiki/Open_vSwitch&#34;&gt;documents&lt;/a&gt; on how to do that. Once you have your switch port SPAN up and running, and the physical interface in the OVS bridge, you essentially just need to add the following: Create the mirror```
ovs-vsctl &amp;ndash; &amp;ndash;id=@m create mirror name=span &amp;ndash; add bridge vmbr1 mirrors @m&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Find your ports that you want to mirror - you&#39;ll need the physical port if consuming from a real switch like I am, and the software port of the virtualized analyzer.  Remember, in OVS anything you want to mess with is going to have a UUID. You need to match the interfaces with the UUID to verify. ovs-vsctl list port \_uuid : 42dbd5a9-27c6-4f1b-958b-943f67b6801b bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[b155454d-db6e-4bb8-af88-7cd6b544c303\] lacp : \[\] mac : \[\] name : &#34;eth1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : 85c932b2-4f98-4650-8298-ae9e9ca72796 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[5219306f-96ec-440a-ac8b-d949ea18d752\] lacp : \[\] mac : \[\] name : &#34;vmbr1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : d53c7323-517f-48a2-9235-4505e654d4b1 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[91d52d05-d881-4693-ab5c-fc64b5d87518\] lacp : \[\] mac : \[\] name : &#34;veth100i9&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] In red we have the interfaces I want to to use. the veth interface is the software port on the VM. Eth1 is the hardware interfce that my switch is spanning traffic to. Pro tip: In OVS, the commands are a little unintuitive to me when talking about mirrors.  &#34;select\_src\_port&#34; and &#34;select\_dst\_port=&#34; is the destination of the traffic flow from an interface and not source and destination of the traffic you are mirroring from the point of view of the in and out ports. Confusing, right? For instance I can monitor the input from one interface and the output of another in the mirror. What we want is the input and output of the same interface to get both directions of traffic. This is not unlike how span ports are configured on your hardware switch, the nomenclature just threw me off.```&#34; data-lang=&#34;Find your ports that you want to mirror - you&#39;ll need the physical port if consuming from a real switch like I am, and the software port of the virtualized analyzer.  Remember, in OVS anything you want to mess with is going to have a UUID. You need to match the interfaces with the UUID to verify. ovs-vsctl list port \_uuid : 42dbd5a9-27c6-4f1b-958b-943f67b6801b bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[b155454d-db6e-4bb8-af88-7cd6b544c303\] lacp : \[\] mac : \[\] name : &#34;eth1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : 85c932b2-4f98-4650-8298-ae9e9ca72796 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[5219306f-96ec-440a-ac8b-d949ea18d752\] lacp : \[\] mac : \[\] name : &#34;vmbr1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : d53c7323-517f-48a2-9235-4505e654d4b1 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[91d52d05-d881-4693-ab5c-fc64b5d87518\] lacp : \[\] mac : \[\] name : &#34;veth100i9&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] In red we have the interfaces I want to to use. the veth interface is the software port on the VM. Eth1 is the hardware interfce that my switch is spanning traffic to. Pro tip: In OVS, the commands are a little unintuitive to me when talking about mirrors.  &#34;select\_src\_port&#34; and &#34;select\_dst\_port=&#34; is the destination of the traffic flow from an interface and not source and destination of the traffic you are mirroring from the point of view of the in and out ports. Confusing, right? For instance I can monitor the input from one interface and the output of another in the mirror. What we want is the input and output of the same interface to get both directions of traffic. This is not unlike how span ports are configured on your hardware switch, the nomenclature just threw me off.```&#34;&gt;ovs-vsctl set mirror span select\_src\_port=@eth1 select\_dst\_port=@eth1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also do this with the UUID```
ovs-vsctl set mirror span select_src_port=42dbd5a9-27c6-4f1b-958b-943f67b6801b select_dst_port=42dbd5a9-27c6-4f1b-958b-943f67b6801b&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now that we have the source of our mirror we just need to send it somewhere. I wanted mine to go to an internal host running some analytics software (on interface veth100i9)```&#34; data-lang=&#34;Now that we have the source of our mirror we just need to send it somewhere. I wanted mine to go to an internal host running some analytics software (on interface veth100i9)```&#34;&gt;ovs-vsctl -- --id=@veth100i9 get port veth100i9 -- set mirror span output-port=@veth100i9&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;rsquo;s it. Log into your host and do a tcpdump on whatever interface is mapped to veth100i9 and you should see packets flowing. A few tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Verify your span from the hardware switch is working before diving into the software stack.&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re doing this is proxmox, be aware that proxmox networking stack can be unforgiving when you much around outside of their environment.&lt;/li&gt;
&lt;li&gt;This will not persist across reboots. Add it to /etc/network/interfaces manually to keep it after a restart.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 6 DNS, ad-blocking, and quality of experience</title>
      <link>https://forwardingplane.net/post/nix4neteng-6-dns-ad-blocking-and-quality-of-experience/</link>
      <pubDate>Sat, 27 Feb 2016 16:40:04 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-6-dns-ad-blocking-and-quality-of-experience/</guid>
      <description>

&lt;p&gt;The sixth [and arguably very overdue] installment of my &lt;a href=&#34;https://www.forwardingplane.net/?s=nix4neteng&#34;&gt;NIX4NetEng&lt;/a&gt; series, this began as an overly complex diatribe about &lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_Name_System&#34;&gt;DNS&lt;/a&gt;. As it evolved, I realized that DNS is so complex and far reaching that it could never be contained in one meager post. DNS is a powerful tool. It has existed for so long that many that have never had the responsibility of running an authoritative or recursive resolver may take for granted the extensive reach of a tool so engrained in the fabric of the internet that it is frequently overlooked, much like a utility such as electricity or running water. Over time DNS has been reviled as the weak link in the chain that is the internet and and revered as the binding agent that makes the internet as we know it function. As someone that has run service provider and large campus resolvers, both recursive and authoritative, my opinion is that it is both. In the old days, and even now, black hat players will often target resolvers to perform DNS poisioning and will employ techniques such as flux and double flux to obfuscate their bot herders. Content providers use DNS tricks and anycast DNS to steer eyeballs to the topologically closest resource. Wifi hotspots use DNS to capture and force users through a captive portal. As users at large surf the web, advertisers utilize DNS to deliver advertising. Google does this, Yahoo does it, Hulu and other streaming video services do it. It has also been known to deliver pretty nasty &lt;a href=&#34;https://en.wikipedia.org/wiki/Malvertising&#34;&gt;malware&lt;/a&gt;. That&amp;rsquo;s why when internet and security ninja &lt;a href=&#34;http://blog.samoehlert.com/&#34;&gt;Sam Oehlert&lt;/a&gt; pointed me at this project called &lt;a href=&#34;https://pi-hole.net/&#34;&gt;pi-hole&lt;/a&gt;, I knew that it would be a blog post. Pi-Hole is a recursive resolver based on the venerable &lt;a href=&#34;http://www.thekelleys.org.uk/dnsmasq/doc.html&#34;&gt;dnsmasq&lt;/a&gt; that actively blocks and logs ads. And it WORKS. The initial project was aimed at running this on a raspberry pi as a hardware based resolver for a small network. While this works well, it&amp;rsquo;s really just a linux service that can be run as a &lt;a href=&#34;https://hub.docker.com/r/diginc/pi-hole/&#34;&gt;docker container&lt;/a&gt; or a standard LXC container. I decided to set this up as a linux container on my &lt;a href=&#34;https://www.proxmox.com/en/&#34;&gt;proxmox&lt;/a&gt; box. The install is as simple as running a single command and walking through some simple menus.&lt;/p&gt;

&lt;h2 id=&#34;curl-l-install-pi-hole-net-bash&#34;&gt;curl -L install.pi-hole.net | bash&lt;/h2&gt;

&lt;p&gt;The install is straightforward and allows for both IPv4 &lt;strong&gt;and&lt;/strong&gt; IPv6 ad blocking, should your network support it (which is should!). Like any self funded opensource project, I have found a few caveats and hidden features with it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scaling the web interface for a network that performs significant numbers of queries is hard. It seems to have a difficult time displaying from large log files. Perhaps they&amp;rsquo;ll add something like a sqlite db to make this faster, the web interface seems to be updated frequently.&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s based on dnsmasq, so adding local hostnames for within your network is a trivial as adding them to the /etc/hosts file on the pihole device. I personally don not like to type IP addresses and my network has been dial stacked with IPv6 for more than a decade, so local DNS resolution is a requirement. I&amp;rsquo;m not memorizing v6 addresses.&lt;/li&gt;
&lt;li&gt;Again, it&amp;rsquo;s based on dnsmasq, so the flexibility and features are pretty significant and are as simple as tweaking the config file once it&amp;rsquo;s installed.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The query log is available. Security professionals are always interested in DNS query logs - they provide a monumental amount of useful information. With pihole, you have access to that in /etc/log/pihole.log. Here is a snippit of the log&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Feb 27 16:28:04 dnsmasq\[7620\]: /etc/pihole/gravity.list s.youtube.com is 10.209.209.10
Feb 27 16:28:04 dnsmasq\[7620\]: query\[AAAA\] pubads.g.doubleclick.net from 10.209.89.21
Feb 27 16:28:04 dnsmasq\[7620\]: /etc/pihole/gravity.list pubads.g.doubleclick.net is 2001:470:c03a:809::a
Feb 27 16:28:04 dnsmasq\[7620\]: query\[A\] pubads.g.doubleclick.net from 10.209.89.21
Feb 27 16:28:04 dnsmasq\[7620\]: /etc/pihole/gravity.list pubads.g.doubleclick.net is 10.209.209.10
Feb 27 16:28:04 dnsmasq\[7620\]: query\[A\] r2---sn-vgqs7nls.googlevideo.com from 10.209.89.21
Feb 27 16:28:04 dnsmasq\[7620\]: forwarded r2---sn-vgqs7nls.googlevideo.com to 75.75.76.76
Feb 27 16:28:04 dnsmasq\[7620\]: query\[AAAA\] r2---sn-vgqs7nls.googlevideo.com from 10.209.89.21
Feb 27 16:28:04 dnsmasq\[7620\]: forwarded r2---sn-vgqs7nls.googlevideo.com to 75.75.76.76
Feb 27 16:28:04 dnsmasq\[7620\]: query\[AAAA\] manifest.googlevideo.com from 10.209.89.21
Feb 27 16:28:04 dnsmasq\[7620\]: forwarded manifest.googlevideo.com to 75.75.76.76
Feb 27 16:28:04 dnsmasq\[7620\]: query\[A\] manifest.googlevideo.com from 10.209.89.21
Feb 27 16:28:04 dnsmasq\[7620\]: forwarded manifest.googlevideo.com to 75.75.76.76
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;It&amp;rsquo;s easy to add or remove ad domains. Just edit /etc/pihole/gravity.list&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;  &lt;a href=&#34;https://vimeo.com/135965232&#34;&gt;Pi-hole Explained&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/user40849716&#34;&gt;Pi-hole&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.   Completely ignoring the merit or unethical nature of blocking revenue generating advertisements (which I personally make a small amount of money on from on my &lt;a href=&#34;https://www.youtube.com/buraglio&#34;&gt;youtube channel&lt;/a&gt;), this is a recommended project that exposes networking folks to unix, critical network services, as well as security. &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=3J2L3Z4DHW9UY&#34;&gt;Throw them some beer or coffee money&lt;/a&gt; if you find it useful. They&amp;rsquo;ve earned it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Monitoring VMware ESXi with SNMP and Cacti</title>
      <link>https://forwardingplane.net/post/monitoring-vmware-esxi-with-snmp-and-cacti/</link>
      <pubDate>Mon, 19 Jan 2015 10:02:10 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/monitoring-vmware-esxi-with-snmp-and-cacti/</guid>
      <description>&lt;p&gt;VMWare is a powerful tool, and monitoring is a critical service. How does one monitor such an integral piece of infrastructure, and what do they monitor it with? There are powerful commercial ways of monitoring &lt;a href=&#34;http://www.vmware.com/&#34;&gt;VMware&lt;/a&gt;, however, for those with existing &lt;a href=&#34;http://en.wikipedia.org/wiki/Simple_Network_Management_Protocol&#34;&gt;SNMP&lt;/a&gt; based systems in place, specifically &lt;a href=&#34;http://www.cacti.net/&#34;&gt;cacti&lt;/a&gt;, there are options. To that end, I&amp;rsquo;ll set aside my strong distaste for SNMP [yet again], because those are for a larger, less useful series of posts.&lt;/p&gt;

&lt;p&gt;Luckily for those of us that need it there exists in that vast wilderness we call the internet, a user contributed &lt;a href=&#34;http://www.cacti.net/&#34;&gt;cacti&lt;/a&gt; template for monitoring basic functionality with SNMP and cacti and it is available &lt;a href=&#34;http://forums.cacti.net/download/file.php?id=29171&amp;amp;sid=888e5451bc68b1c05a5b7dec6667afd2&#34;&gt;here&lt;/a&gt;, and with the full thread being worth a read &lt;a href=&#34;http://forums.cacti.net/viewtopic.php?f=12&amp;amp;t=52122&#34;&gt;here&lt;/a&gt;. Since VMWare ESXi doesn&amp;rsquo;t have SNMP enabled (or really exposed from what I can tell), you have to do some CLI jockeying to make it work. Full disclosure, I&amp;rsquo;m not a vmware expert by any stretch of the imagination, but I have been hacking at it for a few years because it is low overhead to use comparatively speaking, offers a free version for my lab, makes a nice contrast to my KVM system and is widely deployed, so I want to understand it. Your mileage may vary with what I&amp;rsquo;ve got here.&lt;/p&gt;

&lt;p&gt;Enabling ssh is beyond the scope of this post but details can be found &lt;a href=&#34;http://www.thomasmaurer.ch/2014/01/enable-ssh-on-vmware-esxi-5-5/&#34;&gt;here&lt;/a&gt;. It&amp;rsquo;s fairly straightforward.&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&#34; alt=&#34;vmware-snmp-device&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Details of enabling SNMP for vmware 5.5 can be found &lt;a href=&#34;https://pubs.vmware.com/vsphere-51/index.jsp#com.vmware.vsphere.monitoring.doc/GUID-0EB48A32-34B0-4003-B2D0-ADE3BAFD29F0.html&#34;&gt;here&lt;/a&gt;, essentially one simply needs to run the following commands from within an ssh session:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esxcli  system snmp set --communities &amp;lt;community&amp;gt;
esxcli system snmp set --port 161
esxcli system snmp set --enable true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Getting the cacti scripts in place is a little more involved, but it&amp;rsquo;s still pretty simple. Using the importer just add the new template. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.09.09.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.09.09.png&#34; alt=&#34;Screenshot 2015-01-10 10.09.09&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; Once that is imported you&amp;rsquo;ll need to move some scripts into place within the cacti system as below (adjust your paths as needed; I moved them directly from my workstation into place)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp ss\_esxi\_vhosts.php netmon:/var/lib/cacti/scripts/
scp cacte\_esxi\_template/resource/snmp\_queries/\* netmon:/usr/share/cacti/resource/snmp\_queries/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[](&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.10.43.png)[![](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png)](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&#34;&gt;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.10.43.png)[![](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png)](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;[](&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.13.33.png&#34;&gt;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.13.33.png&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Then adjust the template being used for your ESXi server or add it as a new host if it was not there already. The new template should show up in the list.&lt;/p&gt;

&lt;p&gt;Once complete the cacti server should start graphing and checking uptime, etc. IF it does not, make sure the scripts are in place and have the correct permissions. It&amp;rsquo;s also useful (although not required) to add the additional parameters to the host.&lt;/p&gt;

&lt;p&gt;Once complete, the cacti system should be able to baseline (and alert if so desited, using thresholds) on any of the newly added variables, including number of VMs, number of VMs using vmware tools, number of VMs running, disk space, processes, network traffic, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-create-graphs.png&#34; alt=&#34;vmware-create-graphs&#34; /&gt;  &lt;/p&gt;

&lt;p&gt;I have yet to be able to get successful CPU graphs, but I suspect it is user error on my part and I&amp;rsquo;ve not investigated yet. Overall, I&amp;rsquo;d call it a pretty bigwin for anyone that has an existing cacti installation and wants to include their vmware system(s). It should also be said that the readme that accompanies the template is relatively useful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 5 - GeoIP tools</title>
      <link>https://forwardingplane.net/post/nix4neteng-5-geoip-tools/</link>
      <pubDate>Sun, 21 Dec 2014 18:22:15 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-5-geoip-tools/</guid>
      <description>&lt;p&gt;Sometimes in networking and security it becomes necessary to do lookups of location data on IP addresses and prefixes. On my Mac I use &lt;a href=&#34;http://brew.sh/&#34;&gt;homebrew&lt;/a&gt; to manage packages, but most of these tools are available with thetypocal apt, yum and port package management systems. For this post, I&amp;rsquo;m going to shift gears and show the install on my mac:```
sliver:~ buraglio$ brew install geoip
==&amp;gt; Downloading &lt;a href=&#34;https://downloads.sf.net/project/machomebrew/Bottles/geoip-1.6.3.mavericks.bottle.tar.gz&#34;&gt;https://downloads.sf.net/project/machomebrew/Bottles/geoip-1.6.3.mavericks.bottle.tar.gz&lt;/a&gt;
######################################################################## 100.0%
==&amp;gt; Pouring geoip-1.6.3.mavericks.bottle.tar.gz
sliver:~ buraglio$ brew install geoipupdate
==&amp;gt; Downloading &lt;a href=&#34;https://downloads.sf.net/project/machomebrew/Bottles/geoipupdate-2.0.2.mavericks.bottle.tar.gz&#34;&gt;https://downloads.sf.net/project/machomebrew/Bottles/geoipupdate-2.0.2.mavericks.bottle.tar.gz&lt;/a&gt;
######################################################################## 100.0%
==&amp;gt; Pouring geoipupdate-2.0.2.mavericks.bottle.tar.gz&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Once this installed we need to do a simple update:```&#34; data-lang=&#34;Once this installed we need to do a simple update:```&#34;&gt;sliver:~ buraglio$ geoipupdate
sliver:~ buraglio$&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This really doesn&amp;rsquo;t yield any output, but I tend to do it pretty much every time I am using the tool so I know I have up to date information. So lets say that you are a service provider and your customers are calling complaining that they&amp;rsquo;re seeing www.weather.co.uk when going to weather.com or more realistically, they can&amp;rsquo;t get to netflix or amazon video, which tells them they don&amp;rsquo;t support srtreaming to the UK.```
sliver:~ buraglio$ geoiplookup 141.142.2.2
GeoIP Country Edition: US, United States
GeoIP City Edition, Rev 1: US, IL, Illinois, Urbana, 61801, 40.109501, -88.212303, 648, 217&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Nope, that looks ok, it must be something else \[I have actually seen this problem in the past, it&#39;s really no fun to run to ground\]. As you can see, there is a good deal of information there, lat/long, area code, city, state, zip, etc. This data, specifically the lat/long, can be used to do really cool visualization stuff with things like google maps or google earth. As a sanity check, here is a view of bbc.com:```&#34; data-lang=&#34;Nope, that looks ok, it must be something else \[I have actually seen this problem in the past, it&#39;s really no fun to run to ground\]. As you can see, there is a good deal of information there, lat/long, area code, city, state, zip, etc. This data, specifically the lat/long, can be used to do really cool visualization stuff with things like google maps or google earth. As a sanity check, here is a view of bbc.com:```&#34;&gt;sliver:~ buraglio$ geoiplookup 212.58.244.71
GeoIP Country Edition: GB, United Kingdom
GeoIP City Edition, Rev 1: GB, N7, Surrey, Tadworth, N/A, 51.283298, -0.233300, 0, 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yup, that looks right. The nice thing about this tool is that it can be automated to do all kinds of things with logs from syslog, Bro-IDS, Snort, whatever, and then act on the data or like I mentioned above, plot it out for visualization. The one drawback I&amp;rsquo;ve found is that the IPv6 lookups are sparsely correct, for example:&lt;code&gt;
sliver:~ buraglio$ geoiplookup6 2400:cb00:2048:1::681c:194f
sliver:~ buraglio$
&lt;/code&gt;Looking up 2400:cb00:2048:1::681c:194f which belongs to cloudflare yields me nothink, so there is some work to do there on the IPv6 front. Overall this is a useful tool for quick troubleshooting but it really shines when used in scripts and for visualization.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4Neteng 4: POODLE and SSLv3, scanning and updating</title>
      <link>https://forwardingplane.net/post/nix4neteng-4-poodle-and-sslv3-scanning-and-updating/</link>
      <pubDate>Wed, 15 Oct 2014 17:36:54 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-4-poodle-and-sslv3-scanning-and-updating/</guid>
      <description>&lt;p&gt;With the recent release of the &lt;a href=&#34;https://www.openssl.org/~bodo/ssl-poodle.pdf&#34;&gt;POODLE SSLv3 vulnerability&lt;/a&gt;, folks are scrambling around trying to figure out what runs what and where.  Running a handful of things that do SSL, I was obligated, both personally and professionally, to figure out an easy way to drill down and figure out what does what and then fix the vulnerable services.  When there are a lot of devices, this can seem like a daunting task, and it is if you&amp;rsquo;re trying to do it manually.  This is where &lt;a href=&#34;http://nmap.org/&#34;&gt;NMAP&lt;/a&gt; comes into play.  NMAP is an extremely powerful tool for scanning and enumerating your own network, not just a tool for the script kiddies to port scan. Since there is no SSL patch at the time of this writing, and since SSLv3 is old and depricated, it is a good idea to see what services support it and then squish them in favor of TLS 1+.  Thankfully, smarter folks than myself have done most of the legwork for accomplishing this task and written most of it down &lt;a href=&#34;http://nmap.org/nsedoc/scripts/ssl-enum-ciphers.html&#34;&gt;here&lt;/a&gt;. NMAP has a wealth of cool scripts and bolt ons that extend it in amazing ways.  To accomplish our tasks we&amp;rsquo;ll ned to do a few things. Install nmap. I ran into issues with the &lt;a href=&#34;http://nmap.org/book/nse-library.html&#34;&gt;nselibs&lt;/a&gt; being incomplete, so I grabbed the source and built it that way as opposed to using yum.```
git clone git@github.com:nmap/nmap.git&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-We then need to build it from source which requires the dev tools:```&#34; data-lang=&#34;We then need to build it from source which requires the dev tools:```&#34;&gt;sudo yum -y groupinstall &amp;#39;Development Tools&amp;#39;
cd nmap
./configure
sudo make&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and alternatively```
sudo make install&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-I like to just run it from my directory since there are path considerations.```&#34; data-lang=&#34;I like to just run it from my directory since there are path considerations.```&#34;&gt;(~/nmap) v-chimera $ ./nmap --script ssl-enum-ciphers -p 443 10.14.14.0/27

Starting Nmap 6.46 ( http://nmap.org ) at 2014-10-15 12:21 CDT
Nmap scan report for gw.test (10.14.14.1)
Host is up (0.0028s latency).
PORT    STATE  SERVICE
443/tcp closed https

Nmap scan report for ssldevice.test (10.14.14.2)
Host is up (0.0042s latency).
PORT    STATE SERVICE
443/tcp open  https
| ssl-enum-ciphers:
|   SSLv3:
|     ciphers:
|       TLS\_RSA\_WITH\_RC4\_128\_MD5 - strong
|       TLS\_RSA\_WITH\_RC4\_128\_SHA - strong
|     compressors:
|       NULL
|   TLSv1.0:
|     ciphers:
|       TLS\_RSA\_WITH\_RC4\_128\_MD5 - strong
|       TLS\_RSA\_WITH\_RC4\_128\_SHA - strong
|     compressors:
|       NULL
|\_  least strength: strong

Nmap scan report for nossl.test (10.14.14.3)
Host is up (0.00049s latency).
PORT    STATE  SERVICE
443/tcp closed https&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From here we can see that there is a host that needs to be updated. There are a wealth of docs out there for changing out the supported version. Most of my stuff is apache so I used &lt;a href=&#34;https://zmap.io/sslv3/&#34;&gt;this guide&lt;/a&gt;. For embedded devices, the best option is to filter access [which you should probably be doing anyway] until there is a patched firmware version.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sonrancid: A [very] basic RANCID module for sonicwall</title>
      <link>https://forwardingplane.net/post/sonrancid-a-very-basic-rancid-module-for-sonicwall/</link>
      <pubDate>Mon, 15 Sep 2014 09:05:13 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonrancid-a-very-basic-rancid-module-for-sonicwall/</guid>
      <description>&lt;p&gt;I know, I know, I&amp;rsquo;m always saying that you don&amp;rsquo;t need a firewall. That&amp;rsquo;s mostly to get your attention to push my agenda of sane security architecture, I do actually believe that firewalls are appropriate in a great many use cases and I&amp;rsquo;ve managed them big and small ranging from &lt;a href=&#34;http://www.forwardingplane.net/2010/08/juniper-srx-cluster/&#34; title=&#34;Juniper SRX Cluster&#34;&gt;Juniper SRX 5800 clusters&lt;/a&gt; to tiny purpose built BSD distros on custom hardware. I even managed &lt;a href=&#34;http://www.checkpoint.com/&#34;&gt;Checkpoint&lt;/a&gt; and &lt;a href=&#34;http://www.kulichki.com/moshkow/SECURITY/gauntlet.txt&#34;&gt;gauntlet firewall&lt;/a&gt; back in the 1990s. And &lt;a href=&#34;https://www.novell.com/products/bordermanager/&#34;&gt;Novell Border manager&lt;/a&gt;&amp;hellip;.good gravy&amp;hellip;.border manager. I just had a chill, that thing is still around.  They work well when spec&amp;rsquo;d, designed, maintained correctly and placed in an appropriate location in a network architecture.  That said, I have a few SonicWall devices that I work on occasionally and it has always irritated me that there was not a usable &lt;a href=&#34;http://www.shrubbery.net/rancid/&#34;&gt;RANCID&lt;/a&gt; module for it.  To that end, I hacked up the Cisco RANCID script to support very rudimentary config backups. &lt;em&gt;&lt;Insert comment about having some DevOps skills is useful, even if they are very basic like mine.&gt;&lt;/em&gt; The script will log in and pull the config and version using the following commands:&lt;code&gt;
show current-config
&lt;/code&gt;&lt;code&gt;
show version
&lt;/code&gt;I am really hoping that someone else will pick it up and massage it a bit because it is very chatty and will produce a diff every time due to the way SonicOS presents some of its configuration parameters. It also needs tested against larger SonicWall devices as I only have smaller boxes to run against.  I know it works against a TZ210, YMMV. Please post comments on github if you use it with anything else.   The password hash is particularly annoying, it always changes when the configuration is displayed. Some of the framework is there to remove it so I may hack at it a bit more but it&amp;rsquo;s usable in the loosest sense for the short term.  It&amp;rsquo;s available on &lt;a href=&#34;https://github.com/buraglio/sonrancid&#34;&gt;my github site&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 3: IP Addressing and Subnet Tools</title>
      <link>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</link>
      <pubDate>Sat, 26 Jul 2014 16:46:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</guid>
      <description>&lt;p&gt;IP addressing and subnetting is a common interview subject. I assert that memorizing these things is useful for learning the concepts but ultimately futile in that it is time consuming and inefficient use of engineering time when tools can be utilized to accomplish the same goals in less time with fewer errors. Honestly, I gave up doing this kind of work manually around 10 years ago and have never regretted it, and in actuality, I&amp;rsquo;d probably struggle to do it at this point because it&amp;rsquo;s a repetitive process better suited by code. In the old days, subnetting IPv4 manually was a badge of honor (and one that I always hated), but I learned it because I needed to know it for cert tests and daily work. However, once I started doing IPv6 around 2001, it became clear that doing this kind of thing by hand was consuming more time than it needed to. Enter UNIX tools. HEX Hex isn&amp;rsquo;t really a tool as much as it&amp;rsquo;s a hack for your shell.  Remember the &lt;a href=&#34;http://www.forwardingplane.net/2014/04/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/&#34; title=&#34;NIX4NetEng #1 Managing dotfiles; pwn the unspoken pain of UNIX administration&#34;&gt;post on dotfiles&lt;/a&gt;? This is something that can go right into your .bashrc and allows for the quick and easy translation of decimal to hexidecimal, which is very useful for IPv6 dual stacking because [in my opinion] the appropriate addressing scheme is to match the last octet based on hex and not numerically. So, to do that one needs to be able to easily convert the last octet quickly and easily.  Adding this to your .bashrc will accomplish this:```
alias hex=&amp;lsquo;printf &amp;ldquo;%x\n&amp;rdquo;&amp;rsquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34; data-lang=&#34;Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34;&gt;(~) desktop $ hex 199
c7&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you&amp;rsquo;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```
10.143.27.&lt;sup&gt;199&lt;/sup&gt;&amp;frasl;&lt;sub&gt;27&lt;/sub&gt;
2001:DB8:1b::c7/120&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34; data-lang=&#34;There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34;&gt;(~) desktop $ sipcalc 2001:DB8:1b::c7/120
-\[ipv6 : 2001:DB8:1b::c7/120\] - 0
``````
\[IPV6 INFO\]
Expanded Address - 2001:0db8:001b:0000:0000:0000:0000:00c7
Compressed address - 2001:db8:1b::c7
Subnet prefix (masked) - 2001:db8:1b:0:0:0:0:0/120
Address ID (masked) - 0:0:0:0:0:0:0:c7/120
Prefix address - ffff:ffff:ffff:ffff:ffff:ffff:ffff:ff00
Prefix length - 120
Address type - Aggregatable Global Unicast Addresses
Network range - 2001:0db8:001b:0000:0000:0000:0000:0000 -
 2001:0db8:001b:0000:0000:0000:0000:00ff -&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for IPv4:&lt;code&gt;
(~) desktop $ sipcalc 10.143.27.199/27
-\[ipv4 : 10.143.27.199/27\] - 0
&lt;/code&gt;&lt;code&gt;
\[CIDR\]
Host address - 10.143.27.199
Host address (decimal) - 177150919
Host address (hex) - A8F1BC7
Network address - 10.143.27.192
Network mask - 255.255.255.224
Network mask (bits) - 27
Network mask (hex) - FFFFFFE0
Broadcast address - 10.143.27.223
Cisco wildcard - 0.0.0.31
Addresses in network - 32
Network range - 10.143.27.192 - 10.143.27.223
Usable range - 10.143.27.193 - 10.143.27.222
&lt;/code&gt;  Notable mention: Web tools are also useful and are becoming more prolific than the UNIX tools, but I will assume that you&amp;rsquo;re probably already loged into a UNIX system like a jump box or bastion host anyway and the tools are faster and thinner in that environment. That said, here are some useful web tools: &lt;a href=&#34;http://jodies.de/ipcalc&#34;&gt;ipcalc&lt;/a&gt; has the web interface to their tool. &lt;a href=&#34;http://www.gestioip.net/cgi-bin/subnet_calculator.cgi&#34;&gt;This site&lt;/a&gt; has a v4 and v6 calculator that works well and looks a lot like the output of sipcalc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 2 IPv4/6 address investigation tools - whois &#43; dig</title>
      <link>https://forwardingplane.net/post/nix4neteng-2-ipv46-address-investigation-tools-whois-dig/</link>
      <pubDate>Sat, 07 Jun 2014 19:54:41 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-2-ipv46-address-investigation-tools-whois-dig/</guid>
      <description>

&lt;p&gt;I don&amp;rsquo;t care what your vendor alignment of choice is, Cisco, Juniper, Brocade, Alcatel&amp;hellip;.it doesn&amp;rsquo;t matter. At one point or another you&amp;rsquo;re going to need to bird dog an address to see where it&amp;rsquo;s coming from, who owns it, what it&amp;rsquo;s DNS name is or what path you&amp;rsquo;re taking to get to it.  We&amp;rsquo;ve already talked about &lt;a href=&#34;http://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34; title=&#34;BGP tools; troubleshooting and monitoring external routing in a nutshell&#34;&gt;BGP tools&lt;/a&gt;, they&amp;rsquo;re a great choice for checking routes across the internet. Hunting down addresses is an interesting one, though, as address management and lookups  can bleed into other aspects of networking like path selection, latency, jitter and many other things.  I&amp;rsquo;m going to touch on a few things and give generalizations on a few others.  First, querying where things originate and who has ownership is infinitely useful, especially if your job description has &amp;ldquo;security&amp;rdquo; anywhere in it, written or implied.  I like to use a range of services, all of which are from the CLI (for speed and scriptability).  My go-to tools for this are the venerable &lt;a href=&#34;http://en.wikipedia.org/wiki/Whois&#34;&gt;whois&lt;/a&gt; and dig tools. Lets say I want to check on the address 192.80.96.88. First, lets figure out if it&amp;rsquo;s got a name.  dig is your friend here.```
(~) jumphost $ dig -x 192.80.96.88
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -x 192.80.96.88
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 29443
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0
;; QUESTION SECTION:
;88.96.80.192.in-addr.arpa. IN PTR
;; ANSWER SECTION:
88.96.80.192.in-addr.arpa. 7145 IN PTR local.forwardingplane.net.
;; Query time: 2 msec
;; SERVER: 10.209.209.1#53(10.209.209.1)
;; WHEN: Sat May 31 11:43:18 2014
;; MSG SIZE rcvd: 82&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Dig is an incredibly powerful DNS tool. I&#39;d recommend learning it as well as you possibly can. [_man dig_](http://linux.die.net/man/1/dig) on any good unix box should give you a good start, [this site](http://www.thegeekstuff.com/2012/02/dig-command-examples/) has some good examples too, I can&#39;t even scratch the surface of how useful DNS tools are, probably a great subject for another NIX4NetEng.  Here we see that the address has reverse DNS (PTR record) of local.forwardingplane.net.  We can poke a bit more at this using DNS, too.```&#34; data-lang=&#34;Dig is an incredibly powerful DNS tool. I&#39;d recommend learning it as well as you possibly can. [_man dig_](http://linux.die.net/man/1/dig) on any good unix box should give you a good start, [this site](http://www.thegeekstuff.com/2012/02/dig-command-examples/) has some good examples too, I can&#39;t even scratch the surface of how useful DNS tools are, probably a great subject for another NIX4NetEng.  Here we see that the address has reverse DNS (PTR record) of local.forwardingplane.net.  We can poke a bit more at this using DNS, too.```&#34;&gt;(~) jumphost $ dig -t ANY local.forwardingplane.net +noall +answer

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -t ANY local.forwardingplane.net +noall +answer
;; global options: +cmd
local.forwardingplane.net. 221 IN AAAA 2607:dd00:8000:18::88
local.forwardingplane.net. 221 IN A 192.80.96.88&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, we can see here we have a dual stacked host.  We&amp;rsquo;ll look at that more later. Let&amp;rsquo;s see who owns this address space. Whois is the way to go here.  I always start with querying ARIN and go from there.  ```
(~) jumphost $ whois -h whois.arin.net 192.80.96.88&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;arin-whois-data-and-services-are-subject-to-the-terms-of-use&#34;&gt;ARIN WHOIS data and services are subject to the Terms of Use&lt;/h1&gt;

&lt;h1 id=&#34;available-at-https-www-arin-net-whois-tou-html&#34;&gt;available at: &lt;a href=&#34;https://www.arin.net/whois_tou.html&#34;&gt;https://www.arin.net/whois_tou.html&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;query-terms-are-ambiguous-the-query-is-assumed-to-be&#34;&gt;Query terms are ambiguous.  The query is assumed to be:&lt;/h1&gt;

&lt;h1 id=&#34;n-192-80-96-88&#34;&gt;&amp;ldquo;n 192.80.96.88&amp;rdquo;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;use-to-get-help&#34;&gt;Use &amp;ldquo;?&amp;rdquo; to get help.&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;the-following-results-may-also-be-obtained-via&#34;&gt;The following results may also be obtained via:&lt;/h1&gt;

&lt;h1 id=&#34;http-whois-arin-net-rest-nets-q-192-80-96-88-showdetails-true-showarin-false-ext-netref2&#34;&gt;&lt;a href=&#34;http://whois.arin.net/rest/nets;q=192.80.96.88?showDetails=true&amp;amp;showARIN=false&amp;amp;ext=netref2&#34;&gt;http://whois.arin.net/rest/nets;q=192.80.96.88?showDetails=true&amp;amp;showARIN=false&amp;amp;ext=netref2&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;NetRange:       192.80.96.0 - 192.80.111.255
CIDR:           192.80.96.0/20
OriginAS:       AS10932
NetName:        UC2B-1
NetHandle:      NET-192-80-96-0-1
Parent:         NET-192-0-0-0-0
NetType:        Direct Allocation
RegDate:        2013-02-27
Updated:        2013-02-27
Ref:            &lt;a href=&#34;http://whois.arin.net/rest/net/NET-192-80-96-0-1&#34;&gt;http://whois.arin.net/rest/net/NET-192-80-96-0-1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgName:        UC2B
OrgId:          CCLAUBBC
Address:        102 North Neil Street
City:           Champaign
StateProv:      IL
PostalCode:     61820
Country:        US
RegDate:        2012-02-28
Updated:        2014-02-19
Ref:            &lt;a href=&#34;http://whois.arin.net/rest/org/CCLAUBBC&#34;&gt;http://whois.arin.net/rest/org/CCLAUBBC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgAbuseHandle: UCBTE-ARIN
OrgAbuseName:   uc2b-tech
OrgAbusePhone:  +1-217-265-4226
OrgAbuseEmail:  uc2b-tech@uc2b.net
OrgAbuseRef:    &lt;a href=&#34;http://whois.arin.net/rest/poc/UCBTE-ARIN&#34;&gt;http://whois.arin.net/rest/poc/UCBTE-ARIN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgNOCHandle: UCBTE-ARIN
OrgNOCName:   uc2b-tech
OrgNOCPhone:  +1-217-265-4226
OrgNOCEmail:  uc2b-tech@uc2b.net
OrgNOCRef:    &lt;a href=&#34;http://whois.arin.net/rest/poc/UCBTE-ARIN&#34;&gt;http://whois.arin.net/rest/poc/UCBTE-ARIN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgTechHandle: UCBTE-ARIN
OrgTechName:   uc2b-tech
OrgTechPhone:  +1-217-265-4226
OrgTechEmail:  uc2b-tech@uc2b.net
OrgTechRef:    &lt;a href=&#34;http://whois.arin.net/rest/poc/UCBTE-ARIN&#34;&gt;http://whois.arin.net/rest/poc/UCBTE-ARIN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;arin-whois-data-and-services-are-subject-to-the-terms-of-use-1&#34;&gt;ARIN WHOIS data and services are subject to the Terms of Use&lt;/h1&gt;

&lt;h1 id=&#34;available-at-https-www-arin-net-whois-tou-html-1&#34;&gt;available at: &lt;a href=&#34;https://www.arin.net/whois_tou.html&#34;&gt;https://www.arin.net/whois_tou.html&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The first 7 lines of this are the most important. Here we can see that the address space is owned by an entity called [UC2B](http://www.uc2b.net), it is part of a /20 that the origin ASN is 10932 and that it is a direct allocation (as opposed to assigned space from an upstream provider).```&#34; data-lang=&#34;The first 7 lines of this are the most important. Here we can see that the address space is owned by an entity called [UC2B](http://www.uc2b.net), it is part of a /20 that the origin ASN is 10932 and that it is a direct allocation (as opposed to assigned space from an upstream provider).```&#34;&gt;NetRange:       192.80.96.0 - 192.80.111.255
CIDR:           192.80.96.0/20
OriginAS:       AS10932
NetName:        UC2B-1
NetHandle:      NET-192-80-96-0-1
Parent:         NET-192-0-0-0-0
NetType:        Direct Allocation&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I could tell you some horror stories about getting this address space assigned. It took me 7 months to get that allocation from ARIN&amp;hellip;&amp;hellip;.but I digress.  From here we can query the ASN, also using whois, again, the first few lines are generally the most useful.```
(~) jumphost $ whois -h whois.arin.net 10932
ASNumber: 10932
ASName: UC2B
ASHandle: AS10932
RegDate: 2012-06-28
Updated: 2012-06-28
Ref: &lt;a href=&#34;http://whois.arin.net/rest/asn/AS10932&#34;&gt;http://whois.arin.net/rest/asn/AS10932&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-We can use this information to track down responsible parties, addresses, etc.  It&#39;s a great resource for knowing both technical and non-technical details about address space. [Team Cymru has an extremely powerful whois service](http://www.team-cymru.org/Services/ip-to-asn.html#whois) that allows for significantly more flexibility including time and date.```&#34; data-lang=&#34;We can use this information to track down responsible parties, addresses, etc.  It&#39;s a great resource for knowing both technical and non-technical details about address space. [Team Cymru has an extremely powerful whois service](http://www.team-cymru.org/Services/ip-to-asn.html#whois) that allows for significantly more flexibility including time and date.```&#34;&gt;(~) jumphost $ whois -h whois.cymru.com &amp;#34; -v 192.80.96.88&amp;#34;
AS      | IP               | BGP Prefix          | CC | Registry | Allocated  | AS Name
10932   | 192.80.96.88     | 192.80.96.0/20      | US | arin     | 2013-02-27 | UC2B - UC2B,US&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can imagine, this can be a robust way to track changes and re-allocations of ASNs and address blocks, especially with the dwindling amounts of IPv4 and the re-assignment of ASNs.  One can see when ownership has changed and verify the correct origin of address blocks.  Great for validation and correlation. These services also work for IPv6. We can see if the V6 space is coming from the same ASN or if it&amp;rsquo;s a different entity (like a &lt;a href=&#34;http://www.tunnelbroker.net&#34;&gt;tunnel&lt;/a&gt; or a totally different provider).&lt;code&gt;
\[buraglio@local ~\]$ whois -h whois.cymru.com &amp;quot; -v 2607:dd00:8000:18::88&amp;quot;
\[Querying whois.cymru.com\]
\[whois.cymru.com\]
AS      | IP                                       | BGP Prefix          | CC | Registry | Allocated  | AS Name
10932   | 2607:dd00:8000:18::88                    | 2607:dd00::/32      | US | arin     | 2012-07-23 | UC2B - UC2B,US
&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;This is really just the tip of the iceberg in this kind of toolset.  There are &lt;em&gt;countless&lt;/em&gt; scripts, binaries and  shell hacks to do no end of interesting and useful things and gather information.  Have some other, better uses or tools?  Post them in the comments!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 1 Managing dotfiles; pwn the unspoken pain of UNIX administration</title>
      <link>https://forwardingplane.net/post/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/</link>
      <pubDate>Thu, 01 May 2014 02:58:20 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/</guid>
      <description>&lt;p&gt;Many network engineers are also tasked with maintaining systems that provide network services, those things that make the network easier to use such as DNS and DHCP or management systems that perform useful things like monitor the network, collect flow data or bestow access to the equipment by acting as &lt;a href=&#34;http://en.wikipedia.org/wiki/Bastion_host&#34;&gt;bastion&lt;/a&gt; or jump hosts.  In many instances, robust and high availability services run on UNIX, Linux or BSD systems for stability and reliability, so those that manage these systems need to be well versed system admins as well as whatever their other job functions are.  &lt;a href=&#34;http://packetpushers.net/are-certifications-tests-still-worth-your-resources-in-the-day-of-hybrid-it/&#34;&gt;Hybridization&lt;/a&gt;, if you will.  Nothing new, nothing unexpected.  However, one of the banes of these tasks is having a uniform shell environment across platforms and systems. Why create a customized environment with aliases, environmental variables and other personalized settings more than once? I have struggled with how to do this efficiently across desktop, server, jumphosts and other daily use systems for &lt;strong&gt;years&lt;/strong&gt;. Most of the important variables are controlled by dotfiles.   In what I am hoping is the start of a short series of &amp;ldquo;UNIX stuff for networking folks&amp;rdquo;, I will explain how I did this for myself. UNIX and Linux admins have been dealing with dotfiles forever. GitHub even has a &lt;a href=&#34;http://dotfiles.github.io/&#34;&gt;repo dedicated to&lt;/a&gt; it.  For my environment, I chose to go with &lt;a href=&#34;http://jim.github.io/briefcase/&#34;&gt;Briefcase&lt;/a&gt; and &lt;a href=&#34;http://www.bitbucket.com&#34;&gt;BitBucket&lt;/a&gt;.  Briefcase because it has mechanisms for stripping out sensitive information if needed and bitbucket because I can have private repos without paying money.  This can all certainly be done with local git repos or github and without briefcase. Briefcase is really straightforward to install, it&amp;rsquo;s just a ruby gem, so &lt;em&gt;gem install briefcase&lt;/em&gt; is all that is needed to get it on your machine&lt;em&gt;.&lt;/em&gt;  OSX has it by default.  On my machine I needed to to&lt;em&gt;sudo gem update —system&lt;/em&gt; before it would install.  Your mileage may vary&lt;em&gt;. &lt;/em&gt; Once it&amp;rsquo;s installed, just add your files.  I switched to bash, so I needed to import .bashrc and .bash_profile, but I wanted to make sure I had a backup just in case.```
mkdir -p tmp/dotfiles
mv .bashrc tmp/dotfiles/
mv .bash_profile tmp/dotfiles/&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;briefcase import ~/.bashrc
briefcase import ~/.bash\_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;briefcase git remote add origin git@repo.forwardingplane.net:buraglio/briefcase-dotfiles.git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;briefcase git commit -am &amp;quot;Initial newhost commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;briefcase git checkout origin master&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Obviously replace the remote repo address with your own repo destination.   You can now check the status:```&#34; data-lang=&#34;Obviously replace the remote repo address with your own repo destination.   You can now check the status:```&#34;&gt;briefcase sync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should output something like this:```
Synchronizing dotfiles between /Users/buraglio/.dotfiles and /Users/buraglio
Symlink verified: /Users/buraglio/.bash_profile -&amp;gt; /Users/buraglio/.dotfiles/bash_profile
Symlink verified: /Users/buraglio/.bashrc -&amp;gt; /Users/buraglio/.dotfiles/bashrc
Symlink verified: /Users/buraglio/.profile -&amp;gt; /Users/buraglio/.dotfiles/profile
Symlink verified: /Users/buraglio/.README.md -&amp;gt; /Users/buraglio/.dotfiles/README.md&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Getting a new branch for an existing host was the biggest hurdle for me, I want a base .bashrc but may want different environment variables for mac and Linux.  I&#39;m not a git expert by any means, so there may be a better way to do this, but it works well for me. To branch a new host, it&#39;s pretty straightforward.  Briefcase is really just a wrapper for git, so prepending &#34;briefcase&#34; before the git commands seems to &#34;just work&#34; (as I learned by trial and error or making this work). On an existing Host:```&#34; data-lang=&#34;Getting a new branch for an existing host was the biggest hurdle for me, I want a base .bashrc but may want different environment variables for mac and Linux.  I&#39;m not a git expert by any means, so there may be a better way to do this, but it works well for me. To branch a new host, it&#39;s pretty straightforward.  Briefcase is really just a wrapper for git, so prepending &#34;briefcase&#34; before the git commands seems to &#34;just work&#34; (as I learned by trial and error or making this work). On an existing Host:```&#34;&gt;git clone git@your.repoaddress.net:username/reponame.git .dotfiles
mkdir -p tmp/dotfiles
mv .bashrc tmp/dotfiles/
mv .bash\_profile tmp/dotfiles/
briefcase sync
briefcase git branch \[newhost\]
briefcase git checkout \[newhost\]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;hellip;Make changes&amp;hellip;&lt;code&gt;
briefcase git commit -am &amp;quot;Initial newhost commit&amp;quot;
&lt;/code&gt;briefcase git push origin [newhost] There you have it, easily backed up and distributed environment control.  I&amp;rsquo;m planning to add &lt;a href=&#34;http://joeyh.name/code/etckeeper/&#34;&gt;etckeeper&lt;/a&gt; to this process next.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blending the Network; Pluribus ServerSwitch</title>
      <link>https://forwardingplane.net/post/blending-the-network-pluribus-serverswitch/</link>
      <pubDate>Mon, 21 Apr 2014 04:44:30 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/blending-the-network-pluribus-serverswitch/</guid>
      <description>

&lt;p&gt;I firmly believe that blending disciplines is the way of the future in IT. I&amp;rsquo;ve rambled about it here at &lt;a href=&#34;http://packetpushers.net/are-certifications-tests-still-worth-your-resources-in-the-day-of-hybrid-it/&#34;&gt;other venues&lt;/a&gt; and I&amp;rsquo;m vocal (some would probably say brash) about it on the &lt;a href=&#34;http://www.twitter.com/buraglio&#34;&gt;twitters&lt;/a&gt;.  Be it Networking and System, Systems and Security, Programming and Networking, most of us that have been around any length of time already do it but now it&amp;rsquo;s happening out in the open and &amp;ldquo;&lt;a href=&#34;http://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt;&amp;rdquo;, a form of the hybrid IT worker, has seemingly become the BOTD (Buzzword of the day). With &amp;ldquo;&lt;em&gt;hybrid&lt;/em&gt;&amp;rdquo; in mind, it was very apt that &lt;a href=&#34;http://www.pluribusnetworks.com/&#34;&gt;Pluribus Networks&lt;/a&gt; presented an intriguing spin on &amp;ldquo;&lt;em&gt;hybrid&lt;/em&gt;&amp;rdquo; from the hardware point of view at &lt;a href=&#34;http://techfieldday.com/event/nfd7/&#34;&gt;Network Field Day 7&lt;/a&gt;.  Remember the days or routers &lt;em&gt;or&lt;/em&gt; switches? Sure you do. Then along came the L3 Switch and shook everything up.  Now you could do both on the same box simplifying OPEX and potentially CAPEX as well as maintenance fees. It became possible to simplify the architecture and even to to collapse it if so desired.  I certainly did not expect to see anything like that in Pluribus.  In fact, to be honest, I really was not sure what to expect.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/04/PBNet.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/04/PBNet.png&#34; alt=&#34;PBNet&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What pluribus brings is merchant based hardware but it has a spin that I  didn&amp;rsquo;t see coming.  A pretty innovative one, too. What others began by creating flexible, programmable and highly resilient OSs and/or feature rich hardware without big name fuss (and prices to accompany said fuss), &lt;a href=&#34;http://www.pluribusnetworks.com/&#34;&gt;Pluribus&lt;/a&gt; has evolved one step further, added some serious steroids to the hardware and infused very flexible OS with many management vectors (CLI, API, GUI and even good &amp;lsquo;ol UNIX commands).  &lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/03/800px-1968_El_Camino.jpg&#34; alt=&#34;800px-1968_El_Camino&#34; /&gt; Like a Reese&amp;rsquo;s peanut butter cup, Pluribus has blended two things that seem to work well together: a &lt;a href=&#34;http://www.pluribusnetworks.com/products/freedom-server-switch-line/&#34;&gt;powerful server platform&lt;/a&gt; for processing and potentially acting on massive amounts of data and a merchant based silicon switch with a good number of fast interfaces.  It&amp;rsquo;s a software driven hardware solution.  A host router, but so much more.  I&amp;rsquo;ve long thought that host based routing and switching was a powerful tool, having worked on several &lt;a href=&#34;http://www.pfsense.org&#34;&gt;open source platforms&lt;/a&gt; that do just that.  However, the issues that inevitably came up were a lack of commercial hardware and software support, a structured, well defined market or the risk of the fracture of a community based product.  This provides answers to all of those concerns and offers a unique product to boot.&lt;/p&gt;

&lt;h2 id=&#34;swerver&#34;&gt;&lt;em&gt;&amp;ldquo;Swerver&amp;rdquo;  &lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;That&amp;rsquo;s the word that jumps into my brain when I try to categorize this nifty hybrid.  It&amp;rsquo;s a server, no it&amp;rsquo;s a switch no it&amp;rsquo;s a server &amp;hellip;It&amp;rsquo;s like an &lt;a href=&#34;http://en.wikipedia.org/wiki/Chevrolet_El_Camino&#34;&gt;El Camino&lt;/a&gt; (or &lt;a href=&#34;http://en.wikipedia.org/wiki/Ford_Ranchero‎&#34;&gt;Ford Ranchero&lt;/a&gt;, depending on your persuasion), &amp;ldquo;Is it a car? Is it a Truck?&amp;rdquo; &amp;ldquo;Yes.&amp;rdquo; Pluribus presents some interesting questions about how we can blend the network and systems into a more flexible platform with their server switch platform, creating an &lt;em&gt;infrastructure&lt;/em&gt; fabric as opposed to a &amp;ldquo;series of tubes&amp;rdquo; that &amp;ldquo;servers&amp;rdquo; connect to.  Their software suite is quite robust, too.  Anything from NAS to CDN, NAT to L3.  Oh, and they can run VMs, too.  I&amp;rsquo;m thinking a Bro IDS node, a blackhole router and a perfsonar node running right in the network fabric.  Very thought provoking stuff. I like to see ideas, products and people that lay it all out there and try to transform, to evoke thoughts and try to foster change.  This does that.  You can check out the videos from NFD7 &lt;a href=&#34;http://techfieldday.com/appearance/pluribus-networks-presents-at-networking-field-day-7/&#34;&gt;here&lt;/a&gt;.  I &lt;strong&gt;&lt;em&gt;dare&lt;/em&gt;&lt;/strong&gt; you to tell me you can not think of a use for something like this. &lt;a href=&#34;http://commons.wikimedia.org/wiki/File:1968_El_Camino.jpg&#34;&gt;El Camino Image Reference via WikiPedia&lt;/a&gt; Freedom Line image source Pluribus Networks   &lt;a href=&#34;http://www.forwardingplane.net/about/disclaimer/&#34;&gt;Standard Disclaimer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Replace ZFS RAIDZ1 disk</title>
      <link>https://forwardingplane.net/post/replace-zfs-raidz1-disk/</link>
      <pubDate>Tue, 11 Mar 2014 01:01:58 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/replace-zfs-raidz1-disk/</guid>
      <description>&lt;p&gt;I recently had the displeasure of dealing with a series of failed disks in my newly created ZFS based NAS.  I had cobbled together roughly 12TB of disk space and jammed them into an old PC, stretching the limits of the platform when I decided to go with ZFS.  I broke all of the rules, underpowered, single core PC, only a handful of GIG of non-ECC RAM, etc.  I&amp;rsquo;m sure storage guys are having a coronary after reading that, but it works for me and has minimal issues since I just relatively redundant need bulk storage and it doesn&amp;rsquo;t need to be fast (the ethernet connection is only 100M). Machine stats are as such: AMD Sempron&amp;trade; Processor 2800+ 2G NON-ECC memory The following disks:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/03/Screenshot-2014-03-10-13.49.35.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/03/Screenshot-2014-03-10-13.49.35-1024x280.png&#34; alt=&#34;Screenshot 2014-03-10 13.49.35&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The NAS was a long standing device on my network.  I&amp;rsquo;ve been using &lt;a href=&#34;http://www.nas4free.org/&#34;&gt;NAS4FREE&lt;/a&gt; for quite some time with fantastic results.  The disks are simply desktop drives, nothing fancy.  When I rebuilt it all using ZFS I found that I had not done 2 things.  I had not documented the warranty status of the devices and I had not enabled SMART monitoring.  I know, amateur hour at its finest; I&amp;rsquo;m OK with it, it&amp;rsquo;s just for home use and I have offsite storage for anything super important. *&lt;em&gt;As an aside, if you&amp;rsquo;re looking to build a NAS I would both recommend &lt;a href=&#34;http://www.nas4free.org/&#34;&gt;NAS4FREE&lt;/a&gt; as well as doing something as simple as documenting the warranty information of each disk in the description field.&lt;/em&gt; So, when I enabled SMART monitoring and email reporting. I found that several of my disks were failing their end-to-end tests when this started showing up in my inbox:  ```
The following warning/error was logged by the smartd daemon:
Device: /dev/ada1, Failed SMART usage Attribute: 184 End-to-End_Error.
Device info:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ST2000DM001-1CH164, S/N:xxxxxxxx, WWN:5-000c50-08147e2a4, FW:CC26, 2.00 TB
```  Bad news. However, with ZFS it is supposed to be fantastically easy to do disk replacements.  I had chosen RAIDZ1 for both volumes, so they could each supposedly sustain a single disk failure. There are a lot of online references for zfs. I used [this page](http://panoramicsolution.com/blog/?p=353) as a starting point for replacing my disk. I dropped to the shell on the NAS and did the following to identify the right disk to remove:```
nas:~# camcontrol devlist
&amp;lt;ST31000340AS SD15&amp;gt; at scbus0 target 0 lun 0 (ada0,pass0)
&amp;lt;ST2000DM001-1CH164 CC26&amp;gt; at scbus1 target 0 lun 0 (ada1,pass1)
&amp;lt;ST2000DM001-1CH164 CC24&amp;gt; at scbus2 target 0 lun 0 (ada2,pass2)
&amp;lt;ST2000DM001-1CH164 CC26&amp;gt; at scbus3 target 0 lun 0 (ada3,pass3)
&amp;lt;WDC WD20EARS-00MVWB0 51.0AB51&amp;gt; at scbus4 target 0 lun 0 (ada4,pass4)
&amp;lt;ST31500341AS CC1H&amp;gt; at scbus5 target 0 lun 0 (ada5,pass5)
&amp;lt;ST2000DM001-1CH164 CC29&amp;gt; at scbus6 target 0 lun 0 (ada6,pass6)
&amp;lt;ST31500341AS CC1H&amp;gt; at scbus7 target 0 lun 0 (ada7,pass7)
&amp;lt;ST2000DM001-9YN164 CC82&amp;gt; at scbus8 target 0 lun 0 (ada8,pass8)
&amp;lt;TOSHIBA THNCF512MPG 1.00&amp;gt; at scbus11 target 0 lun 0 (ada9,pass9)
```ada8 needs replaced.  The volume it exists in is zfs0.  The formula used is _&amp;quot;zpool &amp;lt;command&amp;gt; &amp;lt;pool&amp;gt; &amp;lt;device&amp;gt;&amp;quot;_```
zpool offline zfs0 ada8
```None of my stuff is hot swap, so I have to shut down the box.```
shutdown -h now
```Yank out the old disk and install the new one.```
zpool replace zfs0 ada8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;zpool online zfs0 ada8&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-After that you&#39;ll see the disk getting resilvered, which will take a while.```&#34; data-lang=&#34;After that you&#39;ll see the disk getting resilvered, which will take a while.```&#34;&gt;nas:~# zpool status zfs0
pool: zfs0
state: DEGRADED
status: One or more devices is currently being resilvered. The pool will
continue to function, possibly in a degraded state.
action: Wait for the resilver to complete.
scan: resilver in progress since Mon Mar 10 13:39:36 2014
105G scanned out of 3.37T at 75.4M/s, 12h36m to go
17.5G resilvered, 3.04% done
config:

NAME STATE READ WRITE CKSUM
zfs0 DEGRADED 0 0 0
raidz1-0 DEGRADED 0 0 0
ada1 ONLINE 0 0 0
ada2 ONLINE 0 0 0
ada3 ONLINE 0 0 0
ada4 ONLINE 0 0 0
ada6 ONLINE 0 0 0
replacing-5 OFFLINE 0 0 0
6070465578770542405 OFFLINE 0 0 0 was /dev/ada8/old
ada8 ONLINE 0 0 0 (resilvering)

errors: No known data errors&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the resilvering process you should have a repaired volume.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install nfsen and nfdump on CentOS 6.5 for netflow and or sflow collection</title>
      <link>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</link>
      <pubDate>Sat, 11 Jan 2014 21:55:24 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</guid>
      <description>

&lt;p&gt;I am an absolutely &lt;strong&gt;huge&lt;/strong&gt; fan of statistical and instrumentation data, especially when it comes to traffic analysis, visualization and baselining.  I&amp;rsquo;ve rambled on about the importance of it at &lt;a href=&#34;http://searchnetworking.techtarget.com/news/2240212051/The-Der-Spiegel-NSA-revelations-What-network-engineers-need-to-know&#34;&gt;every opportunity&lt;/a&gt;.  As a result of that, I have been doing work with netflow and netflow-like data for a fairly long time.  My first collector was the &lt;a href=&#34;http://www.splintered.net/sw/flow-tools/&#34;&gt;OSU Flow tools&lt;/a&gt; based stuff  back around 13 years ago.  From there I played with all kinds of netflow tools, both &lt;a href=&#34;http://www.arbornetworks.com/&#34;&gt;commercial&lt;/a&gt; and open source, finally settling most of my focus on &lt;a href=&#34;http://nfdump.sourceforge.net/&#34;&gt;nfdump&lt;/a&gt; and &lt;a href=&#34;http://nfsen.sourceforge.net/&#34;&gt;nfsen&lt;/a&gt;. A bit of history: nfdump was born out of a research network, requiring it to be able to consume huge amounts of flows efficiently.  This makes it very powerful and very useful for nearly anyone, from the small technology tinkerer to to the enterprise network engineer up through the service provider architect.  nfsen is really just a php wrapper for nfdump, however, the really nice thing about it (other then being free, opensource software) is that it is extendable via &lt;a href=&#34;http://sourceforge.net/apps/trac/nfsen-plugins/&#34;&gt;plugins&lt;/a&gt;.  This is really what makes it a serious player from all angles.     From botnet detection to displaying IP geo-data on a map, there is likely a plugin for it.  Not finding what you are looking for?  Write it!  The architecture to use it is already there and documented. For ease of install, I chose CentOS 6.5.  Once you have a system up and running, to get nfsen/nfdump working, here is what you need to do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yum install -y httpd php wget gcc make rrdtool-devel \\&#34; data-lang=&#34;yum install -y httpd php wget gcc make rrdtool-devel \\&#34;&gt;rrdtool-perl perl-MailTools perl-Socket6 flex byacc

vi /etc/selinux/config
set SELINUX=disabled
reboot```

You&amp;#39;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sudo iptables -I INPUT -p udp -m state &amp;ndash;state NEW -m udp &amp;ndash;dport 9995 -j ACCEPT
sudo ipt6ables -I INPUT -p udp -m state &amp;ndash;state NEW -m udp &amp;ndash;dport 9995 -j ACCEPT```&lt;/p&gt;

&lt;p&gt;Also allow for access to the web server you just installed.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sudo ip6tables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT&#34; data-lang=&#34;sudo ip6tables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT&#34;&gt;sudo ip6tables -I INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT  
sudo iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT
sudo iptables -I INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT  
service iptables save
service ip6tables save```
Once you enable https you can safely remove the table rules for port 80. Start HTTPd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sudo service httpd start&lt;code&gt;
Enable HTTPd at boot
`chkconfig httpd on&lt;/code&gt;
Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-wget http://downloads.sourceforge.net/project/nfdump/stable/nfdump-1.6.11/nfdump-1.6.11.tar.gz&#34; data-lang=&#34;wget http://downloads.sourceforge.net/project/nfdump/stable/nfdump-1.6.11/nfdump-1.6.11.tar.gz&#34;&gt;wget http://downloads.sourceforge.net/project/nfsen/stable/nfsen-1.3.6p1/nfsen-1.3.6p1.tar.gz```&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;tar -zxvf nfdump-1.6.11.tar.gz
./configure &amp;ndash;enable-nfprofile &amp;ndash;enable-nftrack &amp;ndash;enable-sflow
make &amp;amp;&amp;amp; sudo make install```
By default 1.6.11 enables v9 and ipfix =)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-adduser netflow&#34; data-lang=&#34;adduser netflow&#34;&gt;vi /etc/group```
Add user netflow to group apache&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;vi etc/nfsen.conf```
change www user to apache Add your host to the file to allow for collection, my %sources looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-%sources = (&#34; data-lang=&#34;%sources = (&#34;&gt;    &amp;#39;home&amp;#39;    =&amp;gt; { &amp;#39;port&amp;#39; =&amp;gt; &amp;#39;9995&amp;#39;, &amp;#39;col&amp;#39; =&amp;gt; &amp;#39;#0000ff&amp;#39;, &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;netflow&amp;#39; },
    &amp;#39;internal&amp;#39;    =&amp;gt; { &amp;#39;port&amp;#39; =&amp;gt; &amp;#39;9996&amp;#39;, &amp;#39;col&amp;#39; =&amp;gt; &amp;#39;#FF0000&amp;#39;, &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;netflow&amp;#39; },
);```
As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;./install.pl etc/nfsen.conf
cd /home/netflow/bin/
./nfsen start
Make it start at boot (referenced from &lt;a href=&#34;http://sourceforge.net/mailarchive/message.php?msg_id=29434166&#34;&gt;this post&lt;/a&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vi /etc/init.d/nfsen```&#34; data-lang=&#34;vi /etc/init.d/nfsen```&#34;&gt;Add this into the file:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;#!/bin/bash
#&lt;/p&gt;

&lt;h1 id=&#34;chkconfig-50-50&#34;&gt;chkconfig: - 50 50&lt;/h1&gt;

&lt;h1 id=&#34;description-nfsen&#34;&gt;description: nfsen&lt;/h1&gt;

&lt;p&gt;DAEMON=/home/netflow/bin/nfsen&lt;/p&gt;

&lt;p&gt;case &amp;ldquo;$1&amp;rdquo; in
        start)
        $DAEMON start
        ;;
        stop)
        $DAEMON stop
        ;;
        status)
        $DAEMON status
        ;;
        restart)
        $DAEMON stop
        sleep 1
        $DAEMON start
        ;;
        *)
        echo &amp;ldquo;Usage: $0 {start|stop|status|restart}&amp;rdquo;
        exit 1
        ;;
esac&lt;/p&gt;

&lt;p&gt;exit 0```
Then chkconfig it on to start it at boot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-chmod 755 nfsen &amp;&amp; chkconfig --add nfsen &amp;&amp; chkconfig nfsen on```&#34; data-lang=&#34;chmod 755 nfsen &amp;&amp; chkconfig --add nfsen &amp;&amp; chkconfig nfsen on```&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;That&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pretty&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;much&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;it&lt;/span&gt;. &lt;span style=&#34;color:#a6e22e&#34;&gt;Once&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;you&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;configure&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;your&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;netflow&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sflow&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;you&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;should&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;seeing&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;minutes&lt;/span&gt;. &lt;span style=&#34;color:#a6e22e&#34;&gt;Point&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;your&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;your&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;web&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;see&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;Mine&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//netmon/nfsen/nfsen.php (you&amp;#39;ll need to include the &amp;#34;nfsen.php&amp;#34; uness you edit your apache config to recognize &amp;#34;nfsen.php&amp;#34; as in index.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
[![&lt;span style=&#34;color:#a6e22e&#34;&gt;Screen&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Shot&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2014&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.13.53&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PM&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM-913x1024.png)](http://www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM.png)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Common&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issues&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;see&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;one&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;every&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: nfsend connect() error: Permission denied!&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;It&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;always&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;permissions&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issue&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;documented&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;here&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;google&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;nfsenplugins&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;wiki&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;NFSEN_Installation_Gotchas&lt;/span&gt;).  &lt;span style=&#34;color:#a6e22e&#34;&gt;You&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;need&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;make&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sure&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;that&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nfsen&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;can&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nfsen&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;comm&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;file&lt;/span&gt;. &lt;span style=&#34;color:#a6e22e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fixed&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mine&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;doing&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;chmod g+rwx ~netflow/```
My nfsen.conf file is using /home/netflow as the $BASEDIR.
 &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34; alt=&#34;Screenshot 2014-01-11 13.04.17&#34; /&gt;&lt;/a&gt;
You&amp;rsquo;ll likely see &amp;ldquo;Frontend - Backend version mismatch!&amp;rdquo;, this is a known issue. There is a patch to fix it &lt;a href=&#34;http://sourceforge.net/p/nfsen/bugs/43/&#34;&gt;here&lt;/a&gt;, I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-vi /usr/local/etc/rmflowdata.sh```&#34; data-lang=&#34;vi /usr/local/etc/rmflowdata.sh```&#34;&gt;Paste this in:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;#!/bin/bash&lt;/p&gt;

&lt;h1 id=&#34;prune-flow-data&#34;&gt;prune flow data&lt;/h1&gt;

&lt;h1 id=&#34;usage&#34;&gt;Usage:&lt;/h1&gt;

&lt;h1 id=&#34;30-is-the-number-of-days-adjust-accordingly&#34;&gt;+30 is the number of days, adjust accordingly.&lt;/h1&gt;

&lt;p&gt;/bin/find /home/netflow/profiles-data/live -name &amp;ldquo;nfcapd.*&amp;rdquo; -type f -mtime +30 -delete```&lt;/p&gt;

&lt;p&gt;Add this to your crontab:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-@daily /usr/local/bin/rmflowdata.sh```&#34; data-lang=&#34;@daily /usr/local/bin/rmflowdata.sh```&#34;&gt;Make it executable&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;chmod 755 /usr/local/bin/rmflowdata.sh```
There are probably more elegant ways to do it but this works just fine, is lightweight and can be run manually if needed. There are a lot of great use cases for this.  If you&amp;rsquo;re looking for an SDN tie-in, guess what, there is one.  &lt;a href=&#34;http://blog.sflow.com/2010/05/configuring-open-vswitch.html&#34;&gt;OpenVSwitch supports sflow export&lt;/a&gt; and low-and-behold, nfsen and nfdump can easily consume and display sflow data. Want flow statistics on your all VM, OVS based SDN lab?  Guess what, you can! There are some other great things you can do with flow data, too, specifically sflow.  It&amp;rsquo;s not just for network statistics, there is a host &lt;a href=&#34;http://host-sflow.sourceforge.net/&#34;&gt;based sflow implementation&lt;/a&gt; that track any number of interesting metrics.  &lt;a href=&#34;http://blog.sflow.com/&#34;&gt;blog.sflow.com&lt;/a&gt; is a great resource for all things sflow (also, it does IPv6 by default, as it should). Ok, now you have &lt;strong&gt;absolutely&lt;/strong&gt; no good reason not to be collecting flow data.   It&amp;rsquo;s easy, it&amp;rsquo;s useful and almost everything (hosts, routers, virtual switches) supports exporting &lt;strong&gt;&lt;em&gt;some&lt;/em&gt;&lt;/strong&gt; kind of flow information.  You can even generate it from an inline linux box or a box off of an optical tap or a span port running &lt;a href=&#34;https://code.google.com/p/softflowd/&#34;&gt;softflowd&lt;/a&gt; or &lt;a href=&#34;http://www.ntop.org/products/nprobe/&#34;&gt;nprobe&lt;/a&gt;.   Both of which I can confirm work wonderfully (the above collector is gathering flows from softflowd running on my &lt;a href=&#34;http://www.forwardingplane.net/2013/07/building-a-secured-network-in-a-box/&#34; title=&#34;Building a secured network in a box&#34;&gt;security onion box&lt;/a&gt; as well as exported flows from pfflowd on a &lt;a href=&#34;http://www.pfsense.org/&#34;&gt;pfsense&lt;/a&gt; router).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fixing the dreaded &#34;error: could not open configuration database (juniper.data&#43;)&#34; problem.</title>
      <link>https://forwardingplane.net/post/fixing-the-dreaded-error-could-not-open-configuration-database-juniper-data-problem/</link>
      <pubDate>Wed, 07 Aug 2013 16:52:04 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/fixing-the-dreaded-error-could-not-open-configuration-database-juniper-data-problem/</guid>
      <description>&lt;p&gt;Working on some MX series routers recently I encountered a problem I&amp;rsquo;d never seen before, essentially preventing the configuration from being committed:```
buraglio@rtr# commit check
re0:
error: could not open configuration database (juniper.data+)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-This is a very annoying problem and is terribly inconvenient as you can probably imagine. So, my first instinct is to drop down to the shell and starting hacking at it UNIX style.```&#34; data-lang=&#34;This is a very annoying problem and is terribly inconvenient as you can probably imagine. So, my first instinct is to drop down to the shell and starting hacking at it UNIX style.```&#34;&gt;buraglio@rtr&amp;gt;start shell&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From there I wanted to see the file system and check out the stats of what it thinks we have.```
buraglio@rtr% df -h
Filesystem     Size    Used   Avail Capacity  Mounted on
/dev/ad0s1a    3.5G    313M    2.9G    10%    /
devfs          1.0K    1.0K      0B   100%    /dev
/dev/md0        63M     63M      0B   100%    /packages/mnt/jbase
/dev/md1        53M     53M      0B   100%    /packages/mnt/jkernel64-12.3R3.4
buraglio@rtr%    82M     82M      0B   100%    /packages/mnt/jpfe-X960-12.3R3.4
/dev/md3       5.0M    5.0M      0B   100%    /packages/mnt/jdocs-12.3R3.4
buraglio@rtr%   104M    104M      0B   100%    /packages/mnt/jroute-12.3R3.4
buraglio@rtr% clearM     28M      0B   100%    /packages/mnt/jcrypto64-12.3R3.4
/dev/md6        38M     38M      0B   100%    /packages/mnt/jpfe-common-12.3R3.4
/dev/md7        92K     92K      0B   100%    /packages/mnt/jplatform-12.3R3.4
/dev/md8       422M    422M      0B   100%    /packages/mnt/jruntime-12.3R3.4
/dev/md9       7.9G     16K    7.2G     0%    /tmp
/dev/md10      7.9G     11M    7.2G     0%    /mfs
/dev/ad0s1e    393M     36K    362M     0%    /config
procfs         4.0K    4.0K      0B   100%    /proc
/dev/ad1s1f     18G    4.2G     12G    26%    /var&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-... and check the mounted partitions.```&#34; data-lang=&#34;... and check the mounted partitions.```&#34;&gt;buraglio@rtr% mount
/dev/ad0s1a on / (ufs, local, noatime)
devfs on /dev (devfs, local, multilabel)
/dev/md0 on /packages/mnt/jbase (cd9660, local, noatime, read-only, verified)
/dev/md1 on /packages/mnt/jkernel64-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md2 on /packages/mnt/jpfe-X960-12.3R3.4 (cd9660, local, noatime, read-only)
/dev/md3 on /packages/mnt/jdocs-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md4 on /packages/mnt/jroute-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md5 on /packages/mnt/jcrypto64-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md6 on /packages/mnt/jpfe-common-12.3R3.4 (cd9660, local, noatime, read-only)
/dev/md7 on /packages/mnt/jplatform-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md8 on /packages/mnt/jruntime-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md9 on /tmp (ufs, asynchronous, local, noatime)
/dev/md10 on /mfs (ufs, asynchronous, local, noatime)
/dev/ad0s1e on /config (ufs, local, noatime)
procfs on /proc (procfs, local, noatime)
/dev/ad1s1f on /var (ufs, local, noatime)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I ran a fsck to get some stats and see what the problem could be since it appears that there is no free space even though the router reports that it has it.```
buraglio@rtr% fsck -y -f /dev/ad1s1f
** /dev/ad1s1f (NO WRITE)
** Last Mounted on /var
** Phase 1 - Check Blocks and Sizes
** Phase 2 - Check Pathnames
** Phase 3 - Check Connectivity
** Phase 4 - Check Reference Counts
** Phase 5 - Check Cyl groups
FREE BLK COUNT(S) WRONG IN SUPERBLK
SALVAGE? no&lt;/p&gt;

&lt;p&gt;605 files, 2202492 used, 7040218 free (786 frags, 879929 blocks, 0.0% fragmentation)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Playing around in the shell presented this error as well```&#34; data-lang=&#34;Playing around in the shell presented this error as well```&#34;&gt;/var: create/symlink failed, no inodes free&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, it appears as if the /var partition is the issue. On my router /var is mounted as /dev/ad1s1f, so lets unmount this partition and try to fix it. In my experience Juniper will shy away from telling you to do anything in the shell, so do this at your own risk. Rebooting the router would also fix this issue, but I&amp;rsquo;m a form believer that rebooting networking equipment to fix issues is a lazy way to fix problems and will only serve to atrophy any troubleshooting skills you may have.```&lt;/p&gt;

&lt;p&gt;buraglio@rtr% umount -f /var&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now run fsck again to repair the file system```&#34; data-lang=&#34;Now run fsck again to repair the file system```&#34;&gt;buraglio@rtr% fsck -y -f /dev/ad1s1f
\*\* /dev/ad1s1f
\*\* Last Mounted on /var
\*\* Phase 1 - Check Blocks and Sizes
\*\* Phase 2 - Check Pathnames
\*\* Phase 3 - Check Connectivity
\*\* Phase 4 - Check Reference Counts
\*\* Phase 5 - Check Cyl groups
FREE BLK COUNT(S) WRONG IN SUPERBLK
SALVAGE? yes

605 files, 2203376 used, 7039334 free (782 frags, 879819 blocks, 0.0% fragmentation)

\*\*\*\*\* FILE SYSTEM WAS MODIFIED \*\*\*\*\*&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that the problematic bits have been repaired, we re-mount the partition```
buraglio@rtr% mount /dev/ad1s1f /var/&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Verify the mount```&#34; data-lang=&#34;Verify the mount```&#34;&gt;buraglio@rtr% mount
/dev/ad0s1a on / (ufs, local, noatime)
devfs on /dev (devfs, local, multilabel)
/dev/md0 on /packages/mnt/jbase (cd9660, local, noatime, read-only, verified)
/dev/md1 on /packages/mnt/jkernel64-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md2 on /packages/mnt/jpfe-X960-12.3R3.4 (cd9660, local, noatime, read-only)
/dev/md3 on /packages/mnt/jdocs-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md4 on /packages/mnt/jroute-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md5 on /packages/mnt/jcrypto64-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md6 on /packages/mnt/jpfe-common-12.3R3.4 (cd9660, local, noatime, read-only)
/dev/md7 on /packages/mnt/jplatform-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md8 on /packages/mnt/jruntime-12.3R3.4 (cd9660, local, noatime, read-only, verified)
/dev/md9 on /tmp (ufs, asynchronous, local, noatime)
/dev/md10 on /mfs (ufs, asynchronous, local, noatime)
/dev/ad0s1e on /config (ufs, local, noatime)
procfs on /proc (procfs, local, noatime)
/dev/ad1s1f on /var (ufs, local, noatime)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We should now be able to commit correctly.```
buraglio@rtr% cli
{master}
buraglio@rtr&amp;gt;&lt;/p&gt;

&lt;p&gt;{master}
buraglio@rtr&amp;gt; edit
Entering configuration mode
The configuration has been changed but not committed&lt;/p&gt;

&lt;p&gt;{master}[edit]
buraglio@rtr# commit check
re0:
configuration check succeeds
re1:
configuration check succeeds&lt;/p&gt;

&lt;p&gt;{master}[edit]
buraglio@rtr# commit
re0:
configuration check succeeds
re1:
commit complete
re0:
commit complete&lt;/p&gt;

&lt;p&gt;{master}[edit]
buraglio@rtr#
```And&amp;hellip;.you&amp;rsquo;re done. Hopefully this will help someone fight this problem, I only found a &lt;a href=&#34;http://www.gns3.net/labs/juniper/jncia-junos/operational-monitoring-and-maintenance/&#34;&gt;handful&lt;/a&gt; of &lt;a href=&#34;http://forums.juniper.net/t5/Junos-and-Junosphere/Commit-Errors/td-p/17615&#34;&gt;other references&lt;/a&gt; to it that was useful but it didn&amp;rsquo;t address my exact scenario.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
