<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>How-To on ForwardingPlane.net</title>
    <link>https://forwardingplane.net/tags/how-to/</link>
    <description>Recent content in How-To on ForwardingPlane.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2019, all rights reserved.</copyright>
    <lastBuildDate>Sun, 08 Sep 2019 18:11:58 +0000</lastBuildDate>
    
        <atom:link href="https://forwardingplane.net/tags/how-to/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ElastiFlow Template VM</title>
      <link>https://forwardingplane.net/post/elastiflow-template-vm/</link>
      <pubDate>Sun, 08 Sep 2019 18:11:58 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/elastiflow-template-vm/</guid>
      <description>&lt;p&gt;Flow data is a critical piece of understanding how your network works what what it is actively doing. It also provides a great baseline and capacity planning tool. However, some of the more feature rich NetFlow and/or sFlow collectors can be quite daunting in their cost and/or complexity to install. &lt;a href=&#34;https://github.com/robcowart/elastiflow&#34;&gt;ElastiFlow&lt;/a&gt; is a great alternative for flow analytics and is built on the well traveled and robust &lt;a href=&#34;https://www.elastic.co/start?ultron=[EL]-[B]-[AMER]-US+CA-Exact&amp;amp;blade=adwords-s&amp;amp;Device=c&amp;amp;thor=elastic%20stack&amp;amp;gclid=EAIaIQobChMIuKC5xefB5AIVCYnICh0wEg5lEAAYASAAEgIp_fD_BwE&#34;&gt;ElasticStack&lt;/a&gt;, meaning, its back end is well documented, well supported, and scales exceptionally well. For those that would like to play around with this but don&amp;rsquo;t want to take the time to install it (see below for the instruction set I used), I have provided a simple VM to toy around with.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2019/09/Screen-Shot-2019-09-07-at-11.00.35-PM-1024x704.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Included here is a vanilla Ubuntu 18 LTS VM with a basic &lt;a href=&#34;https://github.com/robcowart/elastiflow&#34;&gt;Elastiflow&lt;/a&gt; install. This includes all of the components of an ElasticStack plus the front end pieces of the ElastiFlow project. Most of the install is based on &lt;a href=&#34;https://www.catapultsystems.com/blogs/install-elastiflow-on-ubuntu-18-04-part-1/&#34;&gt;this&lt;/a&gt; how-to. &lt;/p&gt;

&lt;p&gt;Included in the image is also a base install of NGINX and certbot so that you can reverse proxy the access and have a valid SSL certificate. There are a plethora of guides on how to accomplish that task on the internet.&lt;/p&gt;

&lt;p&gt;This was build and validated on Proxmox 6.0.6 but should be able to run on VMWare as well with a bit of qemu-img conversion. As expected, ElastiFlow (and ElasticStack) are fairly resource hungry. 16G of Memory and a handful of CPU cores is the bare minimum to run this with any real efficiency. Additionally, Ubuntu 18 has changed how the networking is setup - it is all located in /etc/netplan/ now.   &lt;/p&gt;

&lt;p&gt;Login Information:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;User Name: root
Password: elastiflow
Privileged user: elastiflow
Password: elastiflow  

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Default IP addresses:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;10.255.255.5/27
2001:db8:ffff:2::5/64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Download the image &lt;a href=&#34;https://drive.google.com/open?id=1ga_Pj2j6h1ce9rcT7jQjncpVjLIC4X4t&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Basic automation for WISPs and small to medium ISPs</title>
      <link>https://forwardingplane.net/post/basic-automation-for-wisps-and-small-to-medium-isps/</link>
      <pubDate>Mon, 29 Jul 2019 09:39:35 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/basic-automation-for-wisps-and-small-to-medium-isps/</guid>
      <description>&lt;p&gt;Small to medium ISPs are an interesting phenomenon. Early in my career I was pretty heavily involved in that space, so much of my current thought processes and methodologies are heavily informed by that experience. Something that never ceases to amaze me today is that the practice of scripting and “automating” things seems to have become somewhat of a lost art, or at the very least it is not part of an initial deployment plan. As I learned to operate a network at scale and with efficiency, we used a significant amount of perl to automate repetitive tasks such as user creation for ppp profiles, provisioning DSL CPE, checking status of PRI and ATM VPCs, etc. In the many years that have passed since my introduction to ISP architecture and operation, the internet has gone from a luxury item to a required utility. In this lapsed time, specialization in networking has become far more prevalent and the generalist role has been significantly diminished. With that specialization and commoditization of IT, the prevalence of the network engineer that could write code became more and more uncommon. Then came “automation”. As we realized that the ubiquitous nature of IT systems and services was only going to increase, automation platforms and companies operating those platforms started to spring up. No longer was there a need to learn hardcore perl, python, shell programming. There were frameworks such as &lt;a href=&#34;https://cfengine.com/&#34;&gt;cfengine&lt;/a&gt;, &lt;a href=&#34;https://puppet.com/&#34;&gt;puppet&lt;/a&gt;, &lt;a href=&#34;https://www.saltstack.com/&#34;&gt;salt&lt;/a&gt;, and &lt;a href=&#34;https://www.ansible.com/&#34;&gt;ansible&lt;/a&gt; that could abstract some of that away and provide significant functionality in addition. I did extensive work with cfengine and did production deployments of salt. In addition, I was around for production deployments of puppet, but it wasn’t until I played with Ansible a few years ago that I got really interested in the automation space - but not really automation, per se. It was far more interesting to me to work on orchestrating workflows. Ansible was perfect for this due to its extreme flexibility and its ability to natively talk to network hardware. So I wrote some Ansible. Then I was informed that my ansible was poor form (which it definitely was). At that point I spent some time learning and playing. Then other things came along and I set it aside for a few years. Well, this past month my interest has ben re-ignited (mainly due to the inclusion of a &lt;a href=&#34;https://docs.ansible.com/ansible/latest/network/user_guide/platform_routeros.html&#34;&gt;mikrotik routeos ansible module&lt;/a&gt;). I spent some time with my &lt;a href=&#34;https://twitter.com/samoehlert&#34;&gt;local ansible guru&lt;/a&gt; and he taught me the best practices and from there I was off to the races. After a bit of re-education, I have compiled a few very simple ansible roles and playbooks focused mostly on the WISP world (because I have a lot of this type of gear in my lab), but I fully expect to expand on them greatly as they are all part of a larger bunch of orchestration parts that I have been writing at night and in my free time. Until then, please feel free to use, modify, or provide patches / input for what I have published thus far. &lt;img src=&#34;https://www.forwardingplane.net/wp-content/uploads/2019/07/transparent-ansible-logo.png&#34; alt=&#34;Transparent ansible logo&#34; title=&#34;transparent-ansible-logo.png&#34; /&gt; &lt;a href=&#34;https://github.com/buraglio/mikrotik-armor&#34;&gt;mikrotik-armor&lt;/a&gt; Simple Ansible role and playbook to harden a Mikrotik RouterOS device &lt;a href=&#34;https://github.com/buraglio/upgrade-mikrotik-routeros&#34;&gt;upgrade-mikrotik-routeros&lt;/a&gt; Simple Ansible playbook and role for setting a software channel and upgrading RouterOS on mikrotik devices &lt;a href=&#34;https://github.com/buraglio/ubnt-airos-tshaper&#34;&gt;ubnt-airos-tshaper&lt;/a&gt; Ansible playbooks to enable and configure the traffic shaper on Ubiquity AirOS CPE&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The value of measurements: Network Latency</title>
      <link>https://forwardingplane.net/post/the-value-of-measurements-network-latency/</link>
      <pubDate>Mon, 29 Apr 2019 10:23:32 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/the-value-of-measurements-network-latency/</guid>
      <description>&lt;p&gt;There is no shortage of network telemetry data that can be collected, recorded, graphed, and stored for cross reference and triage. Not one to be underestimated, latency at a can be incredibly powerful when leveraged for baseline and deviation notification. As I have &lt;a href=&#34;https://www.forwardingplane.net/2018/02/strategy-series-view-outside-network/&#34;&gt;eluded to in the past,&lt;/a&gt; there are many tools in this space. &lt;a href=&#34;https://netbeez.net/blog/how-to-leverage-latency-testing-and-long-term-trend-collection/&#34;&gt;I have written about a few of them in detail&lt;/a&gt; and touched on others in passing. Regardless of the tool, the data is powerful and the instrumentation they provide will only serve to make your network more robust and easier to work on. One tool that is particularly easy to set up and utilize is &lt;a href=&#34;https://oss.oetiker.ch/smokeping/&#34;&gt;smokeping&lt;/a&gt;. From the authors site: &lt;em&gt;SmokePing keeps track of your network latency:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Best of breed latency visualisation.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Interactive graph explorer.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Wide range of latency measurement plugins.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Master/Slave System for distributed measurement.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Highly configurable alerting system.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Live Latency Charts with the most &amp;lsquo;interesting&amp;rsquo; graphs.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Free and OpenSource Software written in Perl written by Tobi Oetiker, the creator of MRTG and RRDtool &lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://www.forwardingplane.net/wp-content/uploads/2019/04/download_Comcast_Chicago_last_864000.png&#34; alt=&#34;Download Comcast Chicago last 864000&#34; title=&#34;download_Comcast_Chicago_last_864000.png&#34; /&gt; &lt;em&gt;Comcast SpeedTest.net graph for home network&lt;/em&gt; Now, you may be asking _“why do I need to track latency?_”, well, the data is incredibly powerful and can be indicators of anything from a failing optic to a network compromise. This is especially useful in small to medium sized ISPs (and especially WISPs), where cost of software and operational overhead is at a premium, and customer satisfaction is the currency that is dealt. In fact, I was able to use smokeqping to help diagnose a functional denial of service of a commonly deployed cable CPE as detailed &lt;a href=&#34;https://forums.businesshelp.comcast.com/t5/IPV6/Reproducible-denial-of-service-of-Netgear-CPE-running-native/m-p/31597#M787&#34;&gt;here&lt;/a&gt;. &lt;strong&gt;I can’t emphasize enough how useful long term trend data is.&lt;/strong&gt; Smokeping can be used to monitor more than just ping RTT, it supports a myriad of plugins allowing for application latency of protocols such as DNS queries, http get, ssh daemon response, speed test results, the list of plugins - or as smokeping calls them, probes - goes on and can be found &lt;a href=&#34;https://oss.oetiker.ch/smokeping/probe/index.en.html&#34;&gt;here&lt;/a&gt;. Where this is particularly useful is in simulating customer experience.  As with most things in life, perspective is paramount. To address this, smokeping can also be deployed as a distributed model. Deploying it with installations more local to a customer or in a far flung site, say on a raspberry pi, located in remote POP sides or pedestal locations will provide a closer perspective to what the customer actually sees. In the past I have deployed remote raspberry pi devices in an actual FTTH pedestal connected to an ONT to provide the exact customer point of view and it provided a wealth of information I would not otherwise be able to see. There are a myriad of different instal guides for Smokeping, my recommended starting point is by &lt;a href=&#34;https://github.com/magicdude4eva&#34;&gt;Gerd Naschenweng&lt;/a&gt; and can be found &lt;a href=&#34;https://github.com/magicdude4eva/docker-smokeping&#34;&gt;here&lt;/a&gt;. It provides a docker instance but also has a very good set of configuration files to build examples from. Don’t discount latency data - it’s a powerful set of information for any working network. For anyone interested in seeing a working smokeping installation, mine is public and available to view. It provides a few things such as DNS latency, RTT for v4 and v6, RTT for ZeroTier hosts and RIPE ATLAS probes, etc. It’s a powerful toolkit. My public cloud instance is hosted at &lt;a href=&#34;http://www.prgmr.com&#34;&gt;prgmr.com&lt;/a&gt; and can be found &lt;a href=&#34;https://watcher.forwardingplane.net/smokeping/smokeping.cgi&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS - the treasure trove of information your ISP can see</title>
      <link>https://forwardingplane.net/post/dns-the-treasure-trove-of-information-your-isp-can-see/</link>
      <pubDate>Mon, 10 Dec 2018 10:23:42 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/dns-the-treasure-trove-of-information-your-isp-can-see/</guid>
      <description>&lt;p&gt;In recent years, the nature of &lt;a href=&#34;http://fortune.com/2017/11/23/net-neutrality-explained-what-it-means-and-why-it-matters/&#34;&gt;privacy on the internet&lt;/a&gt; has become a very important topic amongst those concerned with the now lack of &lt;a href=&#34;https://www.theverge.com/2017/12/14/16776154/fcc-net-neutrality-vote-results-rules-repealed&#34;&gt;net neutrality&lt;/a&gt;. The de-facto mechanism for dealing with privacy has been to &amp;ldquo;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;SSL all the things&lt;/a&gt;&amp;rdquo;, which I am very much in favor of. What many do not realize, though, is that simply using SSL for the traffic that transits a given ISP still leaves a wealth of thick, rich, delicious personal data still easily available to your ISP to harvest, sell, and do with as they please. This data comes in the form of DNS queries. DNS is the nearly-always-forgotten, crucial aspect of how the internet functions. Without DNS, nothing works. Everything appears broken and manifest as what appears to be a networking problem. ISPs typically provide what is called a &lt;a href=&#34;https://umbrella.cisco.com/blog/2014/07/16/difference-authoritative-recursive-dns-nameservers/&#34;&gt;recursive resolver&lt;/a&gt;, which for most people is handed down by a local provider to the customer premise equipment (CPE; usually a modem or optical terminal of some kind) that they install at a residence. This CPE then hands that resolver to your clients that use it to - you guessed it - recursively resolve DNS queries. These queries can be logged and then mined for browsing habits, etc. Anyone that has ever done any network forensics will know straight away that the value of the information contained in DNS query logs is very, very high. &lt;/p&gt;

&lt;p&gt;What this means is that even though a privacy conscious individual is hiding the bulk of their content in SSL, meaning the bulk of what they’re reading, searching for, and doing, is encrypted, the requests for that content or activity is not. For example, an ISP can potentially see that a client is making many, many queries for $onlineshopping.com and begin selling that data to advertisers. If you think they’re not doing this now, &lt;a href=&#34;https://www.wired.com/story/can-verizon-build-a-strong-brand-from-the-bones-of-yahoo-and-aol/&#34;&gt;think again&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Great, so $bigbadprovider can see your queries. There are a number of pretty good ways to work around this, and &lt;a href=&#34;https://pi-hole.net/&#34;&gt;one of my favorite projects&lt;/a&gt; handily deals with one of them with great simplicity. What I am referring to is the newly popular &lt;a href=&#34;https://scotthelme.co.uk/securing-dns-across-all-of-my-devices-with-pihole-dns-over-https-1-1-1-1/&#34;&gt;DNS over HTTPS&lt;/a&gt;, which is supported by the &lt;a href=&#34;https://one.one.one.one/&#34;&gt;cloudflare 1.1.1.1 service&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So, as a thought experiment I decided to play Reeses Peanut butter and chocolate with two of my favorite technological creations: the aforementioned PiHole, and &lt;a href=&#34;https://zerotier.com/&#34;&gt;ZeroTier&lt;/a&gt;. Now anyone that isn’t familiar with ZeroTier, you should acquaint yourself - Packet Pushers did a good &lt;a href=&#34;https://packetpushers.net/podcast/pq-134-meet-zerotier-open-source-networking/&#34;&gt;podcast on it back in November of 2017&lt;/a&gt;. It’s functionally an encrypted overlay supporting dual stack networking with auto configuration and gateway capabilities, and it runs on almost everything. I love this overlay technology and have been using it for a while - highly recommended.&lt;/p&gt;

&lt;p&gt;Back to my peanut butter and chocolate experiment. So, given that I had an existing ZeroTier network and an existing PiHole setup at home, I went over to &lt;a href=&#34;https://www.vultr.com/?ref=7692870&#34;&gt;Vultr.com&lt;/a&gt; and spun up a small VM for $3.50/mo, integrated it into my fleet with my Ansible and Salt tools, and installed ZeroTier and Pihole. From there I set up this DNS hierarchy. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vS-DsmzNWvE335KZtNo6AHX3SySG-VQWhK7i9sNgT6mFMHC5VzRWtMuJg5JraU2dJTFQT4QIGnfaMFP/pub?w=960&amp;amp;h=720&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;What this buys me is a fully encrypted DNS path up through the Vultr.com VM host without modifying the underlying DNS transport. And it works surprisingly well. I ran SmokePing from two hosts - both leveraging ZeroTier to do their testing, one on my local network and one in the cloud - to measure latency for a few days before I did this and kept that running after the deployment. Now, it’s not perfect but my family and I have been using this for about a month with minimal issues. Once in a great while we’ll see some slow DNS resolution time, but overall it works fairly well. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.forwardingplane.net/wp-content/uploads/2018/12/Resolver-Queries.png&#34; alt=&#34;Resolver Queries&#34; title=&#34;Resolver Queries.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My take &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The idea of using a public resolver kinda bothers me, I realize it’s probably unfounded, but I know how to and have run resolvers for ISPs and organizations for like 20 years, so I have the burden of knowledge about what is in the logs and how to run my own. Using a secured recursive resolver is simply trading transit privacy for lack of query privacy somewhere else. Then there is the issue of content networks that use DNS queries to take you to the best / topologically closest cache of their content [NOTE: this, along with the forensics data for debugging potential security issues is a &lt;strong&gt;top&lt;/strong&gt; reason that all ISPs should run their own resolvers]. I fully realize that a normal end user running their own resolver is unlikely and that this deployment is a bit overkill. However, as I can demonstrably prove, it works. And it works pretty well. It also has the added bonus of allowing me to have internal DNS resolution of my own hosts and any mobile ZeroTier client. Is it for everyone? No way. Does it prove viability for low/medium traffic use? Sure. The point is really just to get folks thinking about information leaking that they may not have considered. The nature of the internet makes true privacy pretty much impossible, but there are a few ways to make your data a little harder to for companies to compile and capitalize on if you truly don’t want them to.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Faucet: Enterprise OpenFlow in production</title>
      <link>https://forwardingplane.net/post/faucet-enterprise-openflow-in-production/</link>
      <pubDate>Mon, 05 Nov 2018 10:56:21 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/faucet-enterprise-openflow-in-production/</guid>
      <description>

&lt;p&gt;Remember OpenFlow? It was the media and marketing darling for the better part of 5 years as “the machine” conflated OpenFlow with SDN and SDN with - almost literally - everything. &amp;ldquo;Still Does Nothing&amp;rdquo; was a common phrase uttered around those of us that had run large scale, complex networks for a long time. Quietly, &lt;a href=&#34;https://faucet-sdn.blogspot.com/&#34;&gt;and mostly&lt;/a&gt;, out of the fickle media and blogosphere eye, a scrappy little SDN project called &lt;a href=&#34;https://github.com/faucetsdn/faucet&#34;&gt;faucet&lt;/a&gt; has been &lt;a href=&#34;https://github.com/faucetsdn/faucet&#34;&gt;diligently plugging away&lt;/a&gt; &amp;ndash; making easy to use, production quality, well documented, and very stable code that runs OpenFlow networks quite happily in production and at scale. Oh, did I mention that it&amp;rsquo;s also got a very small footprint? Did I also mention that we&amp;rsquo;ve built a multi-terabit network that scales, transiting IPv4, IPv6, L2/L3 switching as well as routing? Or that faucet can control switches from multiple vendors, including P4 vendors who provide a P4-to-OF bridge, and interoperates with non-SDN networks? Or (and possibly most importantly) that faucet provides automated integration tests, allowing many bugs to be caught early (sometimes even by the switch vendor) before shipping new releases? Well, I should probably mention those things. I&amp;rsquo;ve been lucky enough to have been involved in SDN off and on since around 2009, and I can emphatically say that of the production SDN and OpenFlow networks that I have been intimately involved in, this combination of hardware, software and people has been, hands down, the most rewarding and most supportable. In fact, this has been so supportable and great to work with, we migrated our production branch office over to a set of faucet controlled SDN switches, and will soon migrate first hop routing over to our robust faucet system. &amp;ldquo;However did you do this?!?!&amp;rdquo; you might be inclined to say. Well, I&amp;rsquo;m glad you asked, because I am going to tell you.    First, though, there should be some design goals. As many of the naysayers of SDN will happy point out, &amp;ldquo;what problem are you trying to solve?&amp;rdquo; to that end, here is what our design goals were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run all layer 2 in via faucet&lt;/li&gt;
&lt;li&gt;Remove need to log into any network elements after deployment (other than firmware updates)&lt;/li&gt;
&lt;li&gt;Centralize management&lt;/li&gt;
&lt;li&gt;Stretch goal to NFV BGP, do first hop L3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Easy enough, right? It really is. For our deployment we leveraged Aruba 2930F switches giving us a wealth of 1G copper ports and a handful of 10G SFP+ ports. Luckily, we already had this gear because as so many that have tried to deploy openflow in the past have seen, all hardware is not created equally. Luckily, the &lt;a href=&#34;https://www.faucet.org.nz/&#34;&gt;faucet foundation&lt;/a&gt; has published a list of requirements for support, and there are a reasonable number of vendors that actually conform. The real key that I learned in this process is that without proper vendor support (which had been several lacking in the past), and without multi-table, OpenFlow is not positioned for success. It comes down to using the right tools for the job, and OpenFlow (as well as SDN) is no different. Originally this post was to detail the process of building this network, much like posts in the past where there has been a “do this, then do that” how-to, it’s more or less unnecessary here. Why? The faucet project is serious, well documented and generally here to work. The expectation is that this is not an enclave, or a science experiment, or a lab. It’s a production network with real people and real traffic. Read that again. The expectation is that this is stable, supportable, and can do in ready to use day-to-day. And it doesn’t disappoint. Installing is a snap, the &lt;a href=&#34;https://docs.faucet.nz/en/latest/tutorials/first_time.html&#34;&gt;documentation&lt;/a&gt; for faucet is fantastic and complete. If there is something missing or a question, the developers are incredibly responsive and very quick to answer and address any issues that may arise. It’s extremely low footprint - it runs very well on a raspberry pi and does not tax a raspberry pi series 2, even with the gauge telemetry interface (there is a &lt;a href=&#34;https://docs.faucet.nz/en/latest/installation.html#installing-on-raspberry-pi&#34;&gt;pre-built pi OS&lt;/a&gt; for anyone that would prefer a more turnkey option). You may be thinking “_But Nick, I need my CLI!!!_” You’re covered - and here is why: the developers use this system. They run real networks with it. Every day. They know what is necessary to manage and maintain a real production network and sometimes that means troubleshooting. Like many engineers that learned on traditional network equipment, most of us prefer a CLI to troubleshoot, so the inclusion of this feature from the controller is not really a surprise. The fctl command provides a reasonable visibility into the operations of the controller and can be augmented and scripted.```
buraglio@faucet:~ $ /usr/bin/fctl &amp;ndash;help&lt;/p&gt;

&lt;p&gt;usage:&lt;/p&gt;

&lt;p&gt;MACs learned on a DP.&lt;/p&gt;

&lt;p&gt;/usr/bin/fctl -n &amp;ndash;endpoints=&lt;a href=&#34;http://172.17.0.1:9302&#34;&gt;http://172.17.0.1:9302&lt;/a&gt; &amp;ndash;metrics=learned_macs &amp;ndash;labels=dp_id:0xb827eb608918&lt;/p&gt;

&lt;p&gt;Status of all DPs&lt;/p&gt;

&lt;p&gt;/usr/bin/fctl -n &amp;ndash;endpoints=&lt;a href=&#34;http://172.17.0.1:9302&#34;&gt;http://172.17.0.1:9302&lt;/a&gt; &amp;ndash;metrics=dp_status&lt;/p&gt;

&lt;p&gt;Retrieve FAUCET/Gauge state using Prometheus variables.&lt;/p&gt;

&lt;p&gt;optional arguments:&lt;/p&gt;

&lt;p&gt;-h, &amp;ndash;help            show this help message and exit&lt;/p&gt;

&lt;p&gt;-n, &amp;ndash;nonzero         nonzero results only&lt;/p&gt;

&lt;p&gt;-e ENDPOINTS, &amp;ndash;endpoints ENDPOINTS&lt;/p&gt;

&lt;p&gt;list of endpoint URLs to query&lt;/p&gt;

&lt;p&gt;-m METRICS, &amp;ndash;metrics METRICS&lt;/p&gt;

&lt;p&gt;list of metrics to query&lt;/p&gt;

&lt;p&gt;-l LABELS, &amp;ndash;labels LABELS&lt;/p&gt;

&lt;p&gt;list of labels that must be present&lt;/p&gt;

&lt;p&gt;&amp;ndash;display-labels DISPLAY_LABELS&lt;/p&gt;

&lt;p&gt;list of labels to filter display by (default all)
```Monitoring is also taken into account in the form of the gauge interface, which provides a nearly-real-time telemetry stream of important and useful information. Leveraging both the wealth of topological information that the controller has at its disposal and a familiar &lt;a href=&#34;https://github.com/prometheus&#34;&gt;prometheus&lt;/a&gt; / &lt;a href=&#34;https://grafana.com/&#34;&gt;grafana&lt;/a&gt; back / front end interface, the oft-touted notion of streaming telemetry is fully - and quite capably - realized. From the perspective of a networking monitoring and statistics geek, this is the cat’s meow. Very, very data rich. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/grafana-screencap.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/grafana-screencap-1024x275.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; A simple diagram of our office network pretty well explains the decoupled control plane architecture. Keep it simple, architect for success. Fundamentally SDN networks should be designed like other networks, redundant systems, good monitoring, out of band access. A good design principle is that if you wouldn’t do it on a traditional network, you probably shouldn’t do it for an SDN based network.   &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/faunet-office.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/faunet-office.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;   Don’t trust me? Fair enough, check out the &lt;a href=&#34;https://www.waikato.ac.nz/research/units/wand.shtml&#34;&gt;University of Waikato&lt;/a&gt; interface &lt;a href=&#34;https://grafana.redcables.wand.nz/d/000000003/redcables-bgp?orgId=1&#34;&gt;here&lt;/a&gt;. For more interface on the deployment at &lt;a href=&#34;https://wand.net.nz/&#34;&gt;WAND&lt;/a&gt;, check &lt;a href=&#34;https://redcables.wand.nz/&#34;&gt;this link&lt;/a&gt;. You won’t be disappointed.    &lt;/p&gt;

&lt;h2 id=&#34;my-take&#34;&gt;My take&lt;/h2&gt;

&lt;h3 id=&#34;building-and-running-it&#34;&gt;Building and running it&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://docs.faucet.nz/en/latest/&#34;&gt;documentation for faucet&lt;/a&gt; is indescribably better than any other SDN project I have worked with over the span of nearly 10 years. &lt;strong&gt;It’s also supportable.&lt;/strong&gt; My office has been running the enterprise network off of faucet for a while now, without issue, and it meets our design goals [stretch goal of BGP NFV is still in process - testing is successful]). It is easy to manage and very information rich. I can see security minded folks being very interested in the ACLs and other such options available.&lt;/p&gt;

&lt;h3 id=&#34;telemetry-and-analytics&#34;&gt;Telemetry and analytics    &lt;/h3&gt;

&lt;p&gt;   Where so many others in this space are talking about their Telemetry solution, this one is already here, complete, and usable. Frankly, I am fully comfortable running a production network on this technology, operationally it is truly easier. From a security perspective, the options added scale well and deliver on their promise. Where OpenFlow was once touted as the networking silver bullet (without a lot of real stick time to prove or disprove it), it has now fallen comfortable into a nice, supportable model.&lt;/p&gt;

&lt;h3 id=&#34;up-next&#34;&gt;Up next….    &lt;/h3&gt;

&lt;p&gt;If you think this is cool, wait until &lt;a href=&#34;https://sc18.supercomputing.org/&#34;&gt;SuperComputing 18&lt;/a&gt;, where we’re deploying a &lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6461072411969363968/&#34;&gt;first-of-it’s kind network&lt;/a&gt;, all controlled by FAUCET.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Strategy Series: What is your netflow strategy?</title>
      <link>https://forwardingplane.net/post/what-is-your-netflow-strategy/</link>
      <pubDate>Mon, 18 Dec 2017 11:15:30 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/what-is-your-netflow-strategy/</guid>
      <description>

&lt;p&gt;You have one, right? Even if your entire strategy is “collect some flow data”, there is absolutely NO reason not to have a netflow implementation, and frankly, it will save you time and money over time if you make the effort to do it. I love network data and analytics and I have waxed poetic about how important they are at every opportunity. There are a myriad of options for analytics and flow data. If you’re not doing something, you’re doing it wrong. I can go on and on about the importance of network data for budgeting, security, capacity planing, and general knowledge of what your network is actually doing, but that’s for another day (contact me directly if you really want to chat details on that subject). Today is about network flow data - the foundational bits and pieces of what the heck your network, big or small, is actually doing. I’ve been having a breakdance fight with flow data packages for almost two decades, and I’ve jotted down a few of my more notable experiences. Regardless of your needs, budget, abilities, or time, there is a solution for you.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://giphy.com/gifs/breakin-boogaloo-shrimp-11FirB7GcukiwU&#34;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;arbor-https-www-arbornetworks-com&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://www.arbornetworks.com/&#34;&gt;Arbor&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Arbor is the Rolls Royce of flow analytics (and DDoS mitigation) solutions. It does almost everything, has options for managed objects, DDoS scrubbing and alerting capabilities, a magnificent interface, role based access, rainbows and gumdrop houses with lollipop trees. This system is pretty darned amazing - it truly is, and that likely comes from the fact that they were one of the first, and had/have one of the largest install bases for this kind of system. They have turnkey solutions and have the unique position of being in roughly 90% of the worlds legacy tier 1 ISPs, so their DDoS and other security options are strong, fast to update, and &lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt; good. I’ve had great experience with this platform and its API. I like to think of arbor as the commercial ISP brass ring for flow data analytics. They have other solutions for enterprise and campus, but their roots are in strong ISP solutions. They’re pricey, but very, very good. Expect to need at least an FTE to really take full advantage of their very capable ecosystem, but if you dedicated the money and manpower to it, you won’t be sad.&lt;/p&gt;

&lt;h2 id=&#34;splunk-https-www-splunk-com&#34;&gt;&lt;a href=&#34;https://www.splunk.com/&#34;&gt;Splunk&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We all know spunk as a really nice log and analytic system but what many may not realize is that Splunk is really, really good at network data and analytics as well. It’s pricey, but it’s as close as you’ll get to a turkey solution for a SIEM that can actually scale. It has the notion of customizable dashboards and visualization, as a huge amount of plugins and add on’s, but they come with a legendarily steep price tag. The saying I have always heard is “if you can afford spunk, buy spunk. If you can’t use an ELK stack (noe elastic stack)”. My experience backs this up.&lt;/p&gt;

&lt;h2 id=&#34;elk-elastic-stack-https-www-elastic-co&#34;&gt;&lt;a href=&#34;https://www.elastic.co/&#34;&gt;ELK /Elastic Stack&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I’m a big fan of this not only because it’s essentially free, but because it’s so extremely flexible and has so many existing projects built around it. I’ve moved my go-to for net flow collection from nfdump to Elastic Stack built around the &lt;a href=&#34;https://www.manitonetworks.com/about-flow-analyzer/&#34;&gt;Manito Networks flowanalyzer&lt;/a&gt; install.   This platform takes a bit more command line jockeying and isn’t entirely turnkey, but it’s crazy flexible, had great eye candy and building the visualizations and dashboards is easy. Notable mention is &lt;a href=&#34;https://github.com/robcowart/elastiflow&#34;&gt;Elastiflow&lt;/a&gt;, which is similar but has a bit more eye candy and leverages log stash. Elastiflow doesn’t have nearly as turnkey of an install (and really has almost no “newbie” install instructions at all - but it’s a strong offering if you already know how to spin up an ELK stack and tune it.&lt;/p&gt;

&lt;h2 id=&#34;nfdump-http-nfdump-sourceforge-net&#34;&gt;&lt;a href=&#34;http://nfdump.sourceforge.net/&#34;&gt;Nfdump&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The venerable nfdump. This is what so many large networks were using (and probably still are) for their raw flow collections. This package scales exceptionally well to huge networks and has so many tools available for the CLI that it’s the de facto standard for raw flow analytics and forensics. I love this system and ran it for many, many, MANY years. It takes a but of time to learn, and may not be the right tool for you if you want a modern GUI, lots of eye candy, or are inexperienced with the UNIX/LINIX command line, but it’s got it where it counts, supports IPFix, Netflow v5, v9 and IPFIX and you can’t dog wrong with it. I have a handy how-to getting it up and running Under CentOS &lt;a href=&#34;https://www.forwardingplane.net/2014/01/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/&#34;&gt;here&lt;/a&gt;. When you couple this with something like &lt;a href=&#34;https://github.com/JustinAzoff/flow-indexer&#34;&gt;Justin Azoff’s flow indexer&lt;/a&gt; and &lt;a href=&#34;https://sourceforge.net/projects/nfsen/&#34;&gt;nfsen&lt;/a&gt; on the front end, you’ve got an enviable power user setup ripe for both forensics, tactical work as well as baseline generation.&lt;/p&gt;

&lt;h2 id=&#34;solarwinds-https-www-solarwinds-com&#34;&gt;&lt;a href=&#34;https://www.solarwinds.com/&#34;&gt;SolarWinds&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Solarwinds Orion is the go-to for windows based monitoring. It’s not cheap, but if you’re running a windows based monitoring system, you’re likely an enterprise and have budget for it. I have been impressed with the visualizations of this system and like that it does all of the monitoring in one package - once installed I never have to see windows (and since I can’t efficiently support windows, that’s probably a good thing - someone else will handle the OS work). The price tag can be a bit steep depending on number of nodes monitored, but it does what it claims and commercial support is decent. My one complaint is that I can’t seem to find a way to do raw data queries in a straightforward way. This may be possible and I have just not had the time or mental power to workout out. Overall it’s a worthy monitoring platform if you need your system to run on windows and can afford it. There are some older but still good videos from several Network Field Day events &lt;a href=&#34;http://techfieldday.com/companies/solarwinds/&#34;&gt;here&lt;/a&gt; and I wrote about it from a UNIX users perspective &lt;a href=&#34;https://www.forwardingplane.net/2015/07/solarwinds-orion-from-a-unix-user-point-of-view/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;live-action-networks-live-ux-https-www-liveaction-com-products-live-ux&#34;&gt;&lt;a href=&#34;https://www.liveaction.com/products/live-ux/&#34;&gt;Live Action Networks Live UX&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Another commercial option that has good support and a lot of eye candy. This was born out of work with the US Government and is a really interesting system. I’ve met with these guys several times and their team is super open to taking and feature requests and they have a good product. I first heard about them at &lt;a href=&#34;http://techfieldday.com/appearance/liveaction-presents-at-networking-field-day-7/&#34;&gt;Network Field day 7&lt;/a&gt;, their product was intriguing there and they’ve come a long way since then. Worth looking at for a turnkey solution for things like network analytics, IP-SLA,&lt;/p&gt;

&lt;h2 id=&#34;my-take&#34;&gt;My take&lt;/h2&gt;

&lt;p&gt;I like the power that an indexed set of data provides and I am willing and capable of plowing through the install of a linux based system. I’m also frugal, and for a product to really warrant my money it needs to do something that nothing else does [translated: I am willing and able to support open source solutions].&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/12/Screenshot-2017-12-15-20.32.57.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;That said, the Manito Networks install of Elk + Kibana (no logstash in this default install) is where I typically land due to the fact that I can get indexed flow data, nice, configurable graphs and trending statistics, and can integrate things like syslog into another index on the same system giving me the tools to do forensics on a number of topics on that system. &lt;a href=&#34;https://gitlab.com/thart/flowanalyzer/blob/master/Install/README.md&#34;&gt;The setup is crazy easy&lt;/a&gt; and really well documented, too. Someone linux-inclined can have it up and collecting flow data (sflow, netflow v5/9 or IPFIX) in an order of about 30 minutes - probably less. The take aways really, though, is that there are options available no matter your skill level or budget, so there is really no reason not to have something.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating an internal span port inside proxmox OVS</title>
      <link>https://forwardingplane.net/post/creating-internal-span-port-inside-proxmox-ovs/</link>
      <pubDate>Tue, 21 Mar 2017 03:49:58 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/creating-internal-span-port-inside-proxmox-ovs/</guid>
      <description>&lt;p&gt;In the last few years I have moved all of my virtualization to &lt;a href=&#34;https://www.proxmox.com/en/&#34;&gt;proxmox&lt;/a&gt; and docker. Seeing as I like to look at packets because I am a closet security guy, and being as I have been working off-and-on on a security project in recent times, I wanted to be able to span a port not only from a hardware switch, but also within my software switches. I had been using linux bridge, which I am not a fan of, so when I started down this path I did not look hard to find a way to do so under that platform. Instead I used it as an opportunity to move some of the internal bridges to &lt;a href=&#34;http://openvswitch.org/&#34;&gt;OpenVSwitch&lt;/a&gt;. I wanted to create an OVS span port internally. I had experience with OVS in the past for SDN work that I was doing, but I had never created a mirror port. I briefly thought about using OpenFlow to do it, but the unnecessary complexity was off putting. Instead I chose to create a simple mirror of a span port from my switch. So, traffic flow goes as such: &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/OVS-SPAN-1.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/OVS-SPAN-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;     This was fairly trivial, and I was seeing packets in no time. I&amp;rsquo;m not going to go through creating an OVS bridge in proxmox, there are lots of &lt;a href=&#34;https://pve.proxmox.com/wiki/Open_vSwitch&#34;&gt;documents&lt;/a&gt; on how to do that. Once you have your switch port SPAN up and running, and the physical interface in the OVS bridge, you essentially just need to add the following: Create the mirror```
ovs-vsctl &amp;ndash; &amp;ndash;id=@m create mirror name=span &amp;ndash; add bridge vmbr1 mirrors @m&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Find your ports that you want to mirror - you&#39;ll need the physical port if consuming from a real switch like I am, and the software port of the virtualized analyzer.  Remember, in OVS anything you want to mess with is going to have a UUID. You need to match the interfaces with the UUID to verify. ovs-vsctl list port \_uuid : 42dbd5a9-27c6-4f1b-958b-943f67b6801b bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[b155454d-db6e-4bb8-af88-7cd6b544c303\] lacp : \[\] mac : \[\] name : &#34;eth1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : 85c932b2-4f98-4650-8298-ae9e9ca72796 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[5219306f-96ec-440a-ac8b-d949ea18d752\] lacp : \[\] mac : \[\] name : &#34;vmbr1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : d53c7323-517f-48a2-9235-4505e654d4b1 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[91d52d05-d881-4693-ab5c-fc64b5d87518\] lacp : \[\] mac : \[\] name : &#34;veth100i9&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] In red we have the interfaces I want to to use. the veth interface is the software port on the VM. Eth1 is the hardware interfce that my switch is spanning traffic to. Pro tip: In OVS, the commands are a little unintuitive to me when talking about mirrors.  &#34;select\_src\_port&#34; and &#34;select\_dst\_port=&#34; is the destination of the traffic flow from an interface and not source and destination of the traffic you are mirroring from the point of view of the in and out ports. Confusing, right? For instance I can monitor the input from one interface and the output of another in the mirror. What we want is the input and output of the same interface to get both directions of traffic. This is not unlike how span ports are configured on your hardware switch, the nomenclature just threw me off.```&#34; data-lang=&#34;Find your ports that you want to mirror - you&#39;ll need the physical port if consuming from a real switch like I am, and the software port of the virtualized analyzer.  Remember, in OVS anything you want to mess with is going to have a UUID. You need to match the interfaces with the UUID to verify. ovs-vsctl list port \_uuid : 42dbd5a9-27c6-4f1b-958b-943f67b6801b bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[b155454d-db6e-4bb8-af88-7cd6b544c303\] lacp : \[\] mac : \[\] name : &#34;eth1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : 85c932b2-4f98-4650-8298-ae9e9ca72796 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[5219306f-96ec-440a-ac8b-d949ea18d752\] lacp : \[\] mac : \[\] name : &#34;vmbr1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : d53c7323-517f-48a2-9235-4505e654d4b1 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[91d52d05-d881-4693-ab5c-fc64b5d87518\] lacp : \[\] mac : \[\] name : &#34;veth100i9&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] In red we have the interfaces I want to to use. the veth interface is the software port on the VM. Eth1 is the hardware interfce that my switch is spanning traffic to. Pro tip: In OVS, the commands are a little unintuitive to me when talking about mirrors.  &#34;select\_src\_port&#34; and &#34;select\_dst\_port=&#34; is the destination of the traffic flow from an interface and not source and destination of the traffic you are mirroring from the point of view of the in and out ports. Confusing, right? For instance I can monitor the input from one interface and the output of another in the mirror. What we want is the input and output of the same interface to get both directions of traffic. This is not unlike how span ports are configured on your hardware switch, the nomenclature just threw me off.```&#34;&gt;ovs-vsctl set mirror span select\_src\_port=@eth1 select\_dst\_port=@eth1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also do this with the UUID```
ovs-vsctl set mirror span select_src_port=42dbd5a9-27c6-4f1b-958b-943f67b6801b select_dst_port=42dbd5a9-27c6-4f1b-958b-943f67b6801b&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now that we have the source of our mirror we just need to send it somewhere. I wanted mine to go to an internal host running some analytics software (on interface veth100i9)```&#34; data-lang=&#34;Now that we have the source of our mirror we just need to send it somewhere. I wanted mine to go to an internal host running some analytics software (on interface veth100i9)```&#34;&gt;ovs-vsctl -- --id=@veth100i9 get port veth100i9 -- set mirror span output-port=@veth100i9&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;rsquo;s it. Log into your host and do a tcpdump on whatever interface is mapped to veth100i9 and you should see packets flowing. A few tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Verify your span from the hardware switch is working before diving into the software stack.&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re doing this is proxmox, be aware that proxmox networking stack can be unforgiving when you much around outside of their environment.&lt;/li&gt;
&lt;li&gt;This will not persist across reboots. Add it to /etc/network/interfaces manually to keep it after a restart.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Brocade Vyatta Install and OpenFlow 1.3 on ICX 7450</title>
      <link>https://forwardingplane.net/post/brocade-vyatta-install-and-openflow-1-3-on-icx-7450/</link>
      <pubDate>Sat, 20 Jun 2015 16:06:03 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/brocade-vyatta-install-and-openflow-1-3-on-icx-7450/</guid>
      <description>

&lt;p&gt;I recently had a need to test OpenFlow on the brocade ICX 7450 for a fairly good sized, high visibility &lt;a href=&#34;http://scinet.supercomputing.org&#34;&gt;project&lt;/a&gt;. The basic goal is pretty simple, Layer2 path provisioning. Straightforward and fairly well supported in OpenFlow, even from the early days. To do this, the idea was to use a turnkey platform, that way there is one throat to choke if there are issues. I landed on the &lt;a href=&#34;http://www1.brocade.com/forms/jsp/vyatta-controller/download.jsp&#34;&gt;Brocade Vyatta controller&lt;/a&gt; (which is essentially ODL), and the ICX. Below is a rough account of getting this up and working to the point of testing. For the purposes of this I used BVC 1.3 and an ICX 7450. The docs for the BVC are actually pretty good if you read them. I found the google searching for the docs led to &lt;sup&gt;9&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt; links to brocade being 404 errors. My guess is that they restructured their site and did not alias anything. Minor frustration since my guess is that most folks search using a search engine rather than going to the site and searching from there. The link to the configuration guide I used for the ICX is &lt;a href=&#34;http://www.brocade.com/content/brocade/en/backend-content/pdf-page.html?/content/dam/common/documents/content-types/configuration-guide/fastiron-08030-sdnguide.pdf&#34;&gt;here&lt;/a&gt;. Once I grabbed the software, which requires registration, I went on to try to build this on CentOS 6.6. After some hurdles that I didn&amp;rsquo;t expect, I went and actually read the doc for BVC and found that ubuntu is a requirement. Another minor annoyance, but surmountable pretty easily. Enterprise customers are probably not going to want to have a one-off from RHEL/CentOS even if I don&amp;rsquo;t have a strong preference either way. Now that the VM is up and running with just over the minimum requirements, time to log in and get to work. This is assuming you have the code actually on the server already.```
apt-get install -y unzip curl wget python-pip&lt;br /&gt;
curl -sL &lt;a href=&#34;https://deb.nodesource.com/setup&#34;&gt;https://deb.nodesource.com/setup&lt;/a&gt; | sudo bash -
sudo apt-get install -y nodejs
unzip -o bvc-1.3.0.zip -d /opt
unzip -o bvc-dependencies-1.3.0.zip -d /opt
unzip -o bvc-app-pathexplorer-packaging-1.2.0.zip -d /opt
cd /opt/bvc
./install&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The output should look something like this```&#34; data-lang=&#34;The output should look something like this```&#34;&gt; root@bvc:/opt/bvc# ./install
 Brocade Vyatta Controller Installation

 Starting @ : 2015-06-17 15:31:15.564202

 Performing prerequisite check ...
 JDK Check ................................ \[ OK \]
 CPU Count Check: ......................... \[ OK \]
 Memory Size Check: ....................... \[ OK \]

 Running pre-install scripts ...

 Unpacking archives ....................... \[ OK \]

 Setting up karaf container ............... \[ OK \]

 Running controller pre-install scripts ...

 Configuring base features ................ \[ OK \]
 Start controller ......................... \[ OK \]
 Waiting for base initialization .......... \[ OK \]

 Configuring all features ................. \[ OK \]
 Adding Repositories ...................... \[ OK \]
 Adding Features .......................... \[ OK \]

 Running controller post install scripts ...

 Running install scripts ...


 Stopping NODEJS server 9000 .............. \[ OK \]
 Starting NODEJS server  .................. \[ OK \]
   Server @ http://10.42.44.20:9000/

 Install completed @ :  2015-06-17 15:32:26.464365&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Monitoring the connection to the controller from the controller can be accomplished by using the included tool: /opt/bvc/bin/taillog which operates just like you think, by tailing a log file. Checking for capability can be pretty easily accomplished by looking at the restconf modules:```
http://&lt;IP address&gt;:8181/restconf/modules&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now, for the ICX, I was under the impression that OpenFlow was in the base code. This is a true statement, however, I made a bad assumption that it was in _all_ code for that platform. Not so. After banging around and reading release notes as well as contacting my SE, I found that the code that it shipped with did _not_ support openflow, so I would need to upgrade it. _The ICX 7450 (and probably others) requires at least Version 08.0.30aa for OpenFlow support. Earlier versions will be lacking in the entire command hierarchy, even for older versions of OpenFlow._ **Brocade ICX 7450 configuration** From the console:```&#34; data-lang=&#34;Now, for the ICX, I was under the impression that OpenFlow was in the base code. This is a true statement, however, I made a bad assumption that it was in _all_ code for that platform. Not so. After banging around and reading release notes as well as contacting my SE, I found that the code that it shipped with did _not_ support openflow, so I would need to upgrade it. _The ICX 7450 (and probably others) requires at least Version 08.0.30aa for OpenFlow support. Earlier versions will be lacking in the entire command hierarchy, even for older versions of OpenFlow._ **Brocade ICX 7450 configuration** From the console:```&#34;&gt;ip address 10.42.44.30 255.255.255.224
no ip dhcp-client enable
ip default-gateway 10.42.44.1
ip dns server-address 10.42.2.2
clock timezone us central
clock summer-time
logging host 10.42.44.7
logging enable user-login
logging enable config-changed
ntp 
server 10.42.2.2

interface ethernet 1/1/1 
port-name port1

crypto key generate rsa modulus 2048
ip ssh  authentication-retries 5
ip ssh timeout 120 
ip ssh key-authentication yes
username buraglio enable
username buraglio privilege 0
username buraglio password brocade

openflow enable ofv130 
openflow controller 10.42.44.20
system-max openflow-flow-entries 3072&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thoughts: OpenFlow wants to use SSL by default. When configuring this it failed in a way that is not intuitive &lt;em&gt;at all&lt;/em&gt;. To get it running quickly, you need to disable SSL, which I absolutely &lt;em&gt;do not&lt;/em&gt; recommended for anything production). If you see anything other than this, the OpenFlow connection isn&amp;rsquo;t working```
SSH@icx-of-test#sh openflow controller
Openflow controller information&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;controller-mode-tcp-ssl-ip-address-port-status&#34;&gt;Controller   Mode      TCP/SSL   IP-address        Port   Status&lt;/h2&gt;

&lt;p&gt;1  (Equal)   active    TCP       10.42.44.20     6653   OPENFLOW_ESTABLISHED&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-This command will make it talk to the BVC over unencrypted TCP:```&#34; data-lang=&#34;This command will make it talk to the BVC over unencrypted TCP:```&#34;&gt;openflow controller ip-address 10.42.44.20 no-ssl port 6653 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make this work over SSL requires pulling the certificates into the device from the controller. I am still working on this for consideration in a production environment. Path explorer has most of the interesting bits in it. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/06/BVC-4.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/06/BVC-4.png&#34; alt=&#34;BVC-4&#34; /&gt;&lt;/a&gt; Other handy commands:```
SSH@icx-of-test#sh openflow inter
  interface     Show interfaces where OpenFlow is enabled
  &lt;cr&gt;
SSH@icx-of-test#sh openflow interface&lt;/p&gt;

&lt;p&gt;Total number of Openflow interfaces: 2&lt;/p&gt;

&lt;p&gt;Port   Link   Speed Tag MAC            OF-portid   Name           Mode
1/1/1  Up     1G    No  cc4e.248b.4570 1           port1          Hybrid-Layer23
1/1/48 Down   None  No  cc4e.248b.459f 48          port48         Hybrid-Layer23&lt;/p&gt;

&lt;p&gt;```The topology explorer is pretty cool, lots of eye candy. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/06/BVC-1.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/06/BVC-1.png&#34; alt=&#34;BVC-1&#34; /&gt;&lt;/a&gt; Random Thoughts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Restarting the BVC causes the topology to need to rebuild, as one would expect. The ICX took longer to show up in the controller than I expected. In fact, it never recovered until I intervened manually.&lt;/li&gt;
&lt;li&gt;The Brocade ICX randomly rebooted while attempting to scp the bootloader code. I never figured out why.&lt;/li&gt;
&lt;li&gt;The ICX stopped responding to SSH for some reason. The only way I could recover it was to reboot. Concerning from a management standpoint, but I suspect it was an anomaly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next post I&amp;rsquo;ll explore the actual provisioning and the SSL configuration.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Monitoring VMware ESXi with SNMP and Cacti</title>
      <link>https://forwardingplane.net/post/monitoring-vmware-esxi-with-snmp-and-cacti/</link>
      <pubDate>Mon, 19 Jan 2015 10:02:10 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/monitoring-vmware-esxi-with-snmp-and-cacti/</guid>
      <description>&lt;p&gt;VMWare is a powerful tool, and monitoring is a critical service. How does one monitor such an integral piece of infrastructure, and what do they monitor it with? There are powerful commercial ways of monitoring &lt;a href=&#34;http://www.vmware.com/&#34;&gt;VMware&lt;/a&gt;, however, for those with existing &lt;a href=&#34;http://en.wikipedia.org/wiki/Simple_Network_Management_Protocol&#34;&gt;SNMP&lt;/a&gt; based systems in place, specifically &lt;a href=&#34;http://www.cacti.net/&#34;&gt;cacti&lt;/a&gt;, there are options. To that end, I&amp;rsquo;ll set aside my strong distaste for SNMP [yet again], because those are for a larger, less useful series of posts.&lt;/p&gt;

&lt;p&gt;Luckily for those of us that need it there exists in that vast wilderness we call the internet, a user contributed &lt;a href=&#34;http://www.cacti.net/&#34;&gt;cacti&lt;/a&gt; template for monitoring basic functionality with SNMP and cacti and it is available &lt;a href=&#34;http://forums.cacti.net/download/file.php?id=29171&amp;amp;sid=888e5451bc68b1c05a5b7dec6667afd2&#34;&gt;here&lt;/a&gt;, and with the full thread being worth a read &lt;a href=&#34;http://forums.cacti.net/viewtopic.php?f=12&amp;amp;t=52122&#34;&gt;here&lt;/a&gt;. Since VMWare ESXi doesn&amp;rsquo;t have SNMP enabled (or really exposed from what I can tell), you have to do some CLI jockeying to make it work. Full disclosure, I&amp;rsquo;m not a vmware expert by any stretch of the imagination, but I have been hacking at it for a few years because it is low overhead to use comparatively speaking, offers a free version for my lab, makes a nice contrast to my KVM system and is widely deployed, so I want to understand it. Your mileage may vary with what I&amp;rsquo;ve got here.&lt;/p&gt;

&lt;p&gt;Enabling ssh is beyond the scope of this post but details can be found &lt;a href=&#34;http://www.thomasmaurer.ch/2014/01/enable-ssh-on-vmware-esxi-5-5/&#34;&gt;here&lt;/a&gt;. It&amp;rsquo;s fairly straightforward.&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&#34; alt=&#34;vmware-snmp-device&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Details of enabling SNMP for vmware 5.5 can be found &lt;a href=&#34;https://pubs.vmware.com/vsphere-51/index.jsp#com.vmware.vsphere.monitoring.doc/GUID-0EB48A32-34B0-4003-B2D0-ADE3BAFD29F0.html&#34;&gt;here&lt;/a&gt;, essentially one simply needs to run the following commands from within an ssh session:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;esxcli  system snmp set --communities &amp;lt;community&amp;gt;
esxcli system snmp set --port 161
esxcli system snmp set --enable true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Getting the cacti scripts in place is a little more involved, but it&amp;rsquo;s still pretty simple. Using the importer just add the new template. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.09.09.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.09.09.png&#34; alt=&#34;Screenshot 2015-01-10 10.09.09&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; Once that is imported you&amp;rsquo;ll need to move some scripts into place within the cacti system as below (adjust your paths as needed; I moved them directly from my workstation into place)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;scp ss\_esxi\_vhosts.php netmon:/var/lib/cacti/scripts/
scp cacte\_esxi\_template/resource/snmp\_queries/\* netmon:/usr/share/cacti/resource/snmp\_queries/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[](&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.10.43.png)[![](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png)](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&#34;&gt;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.10.43.png)[![](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png)](http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-snmp-device.png&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;[](&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.13.33.png&#34;&gt;http://www.forwardingplane.net/wp-content/uploads/2015/01/Screenshot-2015-01-10-10.13.33.png&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Then adjust the template being used for your ESXi server or add it as a new host if it was not there already. The new template should show up in the list.&lt;/p&gt;

&lt;p&gt;Once complete the cacti server should start graphing and checking uptime, etc. IF it does not, make sure the scripts are in place and have the correct permissions. It&amp;rsquo;s also useful (although not required) to add the additional parameters to the host.&lt;/p&gt;

&lt;p&gt;Once complete, the cacti system should be able to baseline (and alert if so desited, using thresholds) on any of the newly added variables, including number of VMs, number of VMs using vmware tools, number of VMs running, disk space, processes, network traffic, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2015/01/vmware-create-graphs.png&#34; alt=&#34;vmware-create-graphs&#34; /&gt;  &lt;/p&gt;

&lt;p&gt;I have yet to be able to get successful CPU graphs, but I suspect it is user error on my part and I&amp;rsquo;ve not investigated yet. Overall, I&amp;rsquo;d call it a pretty bigwin for anyone that has an existing cacti installation and wants to include their vmware system(s). It should also be said that the readme that accompanies the template is relatively useful.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4Neteng 4: POODLE and SSLv3, scanning and updating</title>
      <link>https://forwardingplane.net/post/nix4neteng-4-poodle-and-sslv3-scanning-and-updating/</link>
      <pubDate>Wed, 15 Oct 2014 17:36:54 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-4-poodle-and-sslv3-scanning-and-updating/</guid>
      <description>&lt;p&gt;With the recent release of the &lt;a href=&#34;https://www.openssl.org/~bodo/ssl-poodle.pdf&#34;&gt;POODLE SSLv3 vulnerability&lt;/a&gt;, folks are scrambling around trying to figure out what runs what and where.  Running a handful of things that do SSL, I was obligated, both personally and professionally, to figure out an easy way to drill down and figure out what does what and then fix the vulnerable services.  When there are a lot of devices, this can seem like a daunting task, and it is if you&amp;rsquo;re trying to do it manually.  This is where &lt;a href=&#34;http://nmap.org/&#34;&gt;NMAP&lt;/a&gt; comes into play.  NMAP is an extremely powerful tool for scanning and enumerating your own network, not just a tool for the script kiddies to port scan. Since there is no SSL patch at the time of this writing, and since SSLv3 is old and depricated, it is a good idea to see what services support it and then squish them in favor of TLS 1+.  Thankfully, smarter folks than myself have done most of the legwork for accomplishing this task and written most of it down &lt;a href=&#34;http://nmap.org/nsedoc/scripts/ssl-enum-ciphers.html&#34;&gt;here&lt;/a&gt;. NMAP has a wealth of cool scripts and bolt ons that extend it in amazing ways.  To accomplish our tasks we&amp;rsquo;ll ned to do a few things. Install nmap. I ran into issues with the &lt;a href=&#34;http://nmap.org/book/nse-library.html&#34;&gt;nselibs&lt;/a&gt; being incomplete, so I grabbed the source and built it that way as opposed to using yum.```
git clone git@github.com:nmap/nmap.git&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-We then need to build it from source which requires the dev tools:```&#34; data-lang=&#34;We then need to build it from source which requires the dev tools:```&#34;&gt;sudo yum -y groupinstall &amp;#39;Development Tools&amp;#39;
cd nmap
./configure
sudo make&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and alternatively```
sudo make install&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-I like to just run it from my directory since there are path considerations.```&#34; data-lang=&#34;I like to just run it from my directory since there are path considerations.```&#34;&gt;(~/nmap) v-chimera $ ./nmap --script ssl-enum-ciphers -p 443 10.14.14.0/27

Starting Nmap 6.46 ( http://nmap.org ) at 2014-10-15 12:21 CDT
Nmap scan report for gw.test (10.14.14.1)
Host is up (0.0028s latency).
PORT    STATE  SERVICE
443/tcp closed https

Nmap scan report for ssldevice.test (10.14.14.2)
Host is up (0.0042s latency).
PORT    STATE SERVICE
443/tcp open  https
| ssl-enum-ciphers:
|   SSLv3:
|     ciphers:
|       TLS\_RSA\_WITH\_RC4\_128\_MD5 - strong
|       TLS\_RSA\_WITH\_RC4\_128\_SHA - strong
|     compressors:
|       NULL
|   TLSv1.0:
|     ciphers:
|       TLS\_RSA\_WITH\_RC4\_128\_MD5 - strong
|       TLS\_RSA\_WITH\_RC4\_128\_SHA - strong
|     compressors:
|       NULL
|\_  least strength: strong

Nmap scan report for nossl.test (10.14.14.3)
Host is up (0.00049s latency).
PORT    STATE  SERVICE
443/tcp closed https&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From here we can see that there is a host that needs to be updated. There are a wealth of docs out there for changing out the supported version. Most of my stuff is apache so I used &lt;a href=&#34;https://zmap.io/sslv3/&#34;&gt;this guide&lt;/a&gt;. For embedded devices, the best option is to filter access [which you should probably be doing anyway] until there is a patched firmware version.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sonrancid: A [very] basic RANCID module for sonicwall</title>
      <link>https://forwardingplane.net/post/sonrancid-a-very-basic-rancid-module-for-sonicwall/</link>
      <pubDate>Mon, 15 Sep 2014 09:05:13 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonrancid-a-very-basic-rancid-module-for-sonicwall/</guid>
      <description>&lt;p&gt;I know, I know, I&amp;rsquo;m always saying that you don&amp;rsquo;t need a firewall. That&amp;rsquo;s mostly to get your attention to push my agenda of sane security architecture, I do actually believe that firewalls are appropriate in a great many use cases and I&amp;rsquo;ve managed them big and small ranging from &lt;a href=&#34;http://www.forwardingplane.net/2010/08/juniper-srx-cluster/&#34; title=&#34;Juniper SRX Cluster&#34;&gt;Juniper SRX 5800 clusters&lt;/a&gt; to tiny purpose built BSD distros on custom hardware. I even managed &lt;a href=&#34;http://www.checkpoint.com/&#34;&gt;Checkpoint&lt;/a&gt; and &lt;a href=&#34;http://www.kulichki.com/moshkow/SECURITY/gauntlet.txt&#34;&gt;gauntlet firewall&lt;/a&gt; back in the 1990s. And &lt;a href=&#34;https://www.novell.com/products/bordermanager/&#34;&gt;Novell Border manager&lt;/a&gt;&amp;hellip;.good gravy&amp;hellip;.border manager. I just had a chill, that thing is still around.  They work well when spec&amp;rsquo;d, designed, maintained correctly and placed in an appropriate location in a network architecture.  That said, I have a few SonicWall devices that I work on occasionally and it has always irritated me that there was not a usable &lt;a href=&#34;http://www.shrubbery.net/rancid/&#34;&gt;RANCID&lt;/a&gt; module for it.  To that end, I hacked up the Cisco RANCID script to support very rudimentary config backups. &lt;em&gt;&lt;Insert comment about having some DevOps skills is useful, even if they are very basic like mine.&gt;&lt;/em&gt; The script will log in and pull the config and version using the following commands:&lt;code&gt;
show current-config
&lt;/code&gt;&lt;code&gt;
show version
&lt;/code&gt;I am really hoping that someone else will pick it up and massage it a bit because it is very chatty and will produce a diff every time due to the way SonicOS presents some of its configuration parameters. It also needs tested against larger SonicWall devices as I only have smaller boxes to run against.  I know it works against a TZ210, YMMV. Please post comments on github if you use it with anything else.   The password hash is particularly annoying, it always changes when the configuration is displayed. Some of the framework is there to remove it so I may hack at it a bit more but it&amp;rsquo;s usable in the loosest sense for the short term.  It&amp;rsquo;s available on &lt;a href=&#34;https://github.com/buraglio/sonrancid&#34;&gt;my github site&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 3: IP Addressing and Subnet Tools</title>
      <link>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</link>
      <pubDate>Sat, 26 Jul 2014 16:46:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-3-ip-addressing-and-subnet-tools/</guid>
      <description>&lt;p&gt;IP addressing and subnetting is a common interview subject. I assert that memorizing these things is useful for learning the concepts but ultimately futile in that it is time consuming and inefficient use of engineering time when tools can be utilized to accomplish the same goals in less time with fewer errors. Honestly, I gave up doing this kind of work manually around 10 years ago and have never regretted it, and in actuality, I&amp;rsquo;d probably struggle to do it at this point because it&amp;rsquo;s a repetitive process better suited by code. In the old days, subnetting IPv4 manually was a badge of honor (and one that I always hated), but I learned it because I needed to know it for cert tests and daily work. However, once I started doing IPv6 around 2001, it became clear that doing this kind of thing by hand was consuming more time than it needed to. Enter UNIX tools. HEX Hex isn&amp;rsquo;t really a tool as much as it&amp;rsquo;s a hack for your shell.  Remember the &lt;a href=&#34;http://www.forwardingplane.net/2014/04/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/&#34; title=&#34;NIX4NetEng #1 Managing dotfiles; pwn the unspoken pain of UNIX administration&#34;&gt;post on dotfiles&lt;/a&gt;? This is something that can go right into your .bashrc and allows for the quick and easy translation of decimal to hexidecimal, which is very useful for IPv6 dual stacking because [in my opinion] the appropriate addressing scheme is to match the last octet based on hex and not numerically. So, to do that one needs to be able to easily convert the last octet quickly and easily.  Adding this to your .bashrc will accomplish this:```
alias hex=&amp;lsquo;printf &amp;ldquo;%x\n&amp;rdquo;&amp;rsquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34; data-lang=&#34;Now, if you have an address of 10.143.27.199, you take the .199 you can utilize the shell alias to convert it to the hex equivalent.  For example: If you&#39;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```&#34;&gt;(~) desktop $ hex 199
c7&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you&amp;rsquo;re using static addresses or dhcpv6 with static addressing, you can match the last octet properly.```
10.143.27.&lt;sup&gt;199&lt;/sup&gt;&amp;frasl;&lt;sub&gt;27&lt;/sub&gt;
2001:DB8:1b::c7/120&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34; data-lang=&#34;There are more than this, but these are the tools I use almost daily. I generally use [sipcalc](http://www.routemeister.net/projects/sipcalc/) at this point since it does what I used to use [ipcalc](http://jodies.de/ipcalc) for and more.  For gathering and verifying information, this is a fantastic tool.```&#34;&gt;(~) desktop $ sipcalc 2001:DB8:1b::c7/120
-\[ipv6 : 2001:DB8:1b::c7/120\] - 0
``````
\[IPV6 INFO\]
Expanded Address - 2001:0db8:001b:0000:0000:0000:0000:00c7
Compressed address - 2001:db8:1b::c7
Subnet prefix (masked) - 2001:db8:1b:0:0:0:0:0/120
Address ID (masked) - 0:0:0:0:0:0:0:c7/120
Prefix address - ffff:ffff:ffff:ffff:ffff:ffff:ffff:ff00
Prefix length - 120
Address type - Aggregatable Global Unicast Addresses
Network range - 2001:0db8:001b:0000:0000:0000:0000:0000 -
 2001:0db8:001b:0000:0000:0000:0000:00ff -&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for IPv4:&lt;code&gt;
(~) desktop $ sipcalc 10.143.27.199/27
-\[ipv4 : 10.143.27.199/27\] - 0
&lt;/code&gt;&lt;code&gt;
\[CIDR\]
Host address - 10.143.27.199
Host address (decimal) - 177150919
Host address (hex) - A8F1BC7
Network address - 10.143.27.192
Network mask - 255.255.255.224
Network mask (bits) - 27
Network mask (hex) - FFFFFFE0
Broadcast address - 10.143.27.223
Cisco wildcard - 0.0.0.31
Addresses in network - 32
Network range - 10.143.27.192 - 10.143.27.223
Usable range - 10.143.27.193 - 10.143.27.222
&lt;/code&gt;  Notable mention: Web tools are also useful and are becoming more prolific than the UNIX tools, but I will assume that you&amp;rsquo;re probably already loged into a UNIX system like a jump box or bastion host anyway and the tools are faster and thinner in that environment. That said, here are some useful web tools: &lt;a href=&#34;http://jodies.de/ipcalc&#34;&gt;ipcalc&lt;/a&gt; has the web interface to their tool. &lt;a href=&#34;http://www.gestioip.net/cgi-bin/subnet_calculator.cgi&#34;&gt;This site&lt;/a&gt; has a v4 and v6 calculator that works well and looks a lot like the output of sipcalc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 1 Managing dotfiles; pwn the unspoken pain of UNIX administration</title>
      <link>https://forwardingplane.net/post/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/</link>
      <pubDate>Thu, 01 May 2014 02:58:20 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-1-managing-dotfiles-pwn-the-unspoken-pain-of-unix-administration/</guid>
      <description>&lt;p&gt;Many network engineers are also tasked with maintaining systems that provide network services, those things that make the network easier to use such as DNS and DHCP or management systems that perform useful things like monitor the network, collect flow data or bestow access to the equipment by acting as &lt;a href=&#34;http://en.wikipedia.org/wiki/Bastion_host&#34;&gt;bastion&lt;/a&gt; or jump hosts.  In many instances, robust and high availability services run on UNIX, Linux or BSD systems for stability and reliability, so those that manage these systems need to be well versed system admins as well as whatever their other job functions are.  &lt;a href=&#34;http://packetpushers.net/are-certifications-tests-still-worth-your-resources-in-the-day-of-hybrid-it/&#34;&gt;Hybridization&lt;/a&gt;, if you will.  Nothing new, nothing unexpected.  However, one of the banes of these tasks is having a uniform shell environment across platforms and systems. Why create a customized environment with aliases, environmental variables and other personalized settings more than once? I have struggled with how to do this efficiently across desktop, server, jumphosts and other daily use systems for &lt;strong&gt;years&lt;/strong&gt;. Most of the important variables are controlled by dotfiles.   In what I am hoping is the start of a short series of &amp;ldquo;UNIX stuff for networking folks&amp;rdquo;, I will explain how I did this for myself. UNIX and Linux admins have been dealing with dotfiles forever. GitHub even has a &lt;a href=&#34;http://dotfiles.github.io/&#34;&gt;repo dedicated to&lt;/a&gt; it.  For my environment, I chose to go with &lt;a href=&#34;http://jim.github.io/briefcase/&#34;&gt;Briefcase&lt;/a&gt; and &lt;a href=&#34;http://www.bitbucket.com&#34;&gt;BitBucket&lt;/a&gt;.  Briefcase because it has mechanisms for stripping out sensitive information if needed and bitbucket because I can have private repos without paying money.  This can all certainly be done with local git repos or github and without briefcase. Briefcase is really straightforward to install, it&amp;rsquo;s just a ruby gem, so &lt;em&gt;gem install briefcase&lt;/em&gt; is all that is needed to get it on your machine&lt;em&gt;.&lt;/em&gt;  OSX has it by default.  On my machine I needed to to&lt;em&gt;sudo gem update —system&lt;/em&gt; before it would install.  Your mileage may vary&lt;em&gt;. &lt;/em&gt; Once it&amp;rsquo;s installed, just add your files.  I switched to bash, so I needed to import .bashrc and .bash_profile, but I wanted to make sure I had a backup just in case.```
mkdir -p tmp/dotfiles
mv .bashrc tmp/dotfiles/
mv .bash_profile tmp/dotfiles/&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;briefcase import ~/.bashrc
briefcase import ~/.bash\_profile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;briefcase git remote add origin git@repo.forwardingplane.net:buraglio/briefcase-dotfiles.git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;briefcase git commit -am &amp;quot;Initial newhost commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;briefcase git checkout origin master&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Obviously replace the remote repo address with your own repo destination.   You can now check the status:```&#34; data-lang=&#34;Obviously replace the remote repo address with your own repo destination.   You can now check the status:```&#34;&gt;briefcase sync&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should output something like this:```
Synchronizing dotfiles between /Users/buraglio/.dotfiles and /Users/buraglio
Symlink verified: /Users/buraglio/.bash_profile -&amp;gt; /Users/buraglio/.dotfiles/bash_profile
Symlink verified: /Users/buraglio/.bashrc -&amp;gt; /Users/buraglio/.dotfiles/bashrc
Symlink verified: /Users/buraglio/.profile -&amp;gt; /Users/buraglio/.dotfiles/profile
Symlink verified: /Users/buraglio/.README.md -&amp;gt; /Users/buraglio/.dotfiles/README.md&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Getting a new branch for an existing host was the biggest hurdle for me, I want a base .bashrc but may want different environment variables for mac and Linux.  I&#39;m not a git expert by any means, so there may be a better way to do this, but it works well for me. To branch a new host, it&#39;s pretty straightforward.  Briefcase is really just a wrapper for git, so prepending &#34;briefcase&#34; before the git commands seems to &#34;just work&#34; (as I learned by trial and error or making this work). On an existing Host:```&#34; data-lang=&#34;Getting a new branch for an existing host was the biggest hurdle for me, I want a base .bashrc but may want different environment variables for mac and Linux.  I&#39;m not a git expert by any means, so there may be a better way to do this, but it works well for me. To branch a new host, it&#39;s pretty straightforward.  Briefcase is really just a wrapper for git, so prepending &#34;briefcase&#34; before the git commands seems to &#34;just work&#34; (as I learned by trial and error or making this work). On an existing Host:```&#34;&gt;git clone git@your.repoaddress.net:username/reponame.git .dotfiles
mkdir -p tmp/dotfiles
mv .bashrc tmp/dotfiles/
mv .bash\_profile tmp/dotfiles/
briefcase sync
briefcase git branch \[newhost\]
briefcase git checkout \[newhost\]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;hellip;Make changes&amp;hellip;&lt;code&gt;
briefcase git commit -am &amp;quot;Initial newhost commit&amp;quot;
&lt;/code&gt;briefcase git push origin [newhost] There you have it, easily backed up and distributed environment control.  I&amp;rsquo;m planning to add &lt;a href=&#34;http://joeyh.name/code/etckeeper/&#34;&gt;etckeeper&lt;/a&gt; to this process next.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BGP tools; troubleshooting and monitoring external routing in a nutshell</title>
      <link>https://forwardingplane.net/post/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/</link>
      <pubDate>Fri, 21 Mar 2014 04:51:06 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/</guid>
      <description>&lt;p&gt;Time to rewind from the new and shiny and get back to roots of networking. &lt;a href=&#34;http://en.wikipedia.org/wiki/Border_Gateway_Protocol&#34;&gt;BGP&lt;/a&gt; is one of those odd protocols that is foundational to the functioning of the internet but yet somewhat hard to get experience with.  Say what you will about this venerable protocol, it&amp;rsquo;s been here a while and it is not going anywhere any time soon. I&amp;rsquo;ve been doing BGP since around late 1999, and I completely fell into it by accident, having only the Cisco &lt;a href=&#34;http://www.amazon.com/Internet-Routing-Architectures-2nd-Edition/dp/157870233X&#34;&gt;Internet Routing Architectures&lt;/a&gt; book (which I literally read cover to cover) and the &lt;a href=&#34;http://www.amazon.com/IP-Routing-Protocols-OSPF-Cisco/dp/0130142484/ref=la_B001HCXUMA_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1395373752&amp;amp;sr=1-1&#34;&gt;Ulysses Black Routing Protocols Book&lt;/a&gt;  and whatever I could find on a random search engine to guide me, and that was only after having to learn on the CLI for the first 6-7 months. In actuality, that is how many of the folks of my vintage came into doing BGP. Someone needed to announce some routes that were allocated to them by an &lt;a href=&#34;https://www.arin.net/knowledge/rirs.html&#34;&gt;RIR&lt;/a&gt;, or bring up some multi-homing or whatever.  Whoever knew how to work on the border device (or was willing to touch arguably the most important device on the network) got to learn how to do it. In 15 years of configuring, monitoring, tweaking, tuning and generally just maintaining BGP across service provider, research, enterprise networks and in labs and test environments, here are the tools I had to find to either put out fires, prevent blazing flames or prove that there is/was no fire. Lets assume that you already have all of the appropriate prefix lists, policy options and route maps in place to filter correctly. You&amp;rsquo;re doing that, right? If not, go do that and then come back to this. It will make your life easier in the long run. All eBGP peerings should have inbound and outbound filters on them. No exceptions. Yes, it can be a pain to maintain but when someone leaks you a full table when you&amp;rsquo;re expecting directly connected, you&amp;rsquo;ll be glad that they&amp;rsquo;re there. See below about automating the filters programatically. Now on to the fun stuff. Look at what the router is sending and receiving.  You know what you&amp;rsquo;re announcing, right? Under Cisco IOS the appropriate commands to display this information will look like this:```
show ip bgp neighbor  received-routes&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;show ip bgp neighbor  advertised-routes
```In JunOS it will look like this:```
show route rec protocol bgp &amp;lt;neighbor&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;show route adv protocol bgp &lt;neighbor&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-On an Alcatel-Lucent the command will look like this:```&#34; data-lang=&#34;On an Alcatel-Lucent the command will look like this:```&#34;&gt;show router bgp neighbor &amp;lt;neighbor&amp;gt; advertised-routes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Brocade has their methods too, it is &lt;em&gt;relatively&lt;/em&gt; similar to IOS. One important thing to note, JunOS requires no difference in the show command for IPv6. IOS and ALU has an additional command to display IPv6 information. IOS-XR may be different still, but I cannot confirm or recall since I have not used it since late 2012 (additions welcome in the comments).  For IPv6 on Cisco IOS and ALU respectively:```
show ipv6 bgp neighbors &lt;neighbor&gt; received-routes | advertised-routes&lt;/p&gt;

&lt;p&gt;show router bgp neighbor &lt;neighbor&gt; advertised-routes ipv6&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-This will provide a view from the street, it will display exactly what your router knows. [Route servers ](http://www.traceroute.org/#Route%20Servers)/ [Looking Glass](http://www.bgp4.as/looking-glasses) --This is your basic  external view. Log in and see what other ASNs know about your routes.  Critically important during those &#34;something is on fire&#34; times mentioned above.  They are maintained by a myriad of entities and positioned all over the globe. [BGPmon](http://www.bgpmon.org) --A project by [Andree Toonk](https://twitter.com/atoonk). Allows for the automatic discovery and monitoring of prefixes, alerting on many, many  attributes such as prefix hijacks.  Free and commercial plans available, but the commercial plans are far more feature rich and well worth it if you monitor large amounts og BGP. [Peermon](https://www.bgpmon.net/new-version-of-bgpmon-net/) --Part of the new and improved BGPmon.  Allows for the on-demand monitoring of prefixes within your network. Very useful for viewing as-path changes of destination networks for long term troubleshooting. [RouteViews](http://www.routeviews.org) -- Great project out of U of Oregon that was (is?) run by the groundbreaking [David Meyer](https://twitter.com/dmm613) of [OpenDaylight](http://www.opendaylight.org/) (and many other things) fame.  Peers with networks and records routing changes, allows for public query and has vast historical data. [bgplay](http://bgplay.routeviews.org/) - Great visualization tool for tracking routing, as-path and prefix announcement changes. This is part of the routeviews project and utilizes their vast historical data.  L=It currently acks IPv6 support and I;m unsure if it is maintained anymore. [Router Proxies](http://routerproxy.grnoc.iu.edu/internet2/) -- This has been a big thing int he R&amp;E world for quite some time.  Other entities may offer it, it&#39;s similar to a looking glass but more easily configured to allow or disallow different show commands.  The [code is open source](http://routerproxy.sourceforge.net/) and pretty easy to hack new commands into or adapt to new platforms (if I can do it anyone can). Lookup tools such as whois.  I find that looking uo ASNs and networks against the ARIN, RIPE and other RIRs is very handy as a starting point.  using CLI commands such as &#34;whois -h whois.arin.net 1224&#34; would display the following information:```&#34; data-lang=&#34;This will provide a view from the street, it will display exactly what your router knows. [Route servers ](http://www.traceroute.org/#Route%20Servers)/ [Looking Glass](http://www.bgp4.as/looking-glasses) --This is your basic  external view. Log in and see what other ASNs know about your routes.  Critically important during those &#34;something is on fire&#34; times mentioned above.  They are maintained by a myriad of entities and positioned all over the globe. [BGPmon](http://www.bgpmon.org) --A project by [Andree Toonk](https://twitter.com/atoonk). Allows for the automatic discovery and monitoring of prefixes, alerting on many, many  attributes such as prefix hijacks.  Free and commercial plans available, but the commercial plans are far more feature rich and well worth it if you monitor large amounts og BGP. [Peermon](https://www.bgpmon.net/new-version-of-bgpmon-net/) --Part of the new and improved BGPmon.  Allows for the on-demand monitoring of prefixes within your network. Very useful for viewing as-path changes of destination networks for long term troubleshooting. [RouteViews](http://www.routeviews.org) -- Great project out of U of Oregon that was (is?) run by the groundbreaking [David Meyer](https://twitter.com/dmm613) of [OpenDaylight](http://www.opendaylight.org/) (and many other things) fame.  Peers with networks and records routing changes, allows for public query and has vast historical data. [bgplay](http://bgplay.routeviews.org/) - Great visualization tool for tracking routing, as-path and prefix announcement changes. This is part of the routeviews project and utilizes their vast historical data.  L=It currently acks IPv6 support and I;m unsure if it is maintained anymore. [Router Proxies](http://routerproxy.grnoc.iu.edu/internet2/) -- This has been a big thing int he R&amp;E world for quite some time.  Other entities may offer it, it&#39;s similar to a looking glass but more easily configured to allow or disallow different show commands.  The [code is open source](http://routerproxy.sourceforge.net/) and pretty easy to hack new commands into or adapt to new platforms (if I can do it anyone can). Lookup tools such as whois.  I find that looking uo ASNs and networks against the ARIN, RIPE and other RIRs is very handy as a starting point.  using CLI commands such as &#34;whois -h whois.arin.net 1224&#34; would display the following information:```&#34;&gt;#
# The following results may also be obtained via:
# http://whois.arin.net/rest/asns;q=1224?showDetails=true&amp;amp;ext=netref2
#
``````
ASNumber: 1224
ASName: NCSA-AS
ASHandle: AS1224
RegDate: 1991-02-25
Updated: 1997-10-27
Ref: http://whois.arin.net/rest/asn/AS1224
``````
OrgName: National Center for Supercomputing Applications
OrgId: NCSA-3
Address: NCSA
Address: 1205 W. Clark St
City: Urbana
StateProv: IL
PostalCode: 61801
Country: US
RegDate: 1990-03-26
Updated: 2011-04-06
Ref: http://whois.arin.net/rest/org/NCSA-3
``````
OrgAbuseHandle: ND63-ORG-ARIN
OrgAbuseName: Network Development
OrgAbusePhone: +1-217-244-0714
OrgAbuseEmail: neteng @ ncsa.illinois.edu
OrgAbuseRef: http://whois.arin.net/rest/poc/ND63-ORG-ARIN
``````
OrgTechHandle: ND63-ORG-ARIN
OrgTechName: Network Development
OrgTechPhone: +1-217-244-0714
OrgTechEmail: neteng @ ncsa.illinois.edu
OrgTechRef: http://whois.arin.net/rest/poc/ND63-ORG-ARIN
``````
RTechHandle: ND63-ORG-ARIN
RTechName: Network Development
RTechPhone: +1-217-244-0714
RTechEmail: neteng @ ncsa.illinois.edu
RTechRef: http://whois.arin.net/rest/poc/ND63-ORG-ARIN
``````
#
# ARIN WHOIS data and services are subject to the Terms of Use
# available at: https://www.arin.net/whois\_tou.html
#&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Very handy for prefixes and ASNs.  There are also service like the &lt;a href=&#34;https://www.team-cymru.org/Services/ip-to-asn.html&#34;&gt;Team Cymru whois server&lt;/a&gt; that can display date/time based information for forensics and to provide IP to ASN mappings. Also very handy.  I believe this code is also open source. &lt;a href=&#34;http://irrtoolset.isc.org/&#34;&gt;IRR Toolset&lt;/a&gt;.  Extremely handy for automation of routing policy configuration.  I found it a tad painful to set up but it is a useful toolkit. Notable Mention: &lt;a href=&#34;https://ring.nlnog.net/&#34;&gt;NLNog RING&lt;/a&gt;.  &amp;ndash; This is a trust based unix host that provides a &lt;a href=&#34;https://ring.nlnog.net/toolbox/&#34;&gt;large variety of services&lt;/a&gt; to those that qualify for participation.  Very handy when looking for an on-net perspective. Notable Mention / Shameless Plug: &lt;a href=&#34;http://psps.perfsonar.net/toolkit/&#34;&gt;perfSonar toolkit&lt;/a&gt;.  In addition to thewell known performance testing tools, PS provides things like reverse traceroute and other handy networking widgets.  It also has a far lower barrier of entry than the NLNog RING.   There are obviously more ways to do this and there are possibly better ones, too.  This is how I&amp;rsquo;ve done it for a long time and it has mostly worked for me.  I had to learn most of this by trial and error so I thought it maybe useful to throw it all together into one place for future reference.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Replace ZFS RAIDZ1 disk</title>
      <link>https://forwardingplane.net/post/replace-zfs-raidz1-disk/</link>
      <pubDate>Tue, 11 Mar 2014 01:01:58 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/replace-zfs-raidz1-disk/</guid>
      <description>&lt;p&gt;I recently had the displeasure of dealing with a series of failed disks in my newly created ZFS based NAS.  I had cobbled together roughly 12TB of disk space and jammed them into an old PC, stretching the limits of the platform when I decided to go with ZFS.  I broke all of the rules, underpowered, single core PC, only a handful of GIG of non-ECC RAM, etc.  I&amp;rsquo;m sure storage guys are having a coronary after reading that, but it works for me and has minimal issues since I just relatively redundant need bulk storage and it doesn&amp;rsquo;t need to be fast (the ethernet connection is only 100M). Machine stats are as such: AMD Sempron&amp;trade; Processor 2800+ 2G NON-ECC memory The following disks:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/03/Screenshot-2014-03-10-13.49.35.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/03/Screenshot-2014-03-10-13.49.35-1024x280.png&#34; alt=&#34;Screenshot 2014-03-10 13.49.35&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The NAS was a long standing device on my network.  I&amp;rsquo;ve been using &lt;a href=&#34;http://www.nas4free.org/&#34;&gt;NAS4FREE&lt;/a&gt; for quite some time with fantastic results.  The disks are simply desktop drives, nothing fancy.  When I rebuilt it all using ZFS I found that I had not done 2 things.  I had not documented the warranty status of the devices and I had not enabled SMART monitoring.  I know, amateur hour at its finest; I&amp;rsquo;m OK with it, it&amp;rsquo;s just for home use and I have offsite storage for anything super important. *&lt;em&gt;As an aside, if you&amp;rsquo;re looking to build a NAS I would both recommend &lt;a href=&#34;http://www.nas4free.org/&#34;&gt;NAS4FREE&lt;/a&gt; as well as doing something as simple as documenting the warranty information of each disk in the description field.&lt;/em&gt; So, when I enabled SMART monitoring and email reporting. I found that several of my disks were failing their end-to-end tests when this started showing up in my inbox:  ```
The following warning/error was logged by the smartd daemon:
Device: /dev/ada1, Failed SMART usage Attribute: 184 End-to-End_Error.
Device info:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ST2000DM001-1CH164, S/N:xxxxxxxx, WWN:5-000c50-08147e2a4, FW:CC26, 2.00 TB
```  Bad news. However, with ZFS it is supposed to be fantastically easy to do disk replacements.  I had chosen RAIDZ1 for both volumes, so they could each supposedly sustain a single disk failure. There are a lot of online references for zfs. I used [this page](http://panoramicsolution.com/blog/?p=353) as a starting point for replacing my disk. I dropped to the shell on the NAS and did the following to identify the right disk to remove:```
nas:~# camcontrol devlist
&amp;lt;ST31000340AS SD15&amp;gt; at scbus0 target 0 lun 0 (ada0,pass0)
&amp;lt;ST2000DM001-1CH164 CC26&amp;gt; at scbus1 target 0 lun 0 (ada1,pass1)
&amp;lt;ST2000DM001-1CH164 CC24&amp;gt; at scbus2 target 0 lun 0 (ada2,pass2)
&amp;lt;ST2000DM001-1CH164 CC26&amp;gt; at scbus3 target 0 lun 0 (ada3,pass3)
&amp;lt;WDC WD20EARS-00MVWB0 51.0AB51&amp;gt; at scbus4 target 0 lun 0 (ada4,pass4)
&amp;lt;ST31500341AS CC1H&amp;gt; at scbus5 target 0 lun 0 (ada5,pass5)
&amp;lt;ST2000DM001-1CH164 CC29&amp;gt; at scbus6 target 0 lun 0 (ada6,pass6)
&amp;lt;ST31500341AS CC1H&amp;gt; at scbus7 target 0 lun 0 (ada7,pass7)
&amp;lt;ST2000DM001-9YN164 CC82&amp;gt; at scbus8 target 0 lun 0 (ada8,pass8)
&amp;lt;TOSHIBA THNCF512MPG 1.00&amp;gt; at scbus11 target 0 lun 0 (ada9,pass9)
```ada8 needs replaced.  The volume it exists in is zfs0.  The formula used is _&amp;quot;zpool &amp;lt;command&amp;gt; &amp;lt;pool&amp;gt; &amp;lt;device&amp;gt;&amp;quot;_```
zpool offline zfs0 ada8
```None of my stuff is hot swap, so I have to shut down the box.```
shutdown -h now
```Yank out the old disk and install the new one.```
zpool replace zfs0 ada8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;zpool online zfs0 ada8&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-After that you&#39;ll see the disk getting resilvered, which will take a while.```&#34; data-lang=&#34;After that you&#39;ll see the disk getting resilvered, which will take a while.```&#34;&gt;nas:~# zpool status zfs0
pool: zfs0
state: DEGRADED
status: One or more devices is currently being resilvered. The pool will
continue to function, possibly in a degraded state.
action: Wait for the resilver to complete.
scan: resilver in progress since Mon Mar 10 13:39:36 2014
105G scanned out of 3.37T at 75.4M/s, 12h36m to go
17.5G resilvered, 3.04% done
config:

NAME STATE READ WRITE CKSUM
zfs0 DEGRADED 0 0 0
raidz1-0 DEGRADED 0 0 0
ada1 ONLINE 0 0 0
ada2 ONLINE 0 0 0
ada3 ONLINE 0 0 0
ada4 ONLINE 0 0 0
ada6 ONLINE 0 0 0
replacing-5 OFFLINE 0 0 0
6070465578770542405 OFFLINE 0 0 0 was /dev/ada8/old
ada8 ONLINE 0 0 0 (resilvering)

errors: No known data errors&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the resilvering process you should have a repaired volume.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install nfsen and nfdump on CentOS 6.5 for netflow and or sflow collection</title>
      <link>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</link>
      <pubDate>Sat, 11 Jan 2014 21:55:24 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</guid>
      <description>

&lt;p&gt;I am an absolutely &lt;strong&gt;huge&lt;/strong&gt; fan of statistical and instrumentation data, especially when it comes to traffic analysis, visualization and baselining.  I&amp;rsquo;ve rambled on about the importance of it at &lt;a href=&#34;http://searchnetworking.techtarget.com/news/2240212051/The-Der-Spiegel-NSA-revelations-What-network-engineers-need-to-know&#34;&gt;every opportunity&lt;/a&gt;.  As a result of that, I have been doing work with netflow and netflow-like data for a fairly long time.  My first collector was the &lt;a href=&#34;http://www.splintered.net/sw/flow-tools/&#34;&gt;OSU Flow tools&lt;/a&gt; based stuff  back around 13 years ago.  From there I played with all kinds of netflow tools, both &lt;a href=&#34;http://www.arbornetworks.com/&#34;&gt;commercial&lt;/a&gt; and open source, finally settling most of my focus on &lt;a href=&#34;http://nfdump.sourceforge.net/&#34;&gt;nfdump&lt;/a&gt; and &lt;a href=&#34;http://nfsen.sourceforge.net/&#34;&gt;nfsen&lt;/a&gt;. A bit of history: nfdump was born out of a research network, requiring it to be able to consume huge amounts of flows efficiently.  This makes it very powerful and very useful for nearly anyone, from the small technology tinkerer to to the enterprise network engineer up through the service provider architect.  nfsen is really just a php wrapper for nfdump, however, the really nice thing about it (other then being free, opensource software) is that it is extendable via &lt;a href=&#34;http://sourceforge.net/apps/trac/nfsen-plugins/&#34;&gt;plugins&lt;/a&gt;.  This is really what makes it a serious player from all angles.     From botnet detection to displaying IP geo-data on a map, there is likely a plugin for it.  Not finding what you are looking for?  Write it!  The architecture to use it is already there and documented. For ease of install, I chose CentOS 6.5.  Once you have a system up and running, to get nfsen/nfdump working, here is what you need to do:```
yum install -y httpd php wget gcc make rrdtool-devel &lt;br /&gt;
rrdtool-perl perl-MailTools perl-Socket6 flex byacc&lt;/p&gt;

&lt;p&gt;vi /etc/selinux/config
set SELINUX=disabled
reboot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-You&#39;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)```&#34; data-lang=&#34;You&#39;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)```&#34;&gt;sudo iptables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT
sudo ipt6ables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also allow for access to the web server you just installed.```
sudo ip6tables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 443 -j ACCEPT
sudo ip6tables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 80 -j ACCEPT&lt;br /&gt;
sudo iptables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 443 -j ACCEPT
sudo iptables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 80 -j ACCEPT&lt;br /&gt;
service iptables save
service ip6tables save&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Once you enable https you can safely remove the table rules for port 80. Start HTTPd```&#34; data-lang=&#34;Once you enable https you can safely remove the table rules for port 80. Start HTTPd```&#34;&gt;sudo service httpd start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable HTTPd at boot```
chkconfig httpd on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)```&#34; data-lang=&#34;Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)```&#34;&gt;wget http://downloads.sourceforge.net/project/nfdump/stable/nfdump-1.6.11/nfdump-1.6.11.tar.gz
wget http://downloads.sourceforge.net/project/nfsen/stable/nfsen-1.3.6p1/nfsen-1.3.6p1.tar.gz
``````
tar -zxvf nfdump-1.6.11.tar.gz 
./configure --enable-nfprofile --enable-nftrack --enable-sflow 
make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default 1.6.11 enables v9 and ipfix =)```
adduser netflow
vi /etc/group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add user netflow to group apache```&#34; data-lang=&#34;Add user netflow to group apache```&#34;&gt;vi etc/nfsen.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;change www user to apache Add your host to the file to allow for collection, my %sources looks like this:```
%sources = (
    &amp;lsquo;home&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9995&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#0000ff&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },
    &amp;lsquo;internal&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#FF0000&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },&lt;/p&gt;

&lt;h1 id=&#34;gw-port-9995-col-0000ff-type-netflow&#34;&gt;&amp;lsquo;gw&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9995&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#0000ff&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },&lt;/h1&gt;

&lt;h1 id=&#34;peer1-port-9996-ip-172-16-17-18&#34;&gt;&amp;lsquo;peer1&amp;rsquo;        =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;IP&amp;rsquo; =&amp;gt; &amp;lsquo;172.16.17.18&amp;rsquo; },&lt;/h1&gt;

&lt;h1 id=&#34;peer2-port-9996-ip-172-16-17-19&#34;&gt;&amp;lsquo;peer2&amp;rsquo;        =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;IP&amp;rsquo; =&amp;gt; &amp;lsquo;172.16.17.19&amp;rsquo; },&lt;/h1&gt;

&lt;p&gt;);&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow```&#34; data-lang=&#34;As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow```&#34;&gt;./install.pl etc/nfsen.conf
cd /home/netflow/bin/
./nfsen start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it start at boot (referenced from &lt;a href=&#34;http://sourceforge.net/mailarchive/message.php?msg_id=29434166&#34;&gt;this post&lt;/a&gt;).```
vi /etc/init.d/nfsen&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add this into the file:```&#34; data-lang=&#34;Add this into the file:```&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;#
&lt;span style=&#34;color:#75715e&#34;&gt;# chkconfig: - 50 50&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# description: nfsen&lt;/span&gt;

DAEMON&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/home/netflow/bin/nfsen

&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
		start&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON start
		;;
		stop&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON stop
		;;
		status&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON status
		;;
		restart&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON stop
		sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		$DAEMON start
		;;
		&lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Usage: &lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt; {start|stop|status|restart}&amp;#34;&lt;/span&gt;
		exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then chkconfig it on to start it at boot:```
chmod 755 nfsen &amp;amp;&amp;amp; chkconfig &amp;ndash;add nfsen &amp;amp;&amp;amp; chkconfig nfsen on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-That&#39;s pretty much it. Once you configure your netflow or sflow source, you should start seeing data in ~5-10 minutes. Point your browser at your web server and see: Mine is set as https://netmon/nfsen/nfsen.php (you&#39;ll need to include the &#34;nfsen.php&#34; uness you edit your apache config to recognize &#34;nfsen.php&#34; as in index.&#34; data-lang=&#34;That&#39;s pretty much it. Once you configure your netflow or sflow source, you should start seeing data in ~5-10 minutes. Point your browser at your web server and see: Mine is set as https://netmon/nfsen/nfsen.php (you&#39;ll need to include the &#34;nfsen.php&#34; uness you edit your apache config to recognize &#34;nfsen.php&#34; as in index.&#34;&gt;[![&lt;span style=&#34;color:#a6e22e&#34;&gt;Screen&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Shot&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2014&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.13.53&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PM&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM-913x1024.png)](http://www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM.png)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Common&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issues&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;see&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;one&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;every&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: nfsend connect() error: Permission denied!&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;It&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;always&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;permissions&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issue&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;documented&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;here&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//code.google.com/p/nfsenplugins/wiki/NFSEN_Installation_Gotchas).  You need to make sure that the nfsen package can read the nfsen.comm socket file. I fixed mine by doing```
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;chmod&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rwx&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;netflow&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My nfsen.conf file is using /home/netflow as the $BASEDIR.```
 &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34; alt=&#34;Screenshot 2014-01-11 13.04.17&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-You&#39;ll likely see &#34;Frontend - Backend version mismatch!&#34;, this is a known issue. There is a patch to fix it [here](http://sourceforge.net/p/nfsen/bugs/43/), I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:```&#34; data-lang=&#34;You&#39;ll likely see &#34;Frontend - Backend version mismatch!&#34;, this is a known issue. There is a patch to fix it [here](http://sourceforge.net/p/nfsen/bugs/43/), I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:```&#34;&gt;vi /usr/local/etc/rmflowdata.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste this in:```
#!/bin/bash&lt;/p&gt;

&lt;h1 id=&#34;prune-flow-data&#34;&gt;prune flow data&lt;/h1&gt;

&lt;h1 id=&#34;usage&#34;&gt;Usage:&lt;/h1&gt;

&lt;h1 id=&#34;30-is-the-number-of-days-adjust-accordingly&#34;&gt;+30 is the number of days, adjust accordingly.&lt;/h1&gt;

&lt;p&gt;/bin/find /home/netflow/profiles-data/live -name &amp;ldquo;nfcapd.*&amp;rdquo; -type f -mtime +30 -delete&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add this to your crontab:```&#34; data-lang=&#34;Add this to your crontab:```&#34;&gt;@daily /usr/local/bin/rmflowdata.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it executable&lt;code&gt;
chmod 755 /usr/local/bin/rmflowdata.sh
&lt;/code&gt;There are probably more elegant ways to do it but this works just fine, is lightweight and can be run manually if needed. There are a lot of great use cases for this.  If you&amp;rsquo;re looking for an SDN tie-in, guess what, there is one.  &lt;a href=&#34;http://blog.sflow.com/2010/05/configuring-open-vswitch.html&#34;&gt;OpenVSwitch supports sflow export&lt;/a&gt; and low-and-behold, nfsen and nfdump can easily consume and display sflow data. Want flow statistics on your all VM, OVS based SDN lab?  Guess what, you can! There are some other great things you can do with flow data, too, specifically sflow.  It&amp;rsquo;s not just for network statistics, there is a host &lt;a href=&#34;http://host-sflow.sourceforge.net/&#34;&gt;based sflow implementation&lt;/a&gt; that track any number of interesting metrics.  &lt;a href=&#34;http://blog.sflow.com/&#34;&gt;blog.sflow.com&lt;/a&gt; is a great resource for all things sflow (also, it does IPv6 by default, as it should). Ok, now you have &lt;strong&gt;absolutely&lt;/strong&gt; no good reason not to be collecting flow data.   It&amp;rsquo;s easy, it&amp;rsquo;s useful and almost everything (hosts, routers, virtual switches) supports exporting &lt;strong&gt;&lt;em&gt;some&lt;/em&gt;&lt;/strong&gt; kind of flow information.  You can even generate it from an inline linux box or a box off of an optical tap or a span port running &lt;a href=&#34;https://code.google.com/p/softflowd/&#34;&gt;softflowd&lt;/a&gt; or &lt;a href=&#34;http://www.ntop.org/products/nprobe/&#34;&gt;nprobe&lt;/a&gt;.   Both of which I can confirm work wonderfully (the above collector is gathering flows from softflowd running on my &lt;a href=&#34;http://www.forwardingplane.net/2013/07/building-a-secured-network-in-a-box/&#34; title=&#34;Building a secured network in a box&#34;&gt;security onion box&lt;/a&gt; as well as exported flows from pfflowd on a &lt;a href=&#34;http://www.pfsense.org/&#34;&gt;pfsense&lt;/a&gt; router).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenvSwitch 2.0 Debian packages</title>
      <link>https://forwardingplane.net/post/openvswitch-2-0-debian-packages/</link>
      <pubDate>Fri, 29 Nov 2013 20:15:17 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/openvswitch-2-0-debian-packages/</guid>
      <description>&lt;p&gt;As part of a larger fun project I&amp;rsquo;m working on (OVS for the ALIX platform; more to come on that once I have it 100% working), I have been playing a lot with &lt;a href=&#34;http://openvswitch.org/&#34;&gt;OVS&lt;/a&gt;.  It&amp;rsquo;s a great platform, and &lt;a href=&#34;http://networkstatic.net/install-open-vswitch-v2-redhat-fedora-19/&#34;&gt;as others have mentioned&lt;/a&gt;, it&amp;rsquo;s as close to an SDN reference data plane implementation as we have.  I&amp;rsquo;d be surprised if many if not all commercial implementations of OpenFlow aren&amp;rsquo;t based on OVS.  Anyway, I wanted to build debian packages since I&amp;rsquo;d never done it before and thought it&amp;rsquo;d be fun.  I wanted to use OVS2 so that I can play with some of the newer features and specifically to see how well the IPv6 support is in 2.0 when paired with &lt;a href=&#34;http://www.opendaylight.org/&#34;&gt;OpenDaylight&lt;/a&gt;(more to come on this, too. I promise =). This proved to be more simple than I anticipated mostly due to lots of good documentation.  To accomplish it, I decided to start with a VM since I lie to work in virtualized environments for experimentation and lambing. I spun up a Debian 7 VM from scratch and began configuring it as I usually do with the inclusion of the tools necessary to build packages. _** I originally tried this from the git repo via _git clone git://openvswitch.org/openvswitch&lt;em&gt; but kept seeing weird errors so I moved to the 2.0.0 tarball.  &lt;/em&gt;```
apt-get -y install screen sudo vim etckeeper mlocate autoconf2.13 &lt;br /&gt;
libssl-dev graphviz python-all python-qt4 python-zopeinterface &lt;br /&gt;
python-twisted-conch tcpdump build-essential fakeroot debhelper &lt;br /&gt;
gdebi-core pkg-config&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Grab the OVS tarball```&#34; data-lang=&#34;Grab the OVS tarball```&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;wget&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//openvswitch.org/releases/openvswitch-2.0.0.tar.gz](http://openvswitch.org/releases/openvswitch-2.0.0.tar.gz)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;``````&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;mv&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;openvswitch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0.0&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;openvswitch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0.0&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;orig&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;tar&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;gz&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;``````&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;openvswitch&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0.0&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;``````&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;dpkg&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;buildpackage&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;
&lt;span style=&#34;color:#e6db74&#34;&gt;``````&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;cd&lt;/span&gt; ..&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install all of the packages ( # Answer Y to all prompts )```
gdebi openvswitch-datapath-source_2.0.0-1_all.deb&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-module-assistant auto-install openvswitch-datapath gdebi openvswitch-common\_2.0.0-1\_amd64.deb gdebi openvswitch-switch\_2.0.0-1\_amd64.deb&#34; data-lang=&#34;module-assistant auto-install openvswitch-datapath gdebi openvswitch-common\_2.0.0-1\_amd64.deb gdebi openvswitch-switch\_2.0.0-1\_amd64.deb&#34;&gt;You should now be able to check the version:  ```
buraglio@deb7ovs-vm:/home/buraglio# ovs-vsctl -V
ovs-vsctl (Open vSwitch) 2.0.0
Compiled Nov 29 2013 13:18:32&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check the OpenFlow versions supported:```
buraglio@deb7ovs-vm:/home/buraglio# ovs-ofctl -V
ovs-ofctl (Open vSwitch) 2.0.0
Compiled Nov 29 2013 13:18:32
OpenFlow versions 0x1:0x4&lt;/p&gt;

&lt;p&gt;```More to come on this.  For anyone that doesn&amp;rsquo;t want to build the .debs themselves, they&amp;rsquo;re available to download from &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/OVS2.0/&#34;&gt;here&lt;/a&gt;, no warranty implied or expressed =)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inline-jflow on MX series Juniper</title>
      <link>https://forwardingplane.net/post/inline-jflow-on-mx-series-juniper/</link>
      <pubDate>Sun, 01 Sep 2013 15:40:29 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/inline-jflow-on-mx-series-juniper/</guid>
      <description>&lt;p&gt;One of the things that I&amp;rsquo;ve always lamented about using non-Cisco hardware is the lack of true 1:1 &lt;a href=&#34;http://en.wikipedia.org/wiki/Netflow&#34;&gt;netflow&lt;/a&gt; support.  Say what you will about jflow, cflow, sflow&amp;hellip;.there is no substitute for netflow, with sflow being the exception to that since it is a protocol that inherently supports ipv6 and &lt;a href=&#34;http://www.forwardingplane.net/2012/10/host-based-sflow-or-sflow-for-more-than-just-network-traffic/&#34; title=&#34;Host based sflow, or, sflow for more than just network traffic&#34;&gt;can transport far more than simple network information&lt;/a&gt; if configured in certain ways on certain devices. On newer MX series Juniper routers the game has changed.  One to one flow data export (in IPFIX format) is now available, in hardware, for IPv4 and IPv6.  Queue the service providers rejoice.  Configuring this on the MX is a tad more involved than a Cisco, but it&amp;rsquo;s still pretty straightforward. In set commands:```
 buraglio@mx480&amp;gt; show configuration forwarding-options | display set
 set forwarding-options sampling traceoptions file ipfix.log
 set forwarding-options sampling traceoptions file size 10k
 set forwarding-options sampling instance 1to1 input rate 1
 set forwarding-options sampling instance 1to1 family inet output flow-server &lt;br /&gt;
 10.16.120.204 port 9995
 set forwarding-options sampling instance 1to1 family inet output flow-server &lt;br /&gt;
 10.16.120.204 version-ipfix template ipv4
 set forwarding-options sampling instance 1to1 family inet output \
 inline-jflow source-address 10.16.120.1
 set forwarding-options sampling instance 1to1 family inet6 output flow-server \
 10.16.120.204 port 9995
 set forwarding-options sampling instance 1to1 family inet6 output flow-server \
 10.16.120.204 version-ipfix template ipv6
 set forwarding-options sampling instance 1to1 family inet6 output inline-jflow \
 source-address 10.16.120.1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Once the forwarding-options are set the chassis hardware has to be told what it can do.  Lets say you want to configure the inline-jflow on interfaces that exist on fpc0 (MPC0):```&#34; data-lang=&#34;Once the forwarding-options are set the chassis hardware has to be told what it can do.  Lets say you want to configure the inline-jflow on interfaces that exist on fpc0 (MPC0):```&#34;&gt;buraglio@ur1rtr&amp;gt; show configuration chassis fpc 0 | display set
set chassis fpc 0 pic 0 tunnel-services bandwidth 1g
set chassis fpc 0 pic 1 tunnel-services bandwidth 1g
set chassis fpc 0 sampling-instance 1to1
set chassis fpc 0 inline-services flow-table-size ipv4-flow-table-size 5
set chassis fpc 0 inline-services flow-table-size ipv6-flow-table-size 5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice we&amp;rsquo;re referencing the sampling instance we created in the forwarding-options.  This tells the MPC (FPC) and MIC (PIC) that you want a traceoptions file (deactivate this after the setup is all working; I generaly keep a traceoptions section configured but deactivated in nearly every protocol for quick debugging.)  Enables the sampling instance we jut added to the forwarding options and sets the flow collector address and port.  It also sets the protocol as &lt;a href=&#34;http://en.wikipedia.org/wiki/IP_Flow_Information_Export&#34;&gt;IPFIX&lt;/a&gt; (Essentially netflow v9).  Now that we have the framework set up, we need to add the bits to the interface that tell it to sample the traffic```
buraglio@ur1rtr&amp;gt; show configuration interfaces xe-0/0/1 | display set
set interfaces xe-0/0/1 description &amp;ldquo;trib port 1&amp;rdquo;
set interfaces xe-0/0/1 flexible-vlan-tagging
set interfaces xe-0/0/1 encapsulation flexible-ethernet-services
set interfaces xe-0/0/1 unit 105 description &amp;ldquo;Trib peering #1&amp;rdquo;
set interfaces xe-0/0/1 unit 105 vlan-id 1005
set interfaces xe-0/0/1 unit 105 family inet mtu 9000
set interfaces xe-0/0/1 unit 105 family inet sampling input
set interfaces xe-0/0/1 unit 105 family inet address 10.17.120.&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;30&lt;/sub&gt;
set interfaces xe-0/0/1 unit 105 family inet6 mtu 9000
set interfaces xe-0/0/1 unit 105 family inet6 sampling input
set interfaces xe-0/0/1 unit 105 family inet6 address 2001:DB8:1:dead:beef::&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Point this at your favorite flow collector and reap the benefits of having flow data. As far as collectors there are a lot of options, I prefer [nfdump](http://nfdump.sourceforge.net/)/[nfsen](http://nfsen.sourceforge.net/) because it&#39;s FOSS, very flexible, has [plugins](http://sourceforge.net/apps/trac/nfsen-plugins/) and is well supported, but there are fantastic commercial options for every flavor.  I&#39;ve used the Arbor Peakflow and like it but it has a very expensive licensing model so it is generally deployed in larger environments.   I&#39;ve also heard good things about the [SolarWinds Netflow Analyzer](http://www.solarwinds.com/netflow-traffic-analyzer.aspx) but I&#39;ve never used it. Caveats: On the older ichip platform with the MS-DPC you can view the actual flows on the box itself using the command &amp;lt;command&amp;gt;  much like show cef on a cisco.  I cannot find a way to do that on in the inline-jflow configuration on the trio hardware. This was configured on JunOS 12.3R3.4 on MX480 hardware with MPC3/Trio hardware. I can&#39;t seem to get the IPv6 flow data from the flow records.  I suspect it&#39;s either not in there yet or I&#39;ve configured that part wrong. -----EDIT----- IPv6 flow data is working fine, flows are just being obfuscated by IPv4.  Using nfdump and singling out the IPv6 traffic shows what we expect:```
nfdump -M /home/netflow/profiles-data/testlab/rtr1  -T  -r \\ 
2013/09/03/nfcapd.201309030945 -n 20 -s ip/flows -6
nfdump filter:
inet6
Top 20 IP Addr ordered by flows:

---SNIP---

Summary: total flows: 19222, total bytes: 28.7 M, total packets: \\ 
45173, avg bps: 732, avg pps: 0, avg bpp: 636
Time window: 2013-07-15 16:42:57 - 2013-09-03 09:50:20
Total flows processed: 4134975, Blocks skipped: 0, Bytes read: 281643580
Sys: 1.235s flows/second: 3345958.0  Wall: 1.770s flows/second: 2335921.0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Building FlowVisor on Centos 6 - quick and dirty</title>
      <link>https://forwardingplane.net/post/building-flowvisor-on-centos-6-quick-and-dirty/</link>
      <pubDate>Fri, 05 Jul 2013 10:22:23 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/building-flowvisor-on-centos-6-quick-and-dirty/</guid>
      <description>&lt;p&gt;I had the need to build a FlowVisor instance under CentOS.  Since nearly all of the docs I could find were for debian, I threw this together.  I utilized this &lt;a href=&#34;http://groups.geni.net/geni/wiki/FlowVisor&#34;&gt;GENI doc&lt;/a&gt; and the &lt;a href=&#34;https://github.com/OPENNETWORKINGLAB/flowvisor/wiki/Installation-from-Source&#34;&gt;github docs&lt;/a&gt; as a simple reference.  This is the quick and dirty method I used: Install the prerequisites:```
sudo yum -y install ant eclipse java-1.6.0-openjdk.x86_64 git
sudo yum -y groupinstall &amp;ldquo;Development Tools&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Create my standard directories:```&#34; data-lang=&#34;Create my standard directories:```&#34;&gt;mkdir /services
cd /services
git clone git://github.com/OPENNETWORKINGLAB/flowvisor.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Navigate, add user and install```
cd flowvisor
adduser flowvisor
sudo make fvuser=flowvisor fvgroup=flowvisor install&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Here is the relativde output I saw:```&#34; data-lang=&#34;Here is the relativde output I saw:```&#34;&gt;\[root@collector flowvisor\]# sudo make fvuser=flowvisor fvgroup=flowvisor install
ant
Buildfile: build.xml

init:
\[mkdir\] Created dir: /services/flowvisor/build
\[mkdir\] Created dir: /services/flowvisor/build.tests

compile:
\[javac\] Compiling 239 source files to /services/flowvisor/build
\[javac\] Note: /services/flowvisor/src/org/flowvisor/config/LoadConfig.java uses or overrides a deprecated API.
\[javac\] Note: Recompile with -Xlint:deprecation for details.

dist:
\[mkdir\] Created dir: /services/flowvisor/dist
\[jar\] Building jar: /services/flowvisor/dist/flowvisor.jar
\[jar\] Building jar: /services/flowvisor/dist/flowvisor.jar

BUILD SUCCESSFUL
Total time: 3 seconds
./scripts/install-script.sh
Using source dir: ./scripts/..
Installation prefix (/usr/local):
Install to different root directory ()
Installing FlowVisor into /usr/local with prefix=/usr/local as user/group flowvisor:flowvisor
Updating fvctl-xml.sh to fvctl-xml
Updating fvconfig.sh to fvconfig
Updating flowvisor.sh to flowvisor
Updating envs.sh to envs
Creating directories
Creating /usr/local/bin
Creating /usr/local/sbin
Creating /usr/local/libexec/flowvisor
Creating /usr/local/share/man/man1
Creating /usr/local/share/man/man8
Creating /usr/local/share/doc/flowvisor
Creating /usr/local/share/db/flowvisor
Creating /etc/flowvisor (owned by user=flowvisor  group=flowvisor)
Installing scripts
Installing SYSV startup script (not enabled by default)
Installing jars
Installing flowvisor.jar
Installing manpages
Installing FlowVisorDB
Installing configs
Installing Logrotate config
Installing documentation
Linking fvctl to fvctl-json
ln: creating symbolic link \`fvctl&amp;#39;: File exists
Generating a default config FlowVisor config
Trying to generate SSL Server Key with passwd from scripts/envs.sh
Generating cert with common name == flowvisor
keytool error: java.lang.Exception: Key pair not generated, alias &amp;lt;mykey&amp;gt; already exists
Enter password for account &amp;#39;fvadmin&amp;#39; on the flowvisor:
Generating default config in db
Outputing config file /etc/flowvisor/config.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start the controller:```
sudo /etc/init.d/flowvisor start&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Output from controller starting:```&#34; data-lang=&#34;Output from controller starting:```&#34;&gt;Starting flowvisor with the configuration stored in DB
If DB unpopulated, load config using &amp;#39;fvconfig load config.json&amp;#39;
\[root@collector flowvisor\]#
Message from syslogd@collector at Jul  3 08:49:51 ...
1&amp;gt;Jul  3 08:49:51 flowvisor: ERROR none : log level enabled: CRIT

Message from syslogd@collector at Jul  3 08:49:51 ...
1&amp;gt;Jul  3 08:49:51 flowvisor: ERROR none : log level enabled: ALERT

Message from syslogd@collector at Jul  3 08:49:51 ...
1&amp;gt;Jul  3 08:49:51 flowvisor: WARN none : log level enabled: WARN
``````
This yields a &amp;#34;working&amp;#34; flow visor.

Lock it down with a password:
``````
yum -y install pwgen
test -f /etc/flowvisor.passwd || sudo sh -c &amp;#39;pwgen -sB 24 &amp;gt; /etc/flowvisor.passwd&amp;#39;
service flowvisor restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>VMWare ESXi CLI reference</title>
      <link>https://forwardingplane.net/post/vmware-esxi-cli-reference/</link>
      <pubDate>Sun, 30 Jun 2013 14:24:51 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/vmware-esxi-cli-reference/</guid>
      <description>&lt;p&gt;One of my biggest complaints about VMware is that it is an enterprise application. It has historically catered to the masses, which I completely understand, but those of us that aren&amp;rsquo;t a fortune 500 company are figuratively and operationally shoved into a corner and forced to find hackish ways of doing things to work around the enterprise nature. One really, really good example of this is OS dependency. I hated architecture dependencies back in the old days (x86, SPARC, PPC) and I absolutely despise things that are OS platform dependent now.  It&amp;rsquo;s inconvenient and just plain sucks for anyone using anything but that required platform. This goes for anything, mac dependent, MS dependent, unix dependent, whatever. I don&amp;rsquo;t discriminate in my idealism.  While I realize it is an impossible, idealistic expectation,  I back up my stance 100% regardless. That being said, one of the most irritating of those in recent memory has been VMware. Managing the VMWare ESXi instances that I run for both lab and production work is a pain. Since I&amp;rsquo;m not really a sysadmin or a virtualization engineer my knowledge of this stuff is surely limited I may be going about this in a non-optimal way, but until recently it has required a one-off host or VM running windows with the client to do anything useful. Apparently this has changed with the pay version in 5.something adding a web interface.  Unfortunately this isn&amp;rsquo;t an option at this time for me, it&amp;rsquo;s cost prohibitive. So, when I found it necessary to do some management without a windows VM or host, I was pleasantly surprised to find that I can do simple tasks via the SSH CLI. was able to query power state, start, stop, etc. using simple CLI tools. Now, these are all documented at the VMware KB, but I wanted to throw together a quick reference sheet for all of them in one place so I started compiling it &lt;a href=&#34;http://www.forwardingplane.net/unix/vmware-esxi-cli-reference/&#34;&gt;here&lt;/a&gt;.  Please feel free to shoot over any additions or quick tips that should be on there. This is just the tip of the iceberg, I suspect (or maybe I&amp;rsquo;m just going about my VMware management all wrong; I&amp;rsquo;m open to that as well and suggestions on how to remedy). The most useful for me so far have been inventory and power related.```
List all VMs:
vim-cmd vmsvc/getallvms&lt;/p&gt;

&lt;p&gt;List power state of VM:
vim-cmd vmsvc/power.getstate &lt;VM ID&gt;&lt;/p&gt;

&lt;p&gt;Power on VM
vim-cmd vmsvc/power.on &lt;VM ID&gt;&lt;/p&gt;

&lt;p&gt;Power off VM
vim-cmd vmsvc/power.off &lt;VM ID&gt;&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Broadcast input with iTerm</title>
      <link>https://forwardingplane.net/post/broadcast-input-with-iterm/</link>
      <pubDate>Sat, 22 Jun 2013 15:56:12 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/broadcast-input-with-iterm/</guid>
      <description>&lt;p&gt;As much as I like to think I automate everything, I&amp;rsquo;m pretty bad at writing code to make my life easier since it tends to take me longer to write the code and it tends to make be a bit grumpy (this is eomthing I&amp;rsquo;m fixing by learning as much code dev as I can during my limited spare time).  However, I like to think I can be fairly smart about working around my limited programming skills (think boba fett rather than jedi) by using the tools available to common folk.  Enter &lt;a href=&#34;http://www.iterm2.com/#/section/home&#34;&gt;iTerm2&lt;/a&gt;. Last I looked at this is was buggy and unstable. &amp;hellip;.that was years and years ago. This has changed.  &lt;a href=&#34;http://www.iterm2.com/#/section/home&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/06/iTerm.png&#34; alt=&#34;iTerm&#34; /&gt;&lt;/a&gt; iTerm has been vastly improved.   In fact, after someone suggested I look at it again, it took all of about 10 minutes for me to go all in as mt primary terminal.  The list of features is good, split pane, tabs and a wealth of customization options.  One of the big weinners for me, though, goes back to my original statement.   Being able to do broadcast input across panes, tabs or windows is fantastically useful.  If you manage systems, need to look at statistics at the same time on routers or switches or just want to do some quick and dirty &amp;ldquo;automation&amp;rdquo;, this is the ticket. I like it so much I did a quick screencast on how to do basic broadcast input.  It&amp;rsquo;s really straightforward.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debugging Brocade MLX/XMR ip_rx CPU issues</title>
      <link>https://forwardingplane.net/post/debugging-brocade-mlxxmr-ip_rx-cpu-issues/</link>
      <pubDate>Mon, 17 Jun 2013 00:35:42 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/debugging-brocade-mlxxmr-ip_rx-cpu-issues/</guid>
      <description>&lt;p&gt;I recently had the need to debug a run away ip_rx process on an older Brocade MLX.  For anyone that has had to do any type of low level debugging on the Brocade (Foundry) platform, you know that there many somewhat deep level diagnostics that are possible.  The debug (like cisco debug) is a bit lacking, but the dm, LP and MP commands are very useful (and a tad scary). Regardless, I&amp;rsquo;ve had to utilize them a lot in the last few years so my aversion to using them has been pretty much completely callused over. So, when there was notification of CPU issues (common on the platform in environments I&amp;rsquo;m familiar with), I started poking around.  First off, the  &lt;a href=&#34;http://www.brocade.com/downloads/documents/product_manuals/B_NetIron/Brocade_XMRMLX_05200_DiagnosticGuide.pdf&#34;&gt;diagnostic documents&lt;/a&gt; are your friend.  They&amp;rsquo;re fairly deep and wide in scope.  After looking at the cpu, it was pretty clear what the culprit was. rtr4-2#sh cpu-utilization | e 0 &amp;hellip; Usage average for all tasks in the last 1 seconds  &amp;hellip; ========================================================== Name            us/sec        % idle                    68435           11 ip_rx                   724619          72 ospf                    36942           3 snmp                    82753           8 I needed to get info on that ip_rx process.  Google actually wasn&amp;rsquo;t terribly helpful, so I dig out what I wanted, except for the process for breaking into the management module monitor mode.  The golden ticket ended up being &amp;ldquo;ctrl+y m enter&amp;rdquo; from the console.  That drops you into the OS mode or management module monitor mode that looks like this.&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/06/Screen-Shot-2013-06-16-at-7.04.20-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/06/Screen-Shot-2013-06-16-at-7.04.20-PM.png&#34; alt=&#34;Screen Shot 2013-06-16 at 7.04.20 PM&#34; /&gt;&lt;/a&gt;               Basically this is what I gathered for the Brocade TAC.```
MP-1 OS&amp;gt;set sample-task ip_rx
MP-1 OS&amp;gt;set sample-rate 5
MP-1 OS&amp;gt;show sample
CPU Sample: Trace&amp;hellip; (Repeat)
202e4eb8&lt;2021ec08&lt;202e5c18&lt;202e6238&lt;2030c2c4&lt;202ec2d8&lt;202eac00&lt;202eac74
 .....
MP-1 OS&gt;set sample-rate 0
MP-1 OS&amp;gt;exit
Back to Application console&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Setting the task to sample is pretty simple:set sample-task &lt;task&gt;```&#34; data-lang=&#34;Setting the task to sample is pretty simple:set sample-task &lt;task&gt;```&#34;&gt;set sample-rate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to show the sample, simply```
show sample&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-and then to disable the sampling```&#34; data-lang=&#34;and then to disable the sampling```&#34;&gt;set sample-rate 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be used to gather all kinds of disgnostic data for seemingly any running process for the brocade TAC to decipher.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MPLS Bootstrap</title>
      <link>https://forwardingplane.net/post/mpls-bootstrap/</link>
      <pubDate>Fri, 07 Jun 2013 13:04:02 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/mpls-bootstrap/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been doing a lot of MPLS in the last 45 or so days (which is one of the reasons I have been absentee in the OpenFlow world lately). Having had almost no real world MPLS experience aside from a handful of pseudo-wires and a very small LDP signaled network, I had to spend some time reading, hacking at routers and essentially learning. In doing so, I found a few things.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MPLS isn&amp;rsquo;t that different than any other networking, it&amp;rsquo;s taking a criteria and moving data based on that criteria (duh?!?)&lt;/li&gt;
&lt;li&gt;Many of the concepts are familiar.  Frame Relay and ATM come to mind.  OpenFlow does as well in certain circumstances.&lt;/li&gt;
&lt;li&gt;There is a lot of documentation on the MPLS suite of protocols.&lt;/li&gt;
&lt;li&gt;I didn&amp;rsquo;t find a condensed set of data for the information I was looking for.  Jerely Stretch has some of it on his &lt;a href=&#34;http://media.packetlife.net/media/library/18/Frame_Mode_MPLS.pdf&#34;&gt;cheat sheet&lt;/a&gt;, but it&amp;rsquo;s not as complete as what I wanted and heavily vendor biased.  I was looking for conceptual information and not necessarily operational commands.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/06/Basic-Cloud.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/06/Basic-Cloud.jpg&#34; alt=&#34;Basic Cloud&#34; /&gt;&lt;/a&gt; I spent some time coming up with a slide deck I could present to others that, in theory, would build a foundation to work from.  I understand that this may be incomplete and is mostly a compilation of data found elsewhere (there is a reference section).  Using this bootstrap I was able to pick up the concepts well enough to understand when to use what and where as well as build the foundational requirements for a fairly complex MPLS environment.  Feel free to correct anything that is blatantly wrong, send me an email and I&amp;rsquo;ll address it. The slide deck can be found as a PDF &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/MPLS-101.pdf&#34;&gt;here&lt;/a&gt;.  If you want the pptx it is available &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/MPLS-101.pptx&#34;&gt;here&lt;/a&gt;.   I will continue to update them as I hone the deck and / or find and correct errors.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VNC Console on VMware ESXi</title>
      <link>https://forwardingplane.net/post/vnc-console-on-vmware-esxi/</link>
      <pubDate>Sun, 28 Apr 2013 03:39:54 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/vnc-console-on-vmware-esxi/</guid>
      <description>&lt;p&gt;Let me preface this post by saying that I am absolutely not an enterprise IT or systems guy, take everything that I write here on out with that as a side dish.  I&amp;rsquo;m also very, very cheap. That said, one of the things I really like about KVM is the ability to easily view the console of a guest system using free, non-windows software like VNC. However, much like everything in life, there are reasons to do one thing or another. I love VMware as well. It&amp;rsquo;s refined, well documented, incredibly feature rich and works phenomenally well. It&amp;rsquo;s also an enterprise app and to get a lot of the elegant features you either need a windows machine or the expensive paid version. Or both. I generally have neither money to spend on lab stuff or software licenses, which is why I generally use OSS. VMware, does, however, allow for free limited use of ESXi in such a way that is more than I need for my lab environments.  This is a great compliment to the XEN, KVM and other virtualization stuff I use for entertaining myself, learning new tech and labbing things up. So, when I wanted to see if I could get to the console of a few VMs I have without the paid app or a windows machine running vsphere, &lt;a href=&#34;http://t3chnot3s.blogspot.com/2012/03/how-to-enable-vnc-access-to-vms-on.html&#34;&gt;the internets took care of me&lt;/a&gt;.  This is actually really straight forward and takes very little time.  I made a quick screen cast of adding it to one of my template VMs. There are, of course, a few caveats.  Knowing how to &lt;a href=&#34;http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=1714&#34;&gt;properly edit the VMX file&lt;/a&gt; is important.  Knowing that VNC is insecure is also very important. In my lab, this is all behind my security perimeter and it&amp;rsquo;s fairly safe to open it up. In a nutshell, Here is what you need to do:```
chmod 777 /etc/vmware/firewall/service.xml&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Edit the firewall file:```&#34; data-lang=&#34;Edit the firewall file:```&#34;&gt;vi /etc/vmware/firewall/service.xml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add this to the bottom before the last line:```
 VNC
    outbound
        tcp
        dst
        5800
           5999
     inbound
        tcp
        dst
        5800
           5999
     true
     false&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Make sure the ports are configured at you want them to be. I chose 5900 - 5999 since it made sense to me. Then:```&#34; data-lang=&#34;Make sure the ports are configured at you want them to be. I chose 5900 - 5999 since it made sense to me. Then:```&#34;&gt;esxcli network firewall refresh
esxcli network firewall ruleset list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Should now see:```
VNC true&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-at the very bottom. In the .vmx file of each VM:```&#34; data-lang=&#34;at the very bottom. In the .vmx file of each VM:```&#34;&gt;RemoteDisplay.vnc.enabled = &amp;#34;TRUE&amp;#34;
RemoteDisplay.vnc.port = 5910
RemoteDisplay.vnc.password = &amp;#34;VNCPassword&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Directly from the VMware site: Any manual additions to the .vmx file from ESX/ESXi are overwritten by the entries stored in the vCenter Server database. If you need to edit a virtual machine&amp;rsquo;s .vmx file, first remove it from vCenter Server&amp;rsquo;s inventory (right-click it and choose Remove from Inventory). After you edit it, register the virtual machine again from the ESX command line.```
vmware-cmd -s register /vmfs/volumes/datastore/virtual machine directory/virtual machine name.vmx&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Where datastore is the datastore name, virtual machine directory is the directory containing the virtual machine files, and virtual machine name is the name of the virtual machine files. This needs to be the full path, it gave me a weird error trying to do it in the directory without the full path. For example:```&#34; data-lang=&#34;Where datastore is the datastore name, virtual machine directory is the directory containing the virtual machine files, and virtual machine name is the name of the virtual machine files. This needs to be the full path, it gave me a weird error trying to do it in the directory without the full path. For example:```&#34;&gt;vim-cmd solo/registervm /vmfs/volumes/Storage1/vm1/vm1.vmx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Start the VM and connect to the VNC console configured.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building a Bridge Domain on MX series JunOS</title>
      <link>https://forwardingplane.net/post/building-a-bridge-domain-on-mx-series-junos/</link>
      <pubDate>Sat, 09 Mar 2013 16:48:48 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/building-a-bridge-domain-on-mx-series-junos/</guid>
      <description>&lt;p&gt;I started working on Juniper equipment around 2002. At my employer, we had an M40 with the serial number 256.  We did Layer3 only.  I had no idea if the Juniper even did layer2.  It certainly wasn&amp;rsquo;t a layer3 switch like a 6500 like I was used to.  It was like a deliciously robust version of any Layer 3 router I&amp;rsquo;d worked on previously.  Over the years &lt;a href=&#34;http://www.juniper.net/us/en/&#34;&gt;Juniper&lt;/a&gt; has added a &lt;a href=&#34;http://www.juniper.net/us/en/products-services/switching/ex-series/&#34;&gt;switching line&lt;/a&gt; utilizing their FreeBSD based OS, &lt;a href=&#34;http://www.juniper.net/us/en/products-services/nos/junos/&#34;&gt;JunOS&lt;/a&gt;. All that being said, I&amp;rsquo;d never really messed with doing a layer2 transit VLAN on a JunOS routing platform.  Lets say we want to make 2 VLANs and transit them up through the WAN.  Here is how to make it work on an MX: Create the bridge domains:```
set bridge-domains vlan-123 domain-type bridge
set bridge-domains vlan-123 vlan-id 123
set bridge-domains vlan-124 domain-type bridge
set bridge-domains vlan-123 vlan-id 124&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Configure the interfaces facing south (LAN) to nbe members of the VLAN:```&#34; data-lang=&#34;Configure the interfaces facing south (LAN) to nbe members of the VLAN:```&#34;&gt;set interfaces xe-1/0/0 description &amp;#34;SW1 xe-1/1/0&amp;#34;
set interfaces xe-1/0/0 mtu 9192
set interfaces xe-1/0/0 unit 0 description &amp;#34;Untagged VLAN 123&amp;#34;
set interfaces xe-1/0/0 unit 0 family bridge interface-mode access
set interfaces xe-1/0/0 unit 0 family bridge vlan-id 123

set interfaces xe-1/0/1 description &amp;#34;SW1 xe-1/1/1&amp;#34;
set interfaces xe-1/0/1 mtu 9192
set interfaces xe-1/0/1 unit 0 description &amp;#34;Untagged VLAN 123&amp;#34;
set interfaces xe-1/0/1 unit 0 family bridge interface-mode access
set interfaces xe-1/0/1 unit 0 family bridge vlan-id 123

set interfaces xe-1/0/2 description &amp;#34;SW2 xe-1/1/2&amp;#34;
set interfaces xe-1/0/2 mtu 9192
set interfaces xe-1/0/2 unit 0 description &amp;#34;Untagged VLAN 124&amp;#34;
set interfaces xe-1/0/2 unit 0 family bridge interface-mode access
set interfaces xe-1/0/2 unit 0 family bridge vlan-id 124

set interfaces xe-1/0/3 description &amp;#34;SW2 xe-1/1/3&amp;#34;
set interfaces xe-1/0/3 mtu 9192
set interfaces xe-1/0/3 unit 0 description &amp;#34;Untagged VLAN 124&amp;#34;
set interfaces xe-1/0/3 unit 0 family bridge interface-mode access
set interfaces xe-1/0/3 unit 0 family bridge vlan-id 124&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now add it to the uplink (that in this case has a layer3 instance on it as well):```
set interfaces et-5/0/0 description &amp;ldquo;100G North&amp;rdquo;
set interfaces et-5/0/0 vlan-tagging
set interfaces et-5/0/0 mtu 9192
set interfaces et-5/0/0 unit 123 description &amp;ldquo;L3 testing vlan 123&amp;rdquo;
set interfaces et-5/0/0 unit 123 family bridge interface-mode trunk
set interfaces et-5/0/0 unit 123 family bridge vlan-id-list 123
set interfaces et-5/0/0 unit 124 description &amp;ldquo;L3 testing vlan 124&amp;rdquo;
set interfaces et-5/0/0 unit 124 family bridge interface-mode trunk
set interfaces et-5/0/0 unit 124 family bridge vlan-id-list 124
set interfaces et-5/0/0 unit 100 description &amp;ldquo;VLAN100 Layer3 Peering&amp;rdquo;
set interfaces et-5/0/0 unit 100 vlan-id 100
set interfaces et-5/0/0 unit 100 family inet mtu 9000
set interfaces et-5/0/0 unit 100 family inet address 10.100.100.&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;30&lt;/sub&gt;
set interfaces et-5/0/0 unit 100 family inet6 mtu 9000
set interfaces et-5/0/0 unit 10 family inet6 address 2001:fd8:a100:100::&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now check your bridge table:```&#34; data-lang=&#34;Now check your bridge table:```&#34;&gt;buraglio@mx480&amp;gt; show bridge domain    

Routing instance        Bridge domain            VLAN ID     Interfaces
default-switch          vlan-123                 123      
                                                             et-5/0/0.123
                                                             xe-1/0/0.0
                                                             xe-1/0/1.0
                                                            
default-switch          vlan-124                 124      
                                                             et-5/0/0.124
                                                             xe-1/0/2.0
                                                             xe-1/0/3.0
                                                        &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it. Pretty straightforward.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tuning BGP installed IPv6 routes</title>
      <link>https://forwardingplane.net/post/tuning-bgp-installed-ipv6-routes/</link>
      <pubDate>Sat, 02 Mar 2013 13:15:37 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/tuning-bgp-installed-ipv6-routes/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently run into a situation where there was no longer enough space in the FIB to handle both the full IPv4 global table and the full IPv6 global table.  We prefer to run a default-free network within this particular SP network, but in this case, until a hardware refresh can happen, we&amp;rsquo;ll need to adjust that.  Given what we knew about the size of both tables, it made more sense to take a default IPv6 route from one transit provider and filter the rest.  How we did this isn&amp;rsquo;t a groundbreaking marvel by any means, but it&amp;rsquo;s probably worth writing down for someone else to reference since it also applies to IPv4. Since we already have global tables, a request to add IPv6 default to our existing full IPv6 table was made to one transit provider.  After that request was fulfilled, filter adjustments were made.  It should be note that all of these configs were generated off of Brocade MLX routers, so they may look a tad different than an IOS device. Create a prefix list to reference that will allow default:```
ipv6 prefix-list V6-PERMIT-DEFAULT seq 5 permit ::/0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Create the route map:```&#34; data-lang=&#34;Create the route map:```&#34;&gt;route-map IPv6-TRANSIT-DEFAULT-IN permit 100
match ipv6 address prefix-list IPv6-PERMIT-DEFAULT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the route-map to the peer:```
neighbor 2001:fd8:e00::2 route-map in IPv6-TRANSIT-DEFAULT-IN&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Before:```&#34; data-lang=&#34;Before:```&#34;&gt;Neighbor Address AS#  State Time  Rt:Accepted Filtered Sent ToSend
2001:fd8:e00::2 65001 ESTAB 15d10h34m  12003    0       14    0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After:```
Neighbor Address AS#  State Time  Rt:Accepted Filtered Sent ToSend
2001:fd8:e00::2 65001 ESTAB 15d10h34m     1    12002     14    0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now we&#39;ll need to filter the prefixes of every other peer to allow for only IPv6 routes sized /32 or larger:```&#34; data-lang=&#34;Now we&#39;ll need to filter the prefixes of every other peer to allow for only IPv6 routes sized /32 or larger:```&#34;&gt;route-map IPv6-BILAT-IN permit 100
 match ipv6 address prefix-list IPv6-PERMIT-ANY-32
 set community 65403:1425
 set local-preference 200 

ipv6 prefix-list IPv6-PERMIT-ANY-32 seq 5 permit ::/0 le 32&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once applied to the peers this will limit the routes installed into the FIB. Install them by adding the route-map to the appropriate peers:&lt;code&gt;
neighbor 2001:db8:0:300e::1 route-map in IPv6-BILAT-IN
&lt;/code&gt;```
SSH@RTR7#sh ipv6 bgp summary
  BGP4 Summary
  Router ID: 10.6.16.10   Local AS Number: 65403
  Confederation Identifier: not configured
  Confederation Peers:
  Maximum Number of IP ECMP Paths Supported for Load Sharing: 1
  Number of Neighbors Configured: 16, UP: 16
  Number of Routes Installed: 15297, Uses 1315542 bytes
  Number of Routes Advertising to All Neighbors: 50641 (5632 entries), Uses 270336 bytes
  Number of Attribute Entries Installed: 26036, Uses 2343240 bytes
  Neighbor Address  AS#         State     Time     Rt:Accepted Filtered Sent     ToSend&lt;/p&gt;

&lt;p&gt;2001:db8:1900:b::2
                      65531       ESTAB    56d 8h52m    14       0        2        0&lt;br /&gt;
  2001:db8:f000:213a::1
                      65164       ESTAB     3d19h31m    4187     4535     2        0&lt;br /&gt;
  2001:db8:0:300e::1
                      65381       ESTAB    56d 8h35m    5087     6532     2        0&lt;br /&gt;
  2001:db8:5fff:1::1
                      65237       ESTAB   149d16h18m    11       0        2        0&lt;br /&gt;
  2001:db8:1:102::1
                      65100       ESTAB    24d16h55m    3        0        2        0&lt;br /&gt;
  2001:db8:f10:1::1   65403       ESTAB   453d12h42m    3        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::2   65403       ESTAB   101d21h24m    2        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::3   65403       ESTAB   453d11h29m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::4   65403       ESTAB   453d11h 8m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::5   65403       ESTAB   453d12h17m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::6   65403       ESTAB   453d12h 3m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::7   65403       ESTAB   453d11h36m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:1::8   65403       ESTAB   160d17h52m    5078     0        5625     0&lt;br /&gt;
  2001:db8:f10:1::9   65403       ESTAB   453d11h 3m    1        0        5625     0&lt;br /&gt;
  2001:db8:f10:6013::2
                      65532       ESTAB    15d19h50m    904      3        2        0&lt;br /&gt;
  2001:db8:f10:6016::2
                      65527       ESTAB   126d15h29m    1        0        2        0
```As you can see, peers on AS65164 and AS65381 are both filtering a large amount of traffic that is smaller than /32. Couple that with the inclusion of a default route and the traffic has a good deal of best path and a default for everything else. Its not exactly the most elegant, but it does solve a problem that folks may be seeing on aging equipment with limited resources.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS KVM Install - Quick Start to a VM</title>
      <link>https://forwardingplane.net/post/centos-kvm-install-quick-start-to-a-vm/</link>
      <pubDate>Sat, 02 Mar 2013 01:12:02 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/centos-kvm-install-quick-start-to-a-vm/</guid>
      <description>&lt;p&gt;I am a network engineer by profession, but with the proliferation of SDN and OpenFlow, I have had to spend a lot of time re-learning a lot of system admin skills that I&amp;rsquo;d shelved years ago.  Now, I&amp;rsquo;ve been a virtualization user forever. From &lt;a href=&#34;http://www.vmware.com&#34;&gt;VMware&lt;/a&gt; (Fusion, ESX), &lt;a href=&#34;https://www.virtualbox.org&#34;&gt;VirtualBox&lt;/a&gt;, to &lt;a href=&#34;www.parallels.com&#34;&gt;Parallels&lt;/a&gt;, I&amp;rsquo;ve used them at least in testing if not in production environments.  I&amp;rsquo;d not really spent any mentionable amount of time with &lt;a href=&#34;http://www.xen.org&#34;&gt;XEN&lt;/a&gt;, &lt;a href=&#34;http://www.qemu.org&#34;&gt;qEMU&lt;/a&gt; or &lt;a href=&#34;www.linux-kvm.org&#34;&gt;KVM&lt;/a&gt;, but some projects I was working on suggested it for the virtualization mechanism, so I figured I&amp;rsquo;d try to pick it up.  I think the hosting provider  of this blog is using it to provide the VPS that this site runs on, so it is clearly production quality.  In looking around for a straightforward how-to, a few things became obvious pretty quickly: KVM is very robust. KVM and qEMU have got a lot of documentation, but not all of it is straightforward. They have a lot of pieces needed to make it work efficiently. It wasn&amp;rsquo;t a plug and run experience, by any means.  I wanted a headless, remotely manageable system that ran on a bare minimum install (i.e. no GUI).  After a late evening of hacking at it,  here is what I finally had to do to get it running and build a functional VM on a fresh install of CentOS 6.3. Install all the dependancies.  And there were many.  Coming from using the VirtualBox CLI, little things that I expected didn&amp;rsquo;t work if I didn&amp;rsquo;t have this or that installed.```
yum install -y qemu-kvm.x86_64 qemu-kvm-tools.x86_64 &lt;br /&gt;
kvm libvirt bridge-utils tunctl python-virtinst.noarch avahi&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Restart the deamons```&#34; data-lang=&#34;Restart the deamons```&#34;&gt;/etc/init.d/messagebus restart
/etc/init.d/avahi-daemon restart
/etc/init.d/libvirtd restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make the new daemons start at boot:```
/sbin/chkconfig messagebus on
/sbin/chkconfig avahi-daemon on&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
I want to bridge rather than NAT.  My VMs need to have a public (or same LAN segment) address as the rest of the hosts for external management and availability of inbound services.  For this, we need to adjust the interfaces.  I want to run the bridge on a second interface and keep the host system management on a dedicated interface.

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vi /etc/sysconfig/network-scripts/ifcfg-eth1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Your file should look something like this when done:```&#34; data-lang=&#34;Your file should look something like this when done:```&#34;&gt;DEVICE=&amp;#34;eth1&amp;#34;
HWADDR=&amp;#34;c0:ff:ee:c0:ff:ee&amp;#34; # (leave this as your MAC address)
NM\_CONTROLLED=&amp;#34;yes&amp;#34;
 BRIDGE=br0
 ONBOOT=&amp;#34;yes&amp;#34;
UUID=&amp;#34;a9c26927-7650-42e9-a86a-1ae1227eac4b&amp;#34; #leave this as your UUID)
``````
vi /etc/sysconfig/network-scripts/ifcfg-br0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your file should look something like this when done:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEVICE=&amp;quot;br0&amp;quot;
TYPE=&amp;quot;Bridge&amp;quot;
BOOTPROTO=&amp;quot;static&amp;quot;
IPADDR=&amp;quot;10.10.10.50&amp;quot; # Use your own IP address
NETMASK=&amp;quot;255.255.255.128&amp;quot;
GATEWAY=&amp;quot;10.10.10.1&amp;quot;  # Provide your gateway
IPV6INIT=&amp;quot;yes&amp;quot;
IPV6\_AUTOCONF=&amp;quot;yes&amp;quot;
NM\_CONTROLLED=&amp;quot;yes&amp;quot;
ONBOOT=&amp;quot;yes&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart the network to make it active.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service network restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;re going to use virt tools and virsh to manipulate the guests.  I tried it a few other ways and this seems far more supportable.  I wanted to install a CentOS 6.3 guest, I grabbed the install media from a &lt;a href=&#34;http://cosmos.cites.illinois.edu/pub/centos/6.3/isos/x86_64/&#34;&gt;local mirror&lt;/a&gt;.  I have a volume mounted as /services that I keep stuff in.```
mkdir /services/vm/template-host
cd /services/vm/template-host
wget &lt;a href=&#34;http://cosmos.cites.illinois.edu/pub/centos/6.3/isos/x86_64/CentOS-6.3-x86_64-bin-DVD1.iso&#34;&gt;http://cosmos.cites.illinois.edu/pub/centos/6.3/isos/x86_64/CentOS-6.3-x86_64-bin-DVD1.iso&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now use the virt-install command to boot the system with the following parameters: 2G of RAM 50G disk named disk.img Console redirected to a VNC instance on port 5901 Network interface attached to br0 4 CPUs CDROM points to install image```&#34; data-lang=&#34;Now use the virt-install command to boot the system with the following parameters: 2G of RAM 50G disk named disk.img Console redirected to a VNC instance on port 5901 Network interface attached to br0 4 CPUs CDROM points to install image```&#34;&gt;virt-install --name template-host --ram 2048 --disk /home/vm/template-host/disk.img,size=50 \\
--graphics vnc,port=5901 --network bridge=br0 --vcpus=4 --os-type=linux \\
--cdrom=/home/vm/Install\_Media/CentOS-6.3-x86\_64-bin-DVD1.iso&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, to connect to the console, you&amp;rsquo;ll need to tunnel VNC over ssh.  This can be adjusted, but that&amp;rsquo;s outside of the scope of this. I like to redirect real port numbers for my own sanity.```
ssh -N -p 22 -c 3des buraglio@vmhost -L 5901/localhost/5901&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The above command will redirect localhost port 5901 to port 5901 on the host vmhost Connect to the VNC server:&#34; data-lang=&#34;The above command will redirect localhost port 5901 to port 5901 on the host vmhost Connect to the VNC server:&#34;&gt;[![Screen Shot 2013-03-01 at 2.00.37 PM](http://www.forwardingplane.net/wp-content/uploads/2013/03/Screen-Shot-2013-03-01-at-2.00.37-PM.png)](http://www.forwardingplane.net/wp-content/uploads/2013/03/Screen-Shot-2013-03-01-at-2.00.37-PM.png)

Once connected you should drop right into the console of the KVM instance. Install as a normal system at that point.

Once installed It&amp;#39;ll appear as a normal host console.

[![Screen Shot 2013-03-01 at 2.01.21 PM](http://www.forwardingplane.net/wp-content/uploads/2013/03/Screen-Shot-2013-03-01-at-2.01.21-PM.png)](http://www.forwardingplane.net/wp-content/uploads/2013/03/Screen-Shot-2013-03-01-at-2.01.21-PM.png)

I found virsh to be the most useful for manipulating the virtual machine.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;[root@behemoth Install_Media]# virsh list
Id            Name                                      State&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;9              template-host                         running
```Helpful commands I found after 30 minutes of poking around and playing with virsh: virsh list &amp;ndash;show the list of virtual machines virsh destroy &lt;vm name&gt; &amp;ndash;hard shut down a host (I believe) virsh undefine &lt;vm name&gt; &amp;ndash;remove the VM from registration &amp;ndash;this one was hard for me to find.   &lt;a href=&#34;http://www.forwardingplane.net/unix/kvm-virsh-command-referenc/&#34; title=&#34;KVM virsh command reference&#34;&gt;Here&lt;/a&gt; is a complete list of the commands.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Headless VirtualBox host on CentOS</title>
      <link>https://forwardingplane.net/post/headless-virtualbox-host-on-centos/</link>
      <pubDate>Thu, 31 Jan 2013 21:48:47 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/headless-virtualbox-host-on-centos/</guid>
      <description>&lt;p&gt;Starting from a base CentOS system with nothing configured, and referencing the &lt;a href=&#34;http://wiki.centos.org/HowTos/Virtualization/VirtualBox&#34;&gt;CentOS wiki&lt;/a&gt;, here is how I like to set up a headless virtualbox environment: Disable selinux. It&amp;rsquo;s overly cumbersome and is enabled by default in CentOS.  I like to permanently disable it even though the default is permissive.  I ride the edge, I know.```
vi /etc/selinux/config&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
 and change

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SELINUX=enabled&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
to

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;SELINUX=disabled&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Then reboot.

Using the methodology I originally found found [here](http://stackoverflow.com/questions/14016286/how-to-programmatically-install-the-latest-epel-release-rpm-without-knowing-its), I like to install the epel repo using this method:```
cat &amp;lt;&amp;lt;EOM &amp;gt;/etc/yum.repos.d/epel-bootstrap.repo
 \[epel\]
 name=Bootstrap EPEL
 mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=epel-\\$releasever&amp;amp;arch=\\$basearch
 failovermethod=priority
 enabled=0
 gpgcheck=0
 EOM
``````
yum --enablerepo=epel -y install epel-release
 rm -f /etc/yum.repos.d/epel-bootstrap.repo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install rpmforge repo```
rpm &amp;ndash;import &lt;a href=&#34;http://apt.sw.be/RPM-GPG-KEY.dag.txt&#34;&gt;http://apt.sw.be/RPM-GPG-KEY.dag.txt&lt;/a&gt;
 rpm -Uvh &lt;a href=&#34;http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm&#34;&gt;http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm&lt;/a&gt;
 yum clean all&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Install the virtualbox repo```&#34; data-lang=&#34;Install the virtualbox repo```&#34;&gt;yum install -y wget
cd /etc/yum.repos.d
wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo
yum update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the interesting bits, lets get to the vbox install.  Although we have enabled dkms, I like to also install as if we didn&amp;rsquo;t.  It populates the system with the pieces we need in a way that I&amp;rsquo;m used to.  I&amp;rsquo;m not a sysadmin by day, so this may be redundant.  YMMV, etc.   First, install the Development Tools. There are a lot here, it may take a bit depending on machine specs and connectivity speed in relation to mirrors. ```
yum groupinstall &amp;ldquo;Development Tools&amp;rdquo;
yum install VirtualBox-4.2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Then start up the service and you should see something like this:```&#34; data-lang=&#34;Then start up the service and you should see something like this:```&#34;&gt;service vboxdrv setup
Stopping VirtualBox kernel modules \[ OK \]
Uninstalling old VirtualBox DKMS kernel modulesError! There are no instances of module: vboxhost
4.2.6 located in the DKMS tree.
 \[ OK \]
Trying to register the VirtualBox kernel modules using DKMS
 \[ OK \]
Starting VirtualBox kernel modules \[ OK \]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point you&amp;rsquo;ve got virtualbox done and installed. Now, the &lt;em&gt;real&lt;/em&gt; interesting part begins: VMs. I have a centos template that I built on my laptop.  It&amp;rsquo;s got the settings I like and I can just import it.  You can also build a new one, but that&amp;rsquo;s for a different post.  I moved the template via scp over to the newly anointed VM host. Now, I just need to import it and I can start cloning.  &lt;a href=&#34;http://www.virtualbox.org/manual/ch08.html&#34;&gt;vboxmanage&lt;/a&gt; is the command we&amp;rsquo;re going to be utilizing heavily and it&amp;rsquo;s really powerful.  ```
vboxmanage import /home/buraglio/centos-63-template.ova&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Interpreting /home/buraglio/centos-63-template.ova...
OK.
Disks: vmdisk1 150 1359413248 http://www.vmware.com/interfaces/specifications/vmdk.html#streamOptimized centos-63-template-disk1.vmdk 512919552 -1 
Virtual system 0:
 0: Suggested OS type: &amp;quot;Linux26\_64&amp;quot;
 (change with &amp;quot;--vsys 0 --ostype &amp;lt;type&amp;gt;&amp;quot;; use &amp;quot;list ostypes&amp;quot; to list all possible values)
 1: Suggested VM name &amp;quot;centos-63-template&amp;quot;
 (change with &amp;quot;--vsys 0 --vmname &amp;lt;name&amp;gt;&amp;quot;)
 2: Number of CPUs: 2
 (change with &amp;quot;--vsys 0 --cpus &amp;lt;n&amp;gt;&amp;quot;)
 3: Guest memory: 4096 MB
 (change with &amp;quot;--vsys 0 --memory &amp;lt;MB&amp;gt;&amp;quot;)
 4: Network adapter: orig ur1-vm1 72.36.126.200/29, config 5, extra type=Bridged
 5: CD-ROM
 (disable with &amp;quot;--vsys 0 --unit 5 --ignore&amp;quot;)
 6: SCSI controller, type LsiLogic
 (change with &amp;quot;--vsys 0 --unit 6 --scsitype {BusLogic|LsiLogic}&amp;quot;;
 disable with &amp;quot;--vsys 0 --unit 6 --ignore&amp;quot;)
 7: IDE controller, type PIIX4
 (disable with &amp;quot;--vsys 0 --unit 7 --ignore&amp;quot;)
 8: IDE controller, type PIIX4
 (disable with &amp;quot;--vsys 0 --unit 8 --ignore&amp;quot;)
 9: Hard disk image: source image=centos-63-template-disk1.vmdk, target path=/home/buraglio/VirtualBox VMs/centos-63-template/centos-63-template-disk1.vmdk, controller=6;channel=0
 (change target path with &amp;quot;--vsys 0 --unit 9 --disk path&amp;quot;;
 disable with &amp;quot;--vsys 0 --unit 9 --ignore&amp;quot;)
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Successfully imported the appliance.
```

It&#39;s there. you should now have a folder in your home directory that has the VM in it. 

```
ls -la VirtualBox\\ VMs/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;total 12
drwx&amp;mdash;&amp;mdash; 3 buraglio buraglio 4096 Jan 29 20:23 .
drwx&amp;mdash;&amp;mdash;. 4 buraglio buraglio 4096 Jan 29 20:23 ..
drwx&amp;mdash;&amp;mdash; 2 buraglio buraglio 4096 Jan 29 20:23 centos-63-template&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-to really make this useful, I clone all the VMs to the names I want and don&#39;t use the template at all. Now list the vms to verify what you have:```&#34; data-lang=&#34;to really make this useful, I clone all the VMs to the names I want and don&#39;t use the template at all. Now list the vms to verify what you have:```&#34;&gt;vboxmanage list vms
&amp;#34;centos-63-template&amp;#34; {4875b540-5514-4d0b-bba8-ce255b7f44a2}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have one VM named &amp;ldquo;centos-63-template&amp;rdquo;, which is exactly what I wanted. Now clone this VM to the first usable VM, I&amp;rsquo;m building a floodlight OpenFlow controller, so I&amp;rsquo;ll name it accordingly.```
vboxmanage clonevm centos-63-template &amp;ndash;name floodlight1 &amp;ndash;register
0%&amp;hellip;10%&amp;hellip;20%&amp;hellip;30%&amp;hellip;40%&amp;hellip;50%&amp;hellip;60%&amp;hellip;70%&amp;hellip;80%&amp;hellip;90%&amp;hellip;100%
Machine has been successfully cloned as &amp;ldquo;floodlight1&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now list the vms to make sure it is listed:```&#34; data-lang=&#34;Now list the vms to make sure it is listed:```&#34;&gt;vboxmanage list vms
``````
&amp;#34;centos-63-template&amp;#34; {4875b540-5514-4d0b-bba8-ce255b7f44a2}
``````
&amp;#34;floodlight1&amp;#34; {8fb4f03d-d117-43d5-b4bf-24cdcc481686}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now here is the part I really like about virtualbox headless mode (and yes, I know others like qemu and xen can do this), when a virtual machine is started in headless mode, the console of that host can be redirected to an RDP instance. This makes it very convenient to manage systems on an out of band network like an isolated vlan or other non-routed or non-publically available network. It also makes it very convenient for spinning up a new VM that doesn&amp;rsquo;t have an IP stack configured. Its also very handy if you have a bad day and typo a host firewall rule or network config file. This has saved me a trip more than one time. To do this, you&amp;rsquo;ll need the vrdp extension pack.  To list the installed extension packs, once again, use the vboxmanage command  ```
VBoxManage list extpacks
Extension Packs: 0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The extension pack for my version is available [here](http://download.virtualbox.org/virtualbox/4.2.6/Oracle_VM_VirtualBox_Extension_Pack-4.2.6-82870.vbox-extpack).```&#34; data-lang=&#34;The extension pack for my version is available [here](http://download.virtualbox.org/virtualbox/4.2.6/Oracle_VM_VirtualBox_Extension_Pack-4.2.6-82870.vbox-extpack).```&#34;&gt;sudo VBoxManage extpack install Oracle\_VM\_VirtualBox\_Extension\_Pack-4.2.6-82870.vbox-extpack 
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
Successfully installed &amp;#34;Oracle VM VirtualBox Extension Pack&amp;#34;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point we&amp;rsquo;re ready to fire up the VM and connect to the console.```
vboxheadless -startvm floodlight1 -vrde on -vrdeproperty &amp;ldquo;TCP/Ports&amp;rdquo;=3390&amp;amp;
Oracle VM VirtualBox Headless Interface 4.2.6
&amp;copy; 2008-2012 Oracle Corporation
All rights reserved.&lt;/p&gt;

&lt;p&gt;VRDE server is listening on port 3390.
```The above command will start the VM &amp;ldquo;floodlight1&amp;rdquo;, enable vrde and set the vrde port to 3390. You should now be able to connect to the console of the host using any free or included RDP compatible client. I use the microsoft office for mac provided rdp client. &lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/01/RDC.png&#34; alt=&#34;RDC&#34; /&gt; You&amp;rsquo;ll see an error when connecting since the server can&amp;rsquo;t be verified.  This is expected.     &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/01/RDC-Verify.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/01/RDC-Verify.png&#34; alt=&#34;RDC Verify&#34; /&gt;&lt;/a&gt;   Hit connect and ta-da! Console on your VM.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/01/Console.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/01/Console-1024x658.png&#34; alt=&#34;Console&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  The best part about this is that it allows for really flexible management of virtual machines from a geographically different location.  Other than the initial install of CentOS 6, this was done 100% remotely, without a windows host and without an expensive hypervisor license. This is perfect for labs and learning virtualization, I&amp;rsquo;d even consider this totally fine for production.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Diff RANCID router configs with SVN</title>
      <link>https://forwardingplane.net/post/diff-rancid-router-configs-with-svn/</link>
      <pubDate>Fri, 25 Jan 2013 00:27:09 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/diff-rancid-router-configs-with-svn/</guid>
      <description>

&lt;p&gt;If you are running a network and aren&amp;rsquo;t using &lt;a href=&#34;http://shrubbery.net/rancid/&#34;&gt;RANCID&lt;/a&gt;, you should give it a serious look.  RANCID is a cross platform configuration management toolkit for backing up router configurations and certain environmental and hardware information into version control.  It&amp;rsquo;s been around for as long as I can remember and supports nearly every platform I can think of, including a &lt;a href=&#34;http://www.forwardingplane.net/2012/11/vdxrancid-contrib-scripts/&#34; title=&#34;VDXrancid contrib scripts&#34;&gt;few&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2011/06/alurancid-and-pfrancid/&#34; title=&#34;alurancid and pfrancid&#34;&gt;modules&lt;/a&gt; that I cobbled together myself.  There is are a few nice web based front ends for CVS and SVN, I prefer to use &lt;a href=&#34;http://www.viewvc.org&#34;&gt;ViewVC&lt;/a&gt; because I have a lot of experience with it, however, there may be cases where a web server isn&amp;rsquo;t a good option, unavailable or just too much work.  In this case, you&amp;rsquo;ll want to know how to diff those configs from the CLI using the existing tools.  I find myself always forgetting the exact syntax of how to do this, so here it is. I prefer to use SVN, so we&amp;rsquo;ll talk about that one here.   svn list will give a list of current devices in version control:&lt;code&gt;
svn list
&lt;/code&gt;```
rtr1.company.com
rtr2.company.com
rtr3.company.com
sw1.company.com
sw2.company.com&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-To look at a router config:```&#34; data-lang=&#34;To look at a router config:```&#34;&gt;svn cat &amp;lt;router&amp;gt;
svn cat rtr1.company.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See all revisions: svn log &lt;router&gt;```&lt;/p&gt;

&lt;h2 id=&#34;svn-log-rtr1-company-com&#34;&gt;svn log rtr1.company.com&lt;/h2&gt;

&lt;p&gt;r863 | _rancid | 2013-01-18 12:51:59 -0600 (Fri, 18 Jan 2013) | 1 line&lt;/p&gt;

&lt;h2 id=&#34;updates-change-made-by-buraglio&#34;&gt;updates - Change made by: buraglio&lt;/h2&gt;

&lt;p&gt;r848 | _rancid | 2013-01-09 14:00:27 -0600 (Wed, 09 Jan 2013) | 1 line&lt;/p&gt;

&lt;h2 id=&#34;updates&#34;&gt;updates&lt;/h2&gt;

&lt;p&gt;r847 | _rancid | 2013-01-09 02:07:42 -0600 (Wed, 09 Jan 2013) | 1 line&lt;/p&gt;

&lt;h2 id=&#34;updates-1&#34;&gt;updates&lt;/h2&gt;

&lt;p&gt;r832 | _rancid | 2012-12-12 09:42:33 -0600 (Wed, 12 Dec 2012) | 1 line&lt;/p&gt;

&lt;h2 id=&#34;updates-change-made-by-buraglio-1&#34;&gt;updates - Change made by: buraglio&lt;/h2&gt;

&lt;p&gt;r804 | _rancid | 2012-11-27 14:00:28 -0600 (Tue, 27 Nov 2012) | 1 line
updates&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Diff revisions: svn diff -r &lt;version1&gt;:&lt;version2&gt; &lt;router&gt;```&#34; data-lang=&#34;Diff revisions: svn diff -r &lt;version1&gt;:&lt;version2&gt; &lt;router&gt;```&#34;&gt;svn diff -r r863:r847 rtr1.company.com

Index: 710rtr.ui-iccn.org
===================================================================
--- rtr1.company.com	(revision 863)
+++ rtr1.company.com	(revision 847)
@@ -497,7 +497,6 @@
 !
 interface ethernet 1/1
  port-name rtr2 (1-1-11-2:e1/2)
- enable
  ip ospf area 0
  ip ospf cost 8
  ip address 10.209.143.1/30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s basically it. Anything you can do from svn, you can do with your RANCID gathered SVN data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workflow and my mobile device setups.</title>
      <link>https://forwardingplane.net/post/95/</link>
      <pubDate>Tue, 04 Dec 2012 21:28:53 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/95/</guid>
      <description>&lt;p&gt;Like many others, I rely heavily on my mobile devices to get my work done.  I&amp;rsquo;ve been a user of the iPhone since the original, with a year on a Nexus one android device.  I don&amp;rsquo;t have a strong preference and there are no &amp;ldquo;religious arguments&amp;rdquo; to be had with me on platform.  In fact, I&amp;rsquo;d probably choose PamlOS if I had a choice, it&amp;rsquo;s simple elegance and stability were a comfort to me&amp;hellip;it just didn&amp;rsquo;t make it to modernization. ..but I digress. I&amp;rsquo;ve chosen to go the Apple route, my machines are all Apple and so the integration makes sense.  That being said, there are a &lt;strong&gt;huge&lt;/strong&gt; amount of apps to choose from on all of the major platforms.  Here are the ones that I find myself using, either for work or pleasure, on a weekly basis.  All of these apps are free and work across iPad and iPhone unless otherwise noted.   iSSH - SSH, VNC and RDC client.  Excellent.  $9.99 Works on iPad and iPhone Mail -Stock Twitter - Standard Twitter Client. Tapatalk -forum app $? Untappd - Socialize your drinking, I use it to take tasting notes (pinky up).  IPhone only PixelPipe - Send images to multiple destinations at once, good for backing up to flickr and picasa, etc.  iPhone only. Public Radio - Stream NPR. iPhone only Wootie - I gotta have my woot fix for the day. eBay - I also love me some eBay. Amazon - &amp;ldquo; &amp;rdquo; Grocery G. - Share a grocery list with the wife.  Very handy and does push notifications.  $2.99? Shop Savvy - A barcode scanner, saves to dropbox, compares prices.  Very handy. iPhone only Nixie Clock - Nixie tube-like alarm clock.  Can stream radio as an alarm.  iPhone only $.99 SpiderOak - Browse my SpiderOak backup.  iPhone only Box - I don&amp;rsquo;t use box as much personally, but my job has a deal with them. Dropbox - A &lt;strong&gt;must&lt;/strong&gt; have.  you all know what dropbox is. WebEx - iPhone WebeX client.  Works well. iPhone only(?) GoToMeeting - Same drill as WebEx Skype - for video and audo internationally and with folks that can&amp;rsquo;t do FaceTime. GV Connect - Google Voice client.  Works better than the Google app, supports multiple accounts. iPhone only $99 Plex - Amazing client for Plex Media Server.  Works well over cellular data, very well supported. $? NetFLix - you know what this is FlicksMan - Netflix Queue Manager.  Very well done. Lync 2010 - Connect to my works MS Lync instance.  Works well. Reminders - Stock app.  Clopud sync reminders / todo app.  I can&amp;rsquo;t live without it. BlueOn - Turn on (but not off) bluetooth in one click.  I use this a lot. DataVault - Password Store.  Encrypted Dropbox sync with deskatop app and other mobile apps. Note Taking - Notes app, Free.  I need an alternative.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Workflow and my every day workstation setup.</title>
      <link>https://forwardingplane.net/post/workflow-and-my-every-day-workstation-setup/</link>
      <pubDate>Sun, 25 Nov 2012 00:03:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/workflow-and-my-every-day-workstation-setup/</guid>
      <description>&lt;p&gt;Recently, there was a &lt;a href=&#34;http://forum.packetpushers.net/showthread.php/309-Productivity-or-Social-Apps?p=1276&#34;&gt;thread over at Packet Pushers&lt;/a&gt; about what folks use for their daily workflow.  I quickly realized that my setup is pretty simple (as I like it) and relied on a large amount of terminal based tools, which makes sense since I have been a UNIX (or UNIX based) OS user since my migration from the original MacOS back in the 1990s.  Anyway, Since I wrote most of this up already, I thought I&amp;rsquo;d post it here:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Envoronment and Editing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Editor: VIM via Terminal.app or BBEdit. Occasionally Textedit, but primarily I use VIM&lt;br /&gt;
Calendar: iCalMail: &lt;a href=&#34;http://mailplaneapp.com/&#34;&gt;Mailplane&lt;/a&gt; ($24.95) and Mail.app (Free) (different accounts).Blogging software: Blogger interface or Wordpress editor depending on site.  Both Free.Screen capture: built in Mac hotkey (Apple+4), Free.Screen video capture: &lt;a href=&#34;http://www.evological.com/evocam.html&#34;&gt;Evocam&lt;/a&gt; or a clunky script I wrote that records to flv ($30)Reminder/ToDo: Apple reminders app (Free; works across all their platforms)Shell: zsh, of course (Free)&lt;br /&gt;
Network Diagram tool: &lt;a href=&#34;http://www.omnigroup.com/products/omnigraffle/&#34;&gt;OmniGraffle Professional&lt;/a&gt; ($199.99)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Communications&lt;/strong&gt;&lt;br /&gt;
IM: Skype, MS Lync and Messages.app (Free, Free, Free)&lt;br /&gt;
&lt;strong&gt;Virtualization&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;Virtual Box&lt;/a&gt; or &lt;a href=&#34;http://store.vmware.com/store/vmware/pd/productID.165310200/Currency.USD/?src=PaidSearch_Google_eBiz_Fusion_US_Brand&#34;&gt;VMWare Fusion&lt;/a&gt; on my laptop, depending on the application. See &lt;a href=&#34;http://forum.packetpushers.net/showthread.php/309-Productivity-or-Social-Apps?p=1276&#34;&gt;this post&lt;/a&gt; for good reasons. (Free, $50)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Random Apps&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;https://itunes.apple.com/us/app/caffeine/id411246225?mt=12&#34;&gt;Caffeine&lt;/a&gt; (Keep screen awake easily, prevents sleep mode; Free)  &lt;br /&gt;
&lt;a href=&#34;https://itunes.apple.com/us/app/growl/id467939042?mt=12&#34;&gt;Growl&lt;/a&gt; (Notifications; $3.99)&lt;a href=&#34;http://www.abyssoft.com/software/teleport/&#34;&gt;Teleport&lt;/a&gt; (Secure virtual KVM; Free)&lt;br /&gt;
&lt;a href=&#34;https://itunes.apple.com/us/app/datavault-password-manager/id408865957?mt=12&#34;&gt;DataVault Password Manager&lt;/a&gt; for password sync and storage ($9.99; may look into 1Password)&lt;br /&gt;
&lt;a href=&#34;http://db.tt/iIXz2oDO&#34;&gt;Dropbox&lt;/a&gt; for Cloud storage (Free, paid also available)&lt;br /&gt;
&lt;a href=&#34;https://spideroak.com/download/referral/1ddbb514c7eede1e37ad6411e76b549c&#34;&gt;Spideroak&lt;/a&gt; for Secure cloud folder sync (Free, Paid options available and worth the money)&lt;br /&gt;
&lt;a href=&#34;http://www.crashplan.com/&#34;&gt;Crashplan&lt;/a&gt; for Backup ($Varies depending on plan.  Free option available.  This app is amazing, check it out)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://itunes.apple.com/us/app/pocket/id568494494?mt=12&#34;&gt;Pocket&lt;/a&gt; for offline reading (Free)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Browser&lt;/strong&gt;&lt;br /&gt;
Chrome for day to day browsing  Disconnect and Collusion for privacy and blocking of tracking  Adblock  Flashblock  IPvfoo  Tapatalk Notifier   Tweetdeck&lt;br /&gt;
Safari for quick testingFirefox for stuff that won&amp;rsquo;t work in anything else.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A security oversight in Mail.app, or, a hidden bcc: field</title>
      <link>https://forwardingplane.net/post/a-security-oversight-in-mail-app-or-a-hidden-bcc-field/</link>
      <pubDate>Sat, 22 Oct 2011 08:40:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/a-security-oversight-in-mail-app-or-a-hidden-bcc-field/</guid>
      <description>&lt;p&gt;Recently I was poking around Mail.app, setting up my new machine. I like to keep redundant copies of everything, email being no exception. I have backups of all of my email dating back to 1998, for the most part. It has come in handy from time to time and I like it for reference reasons. It&amp;rsquo;s a small amount of actual data as far as space goes, and it&amp;rsquo;s easy to do. I remembered the days of using mutt for email (which really weren&amp;rsquo;t that long ago for me), and really liked the idea of setting a bcc of a separate address, not necessarily myself, but an email address inside of my administrative control, for CYA types of archiving. Upon looking, I saw no way to do this within the default apple Mail.app.&lt;/p&gt;

&lt;p&gt;Doing a bit of google searching, I found that this is pretty easily doable with a default write command. OK, awesome. This is good news. So I applied it:&lt;br /&gt;
(Open Terminal)&lt;br /&gt;
&lt;em&gt;defaults write com.apple.mail UserHeaders &amp;lsquo;{&amp;ldquo;Bcc&amp;rdquo; = &amp;ldquo;archive-address@domain.com&amp;rdquo;; }&amp;lsquo; &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Done. Great. So, lets test it. Send email and check bcc&amp;rsquo;d address.  Email is there.  Strange, however, the bcc field doesn&amp;rsquo;t show up, or show anything at all.  That&amp;rsquo;s right, there is absolutely no indication that this email is being bcc&amp;rsquo;d to another address.&lt;br /&gt;
This isn&amp;rsquo;t really a problem for me, since I know that I set it up.  What it does mean, though, is that this could be applied to an unsuspecting user account, with absolutely &lt;strong&gt;no authentication necessary,&lt;/strong&gt; and have every outgoing message silently sent to a harvesting account.  There is no easy way to check for this that I have found save for using terminal:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[buraglio@dalek:~ ] defaults read com.apple.mail UserHeaders                                   &lt;/em&gt;&lt;br /&gt;
&lt;em&gt;{&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;    Bcc = &amp;ldquo;archive-address@domain.com&amp;rdquo;;&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;}&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;OK, at least there is a way to tell.  Using the command &lt;em&gt;defaults read com.apple.mail UserHeaders&lt;/em&gt; from terminal will show the info, but the fact that it&amp;rsquo;s doable in such an obtuse way with no indication that mail is being bcc&amp;rsquo;d is a bit scary.&lt;br /&gt;
There is a preference pane that allows for tweaking of some of these &amp;ldquo;features&amp;rdquo;, it&amp;rsquo;s open source available &lt;a href=&#34;http://secrets.blacktree.com/&#34;&gt;here&lt;/a&gt;, called BlackTree Secrets.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Switching from MacPorts to Homebrew</title>
      <link>https://forwardingplane.net/post/switching-from-macports-to-homebrew/</link>
      <pubDate>Sat, 06 Aug 2011 17:22:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/switching-from-macports-to-homebrew/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve recently decided that even though I love the BSD style &lt;a href=&#34;http://www.macports.org&#34;&gt;MacPorts&lt;/a&gt; system, it can be too clunky to maintain and doesn&amp;rsquo;t handle dependancies as well as I&amp;rsquo;d like (much like the actual BSD ports collection). So, in doing a little looking I found that &lt;a href=&#34;http://www.finkproject.org/&#34;&gt;Fink&lt;/a&gt; is still out of date, but &lt;a href=&#34;http://mxcl.github.com/homebrew/&#34;&gt;Homebrew&lt;/a&gt; is very simple and also really elegant comparatively speaking.&lt;/p&gt;

&lt;p&gt;Since homebrew doesn&amp;rsquo;t wrk well with other packge systems installed, and I already&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d like to know what I had installed since this system has been in use for 2+ years, so I do a list and send it to a txt file:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;touch ~/Documents/installed.macports.txt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo port list installed &amp;gt; Documents/installed.macports.txt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo cat .macports/history &amp;gt;&amp;gt; ~/Documents/installed.macports.txt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then I remove the installed packages:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo port -f uninstall installed&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Per the instructions found on the &lt;a href=&#34;http://guide.macports.org/chunked/installing.macports.uninstalling.html&#34;&gt;MacPorts page&lt;/a&gt;, remove all of the directories as such:&lt;/p&gt;

&lt;p&gt;_sudo rm -rf \_&lt;/p&gt;

&lt;p&gt;_/opt/local \_&lt;/p&gt;

&lt;p&gt;_/Applications/DarwinPorts \_&lt;/p&gt;

&lt;p&gt;_/Applications/MacPorts \_&lt;/p&gt;

&lt;p&gt;_/Library/LaunchDaemons/org.macports.* \_&lt;/p&gt;

&lt;p&gt;_/Library/Receipts/DarwinPorts*.pkg \_&lt;/p&gt;

&lt;p&gt;_/Library/Receipts/MacPorts*.pkg \_&lt;/p&gt;

&lt;p&gt;_/Library/StartupItems/DarwinPortsStartup \_&lt;/p&gt;

&lt;p&gt;_/Library/Tcl/darwinports1.0 \_&lt;/p&gt;

&lt;p&gt;_/Library/Tcl/macports1.0 \_&lt;/p&gt;

&lt;p&gt;&lt;em&gt;~/.macports&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If this is an upgraded machine (say, from 10.6 to 10.7), you&amp;rsquo;ll need to also reinstall the Xcode Developer Tools via the app store before installing homebrew.&lt;/p&gt;

&lt;p&gt;After waiting forever to get XCode downloaded, and since it&amp;rsquo;s been installed via the App Store under Lion (10.7), I need to run the “Install Xcode” app that is placed in /Applications.&lt;/p&gt;

&lt;p&gt;Now I can &lt;a href=&#34;https://github.com/mxcl/homebrew/wiki/Installation&#34;&gt;Install homebrew&lt;/a&gt; via the handy cli command:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo /usr/bin/ruby -e &amp;ldquo;$(curl -fsSL &lt;a href=&#34;https://raw.github.com/gist/323731)&amp;quot;&#34;&gt;https://raw.github.com/gist/323731)&amp;quot;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll then see something like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;\==&amp;gt; This script will install:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/bin/brew&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/Library/Formula/&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/Library/Homebrew/&amp;hellip;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;\==&amp;gt; The following directories will be made group writable:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share/man&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/lib/pkgconfig&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share/man/man8&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share/doc&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/bin&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/include&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/lib&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;\==&amp;gt; The following directories will have their group set to staff:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share/man&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/lib/pkgconfig&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share/man/man8&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share/doc&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/bin&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/include&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/lib&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/usr/local/share&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Press enter to continue&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you want to continue, hit enter.  In my case, I saw this:&lt;/p&gt;

&lt;p&gt;\==&amp;gt; /usr/bin/sudo /bin/chmod o+w /usr/local&lt;/p&gt;

&lt;p&gt;\==&amp;gt; /usr/bin/sudo /bin/chmod g+w /usr/local/share/man /usr/local/lib/pkgconfig /usr/local/share/man/man8 /usr/local/share/doc /usr/local/bin /usr/local/include /usr/local/lib /usr/local/share&lt;/p&gt;

&lt;p&gt;\==&amp;gt; /usr/bin/sudo /usr/bin/chgrp staff /usr/local/share/man /usr/local/lib/pkgconfig /usr/local/share/man/man8 /usr/local/share/doc /usr/local/bin /usr/local/include /usr/local/lib /usr/local/share&lt;/p&gt;

&lt;p&gt;\==&amp;gt; Downloading and Installing Homebrew&amp;hellip;&lt;/p&gt;

&lt;p&gt;\==&amp;gt; /usr/bin/sudo /bin/chmod o-w /usr/local&lt;/p&gt;

&lt;p&gt;Warning: Now install Xcode: &lt;a href=&#34;http://developer.apple.com/technologies/xcode.html&#34;&gt;http://developer.apple.com/technologies/xcode.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Warning: The following *evil* dylibs exist in /usr/local/lib&lt;/p&gt;

&lt;p&gt;They may break builds or worse. You should consider deleting them:&lt;/p&gt;

&lt;p&gt;/usr/local/lib/libfuse.2.dylib&lt;/p&gt;

&lt;p&gt;/usr/local/lib/libfuse_ino64.2.dylib&lt;/p&gt;

&lt;p&gt;\==&amp;gt; Installation successful!&lt;/p&gt;

&lt;p&gt;Now type: brew help&lt;/p&gt;

&lt;p&gt;I chose to leave those libraries and deal with the fallout as I saw it.&lt;/p&gt;

&lt;p&gt;Now I need to install the base repository manager that brew uses:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo brew install git&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then I can update the brew repository:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo brew update&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s basically it. Now I can install apps via HomeBrew using the simple command:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo brew install&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I chose to install nmap as a test:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo brew install nmap&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;re done. Enjoy your HomeBrew =)&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sync catalogs (iPhoto, iTunes) on a mac</title>
      <link>https://forwardingplane.net/post/sync-catalogs-iphoto-itunes-on-a-mac/</link>
      <pubDate>Fri, 18 Feb 2011 12:46:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sync-catalogs-iphoto-itunes-on-a-mac/</guid>
      <description>&lt;p&gt;I have huge iPhoto and iTunes catalogs. This can present a problem for both loading the applications and for backup. I have learned to deal with the Application load times, but backups are very important to me.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d gone through the iPhoto backup process and restore more than once, and I didn&amp;rsquo;t like the fact that I didn&amp;rsquo;t have an offsite backup, so I paid for a flickr pro account ($24/yr, supports iPhoto export and RAW format). I had been simply copying my iTunes over to my NAS for a long time (as well as using Time Machine), but that became a chore because I had not automated it.&lt;/p&gt;

&lt;p&gt;After about a month of off-and-on searching, I finally went back to my UNIX roots and decided on rsync.&lt;/p&gt;

&lt;p&gt;You simply can&amp;rsquo;t beat rsync.&lt;/p&gt;

&lt;p&gt;I wrote a very simple shell script to call from cron every night to sync whatever IU thought I needed to sync to my NAS (it works to any other source, really, due to rsync&amp;rsquo;s flexibility).&lt;/p&gt;

&lt;p&gt;This is my simple rsync script:&lt;/p&gt;

&lt;p&gt;#!/bin/sh&lt;/p&gt;

&lt;p&gt;# Sync catalogs to externally mounted volume.&lt;/p&gt;

&lt;p&gt;# nick@buraglio.com&lt;/p&gt;

&lt;p&gt;RSYNC=&amp;lsquo;/usr/bin/rsync&amp;rsquo;&lt;/p&gt;

&lt;p&gt;ITUNESSRC=&amp;lsquo;/Users/Shared/iTunes&amp;rsquo; # iTunes Folder&lt;/p&gt;

&lt;p&gt;ITUNESDST=&amp;lsquo;/Volumes/Volume_1/Catalog\ Backups/iTunes&amp;rsquo; #Destination for iTunes Backup&lt;/p&gt;

&lt;p&gt;IPHOTOSRC=&amp;lsquo;/Users/Shared/iPhoto&amp;rsquo; #iPhoto Folder&lt;/p&gt;

&lt;p&gt;IPHOTODST=&amp;lsquo;/Volumes/Volume_1/Catalog\ Backups/iPhoto&amp;rsquo; #Destination for iPhoto Backup&lt;/p&gt;

&lt;p&gt;PARAMS=&amp;lsquo;&amp;ndash;ignore-existing &amp;ndash;delete &amp;ndash;progress &amp;ndash;recursive &amp;ndash;perms &amp;ndash;times &amp;ndash;size-only &amp;ndash;whole-file&amp;rsquo; # Any parameters for rsync&lt;/p&gt;

&lt;p&gt;EXCLUDEITUNES=&amp;lsquo;-exclude=&amp;rsquo;.*&amp;rsquo; -exclude=&amp;rsquo;*.m4v&amp;rdquo; # Files or folders for exclusion&lt;/p&gt;

&lt;p&gt;EXCLUDEIPHOTO=&amp;lsquo;-exclude=&amp;rsquo;.*&amp;rdquo; # Files or folders for exclusion&lt;/p&gt;

&lt;p&gt;$RSYNC $PARAMS $EXCLUDEITUNES $ITUNESSRC $ITUNESDST&lt;/p&gt;

&lt;p&gt;$RSYNC $PARAMS $EXCLUDEIPHOTO $IPHOTOSRC $IPHOTODST&lt;/p&gt;

&lt;p&gt;Thats it. Since the &amp;ldquo;&amp;ndash;delete&amp;rdquo; flag is in place, I recommend use of the &amp;ldquo;&amp;ndash;dry-run&amp;rdquo; flag the first time to make sure it does what you want, since delete &lt;strong&gt;will&lt;/strong&gt; remove everything in it&amp;rsquo;s path and make the folder match. I just have this run from cron every day using this line in my users crontab.&lt;/p&gt;

&lt;p&gt;@daily  /opt/local/bin/rsynccatalogs.sh&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Seagate FreeAgent 3T drive on a mac</title>
      <link>https://forwardingplane.net/post/seagate-freeagent-3t-drive-on-a-mac/</link>
      <pubDate>Fri, 04 Feb 2011 20:00:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/seagate-freeagent-3t-drive-on-a-mac/</guid>
      <description>&lt;p&gt;I was recently helping my brother-in-law out with the new &lt;a href=&#34;http://www.amazon.com/gp/product/B0045JLPNI?ie=UTF8&amp;amp;tag=nickburaglioc-20&amp;amp;linkCode=as2&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=B0045JLPNI&#34;&gt;Seagate FreeAgent GoFlex Desk 3 TB USB 3.0 External Hard Drive&lt;/a&gt;&lt;img src=&#34;http://www.assoc-amazon.com/e/ir?t=nickburaglioc-20&amp;amp;l=as2&amp;amp;o=1&amp;amp;a=B0045JLPNI&#34; alt=&#34;&#34; /&gt; he had purchased to do time machine backups on his mac. I personally have the 2t version and have been pretty happy with it, save for one small incident that I think was my fault that required some basic data recovery.&lt;br /&gt;
Since the drive comes in a file system that is not HFS+ Journaled, it needed to be reformatted to support time machine backups.&lt;br /&gt;
Simple, right? &amp;ldquo;A five minute process&amp;rdquo; I told him.&lt;br /&gt;
Well, I was wrong. This drive just could not be formatted or re-partitioned using the standard OSX disk utility. I walked him through it on the phone. Partition failure. It threw some cryptic error that I had not seen before in 15 years of using a mac. I kinda figured it was something he was missing since I&amp;rsquo;m pretty awful at phone support, and if it wasn&amp;rsquo;t, I wanted to see the error, so I drive over there.&lt;br /&gt;
Upon arriving, low and behold, it was in fact an error I&amp;rsquo;d never seen. I tried 3 more times to partition and format the drive and once just to format it. Same errors every time, it would start and then throw an error that it had failed or that it had lost communication with the drive.&lt;br /&gt;
So, to test, I dropped to the trusty cli to see if I could do it from there.&lt;/p&gt;

&lt;p&gt;From the Terminal app (/Applications/Utilities/Terminal) I issued the command&lt;/p&gt;

&lt;p&gt;diskutil eraseDisk HFS+ Backup disk1&lt;/p&gt;

&lt;p&gt;Which was able to quickly accomplish the task. From there, I was able to mount and manipulate it in the Disk Utility (/Applicaations/Utilities/Disk Utility). Since I had not enabled the journal from the original command I reformatted the drive with MacOS X Entended (Journaled) and then it was ready to be a Time machine disk.&lt;/p&gt;

&lt;p&gt;I believe I could have done this all in one step using the command&lt;/p&gt;

&lt;p&gt;diskutil eraseDisk &amp;ldquo;Journaled HFS+&amp;rdquo; Backup disk1.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still unsure why Disk Utility would not work.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving JunOS code between SRX cluster nodes</title>
      <link>https://forwardingplane.net/post/moving-junos-code-between-srx-cluster-nodes/</link>
      <pubDate>Sat, 08 Jan 2011 02:11:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/moving-junos-code-between-srx-cluster-nodes/</guid>
      <description>&lt;p&gt;Regardless of the fact that there is now a good ISSU-like service for the SRX (named Low-Impact Cluster Upgrade; LICU for short), if you&amp;rsquo;re upgrading your Active/Active cluster from something that isn&amp;rsquo;t 10.4, or if you just aren&amp;rsquo;t comfortable with how baked LICU actually is, you&amp;rsquo;ll need to know how to move the junos code around. This is easy if you have physical access to both nodes, but for those that have.&lt;br /&gt;
This was a problem for me in that our cluster nodes have geographic diversity. In other words, they&amp;rsquo;re far apart. Being how I am, I don&amp;rsquo;t want to trek all around to hand load code from a USB key and being how the SRX cluster works, I can&amp;rsquo;t easily get to node1 over the network since it&amp;rsquo;s part of a cluster.&lt;/p&gt;

&lt;p&gt;Low and behold, there is a very simple way to move this code around over the control network. Enter our old friend &lt;a href=&#34;http://www.mkssoftware.com/docs/man1/rcp.1.asp&#34;&gt;rcp&lt;/a&gt;.&lt;br /&gt;
Log into node0 and load the code as normal.&lt;/p&gt;

&lt;p&gt;node0&amp;gt;file copy scp://buraglio@desktop.domain.edu/Users/buraglio/Downloads/junos-srx5000-10.4R1.9-domestic.tgz /var/tmp/junos-srx5000-10.4R1.9-domestic.tgz&lt;/p&gt;

&lt;p&gt;From here, it&amp;rsquo;s really easy but will require dropping to the unix (FreeBSD, Yay!) shell so I&amp;rsquo;m always careful of what I&amp;rsquo;m typing and by all means be careful.&lt;/p&gt;

&lt;p&gt;{primary:node0}&lt;/p&gt;

&lt;p&gt;buraglio@node0&amp;gt; start shell&lt;/p&gt;

&lt;p&gt;% su&lt;/p&gt;

&lt;p&gt;Password:&lt;/p&gt;

&lt;p&gt;root@node0% rcp -T /var/tmp/junos-srx5000-10.4R1.9-domestic.tgz node1:/var/tmp/&lt;/p&gt;

&lt;p&gt;Thats pretty much it. Upgrade per the normal active/active procedure.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://kb.juniper.net/InfoCenter/index?page=content&amp;amp;id=KB17410&amp;amp;actp=RSS&amp;amp;smlogin=true&#34;&gt;Here&lt;/a&gt; is a Juniper knowledge base article on this procedure for second reference.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JunOS ISSU</title>
      <link>https://forwardingplane.net/post/junos-issu/</link>
      <pubDate>Thu, 30 Dec 2010 00:26:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/junos-issu/</guid>
      <description>&lt;p&gt;I recently needed to upgrade a few MX480 routers and decided that it would be a good opportunity to get some experience with Juniper&amp;rsquo;s in service software upgrade.&lt;br /&gt;
I&amp;rsquo;d read a bit about it but I&amp;rsquo;d not had the chance to really use it. It&amp;rsquo;s pretty straightforward and it does what it claims. The following are my notes from rolling through this on my test lab MX480.&lt;/p&gt;

&lt;p&gt;A few things are necessary to get going with ISSU, first and foremost, you need to have a box with two routing engines. Check.&lt;br /&gt;
Second, some configuration is necessary to make this all work.&lt;br /&gt;
The boxes need to be running nonstop-routing, they need to be syncronizing the configs, and they need to have graceful-switchover enabled.&lt;/p&gt;

&lt;p&gt;Here are the steps I went through on my vanilla test box to make this work:&lt;/p&gt;

&lt;p&gt;root# set chassis redundancy graceful-switchover&lt;br /&gt;
root# set routing-options nonstop-routing&lt;br /&gt;
root# set system commit synchronize&lt;/p&gt;

&lt;p&gt;If you already have those options set then you don&amp;rsquo;t need to enter those commands.&lt;/p&gt;

&lt;p&gt;With those options set, you&amp;rsquo;re ready to do the ISSU.&lt;/p&gt;

&lt;p&gt;root&amp;gt; request system software in-service-upgrade /var/tmp/jinstall-10.3R2.11-domestic-signed.tgz&lt;br /&gt;
Chassis ISSU Check Done&lt;br /&gt;
ISSU: Validating Image&lt;br /&gt;
Checking compatibility with configuration&lt;br /&gt;
Initializing&amp;hellip;&lt;br /&gt;
Using jbase-10.1R1.8&lt;br /&gt;
vn_read_compressed_block: invalid block index 550&lt;br /&gt;
Verified manifest signed by PackageProduction_10_1_0&lt;br /&gt;
Verified jbase-10.1R1.8 signed by PackageProduction_10_1_0&lt;br /&gt;
Using /var/tmp/jinstall-10.3R2.11-domestic-signed.tgz&lt;br /&gt;
&amp;hellip;.&lt;/p&gt;

&lt;p&gt;This takes a LONG time and generates a lot of scroll.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll see long pauses and more text like&lt;/p&gt;

&lt;p&gt;Saving package file in /var/sw/pkg/jinstall-10.3R2.11-domestic-signed.tgz &amp;hellip;&lt;br /&gt;
Saving state for rollback &amp;hellip;&lt;br /&gt;
Backup upgrade done&lt;br /&gt;
Rebooting Backup RE&lt;/p&gt;

&lt;p&gt;Rebooting re1&lt;br /&gt;
ISSU: Backup RE Prepare Done&lt;br /&gt;
Waiting for Backup RE reboot&lt;/p&gt;

&lt;p&gt;Then interesting thing start to show up:&lt;/p&gt;

&lt;p&gt;GRES operational&lt;br /&gt;
Initiating Chassis In-Service-Upgrade&lt;br /&gt;
Chassis ISSU Started&lt;br /&gt;
ISSU: Preparing Daemons&lt;br /&gt;
ISSU: Daemons Ready for ISSU&lt;br /&gt;
ISSU: Starting Upgrade for FRUs&lt;br /&gt;
ISSU: Preparing for Switchover&lt;/p&gt;

&lt;p&gt;This is where the magic starts. The nonstop-routing and hitless failover come into play as the route engines switch over. Very cool.&lt;/p&gt;

&lt;p&gt;On the console of the backup RE (now the master) you&amp;rsquo;ll see messages like&lt;/p&gt;

&lt;p&gt;Message from syslogd@ at Dec 29 19:11:57 &amp;hellip;&lt;br /&gt;
fpc0 RDP: Remote side reset connection: rdp.(fpc0:22528).(serverRouter:ppm)&lt;/p&gt;

&lt;p&gt;Message from syslogd@ at Dec 29 19:11:57 &amp;hellip;&lt;br /&gt;
fpc1 RDP: Remote side reset connection: rdp.(fpc1:4096).(serverRouter:ppm)&lt;/p&gt;

&lt;p&gt;these are normal.&lt;/p&gt;

&lt;p&gt;Some things that I didn&amp;rsquo;t expect, but probably should have:&lt;/p&gt;

&lt;p&gt;The old master stays the backup route engine after the ISSU&lt;br /&gt;
The old master does NOT reboot into the new code, instead it stays on the original code requiring a manual reboot (unless, I asume, you add the &amp;ldquo;reboot&amp;rdquo; command on to the original upgrade command).&lt;br /&gt;
On routers that have logical systems configured on them, only the master logical system supports nonstop active routing.&lt;/p&gt;

&lt;p&gt;I did the reboot manually&lt;/p&gt;

&lt;p&gt;root&amp;gt; request system reboot&lt;br /&gt;
Reboot the system ? [yes,no] (no) yes&lt;/p&gt;

&lt;p&gt;*** FINAL System shutdown message from root@ ***&lt;br /&gt;
System going down IMMEDIATELY&lt;/p&gt;

&lt;p&gt;Shutdown NOW!&lt;br /&gt;
Reboot consistency check bypassed - jinstall 10.3R2.11 will complete installation upon reboot&lt;br /&gt;
[pid 65006]&lt;/p&gt;

&lt;p&gt;and then did a failover to the old master.&lt;/p&gt;

&lt;p&gt;root&amp;gt; request chassis routing-engine master switch&lt;/p&gt;

&lt;p&gt;&amp;hellip;.and thats pretty much it. Upgrade complete.&lt;/p&gt;

&lt;p&gt;This is a really useful tool that allows for very minimal interruption during software upgrades. I&amp;rsquo;d recommend reading &lt;a href=&#34;http://www.juniper.net/us/en/local/pdf/whitepapers/2000280-en.pdf&#34;&gt;this&lt;/a&gt; white paper on ISSU if you&amp;rsquo;re interested into diving into deeper details.&lt;/p&gt;

&lt;p&gt;Basically what ISSU does is to install junos on the backup route engine (re1) as normal, reboot it, validate and switch over to re1 and do the upgrade on the primary (now backup) route engine. The entire process took about 40 minutes on my mx480.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NFS mounting a NAS with MacOS 10.6 (Snow Leopard)</title>
      <link>https://forwardingplane.net/post/nfs-mounting-a-nas-with-macos-10-6-snow-leopard/</link>
      <pubDate>Mon, 06 Sep 2010 11:00:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nfs-mounting-a-nas-with-macos-10-6-snow-leopard/</guid>
      <description>&lt;p&gt;I know this is &lt;a href=&#34;http://hints.macworld.com/article.php?story=20090830073912179&#34;&gt;documented elsewhere&lt;/a&gt;, but this was a pain for me, so I wanted to take some notes.  I have several Snow Leopard (MAcOS 10.6) Macs and a Netgear DNS-323.  I want to mount the drive using NFS and any good UNIX admin would.&lt;br /&gt;
Unlike older versions of the Mac OS, NFS mounts are now handled under the Disk Utility application (which seems odd to me, but whatever).&lt;br /&gt;
So, to make this work right I had to do the following:&lt;br /&gt;
First, I had to make sure that the NFS Add-on was installed on the DNS-323.&lt;br /&gt;
Second, Open up Disk utility and go to file, NFS mounts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_t5EEUl7btNU/TIR2joSzRDI/AAAAAAAAC_A/jIWYuHwgZ-c/s1600/Screen+shot+2010-09-06+at+12.02.59+AM.png&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/_t5EEUl7btNU/TIR2joSzRDI/AAAAAAAAC_A/jIWYuHwgZ-c/s320/Screen+shot+2010-09-06+at+12.02.59+AM.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will open up a new window like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_t5EEUl7btNU/TIR2u9UMXQI/AAAAAAAAC_I/oZBsg4qkZ3Y/s1600/Screen+shot+2010-09-06+at+12.03.18+AM.png&#34;&gt;&lt;img src=&#34;http://2.bp.blogspot.com/_t5EEUl7btNU/TIR2u9UMXQI/AAAAAAAAC_I/oZBsg4qkZ3Y/s320/Screen+shot+2010-09-06+at+12.03.18+AM.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From here, add your NFS mount location that you&amp;rsquo;ve specified within the NFS add-on (setting that part up is beyond the scope of this tutorial, you should know how to do that if you&amp;rsquo;ve gotten this far).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Viewing ipv6 router advertisements</title>
      <link>https://forwardingplane.net/post/viewing-ipv6-router-advertisements/</link>
      <pubDate>Fri, 03 Sep 2010 19:00:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/viewing-ipv6-router-advertisements/</guid>
      <description>&lt;p&gt;I knew a tool like this had to exist, but I had never needed to look in the past.  While debugging a RA problem, I come upon the need to view IPv6 router advertisements.  How can one do this?  tcpdump?  Yeah, I guess that could work.  It&amp;rsquo;s almost like using a bulldozer when a wheelbarrow is all you need, though.  I could use &lt;a href=&#34;http://ndpmon.sourceforge.net/&#34;&gt;ndpmon&lt;/a&gt;, I suppose, but that, too seems like overkill.&lt;br /&gt;
So, the search began. After about 10 seconds of google searching&amp;hellip;.. Success!  A tool, does in fact exist for viewing exactly that type of packet.&lt;br /&gt;
Enter &lt;a href=&#34;http://gd.tuwien.ac.at/linuxcommand.org/man_pages/radvdump8.html&#34;&gt;radvdump&lt;/a&gt;.  It is part of the marvelous &lt;a href=&#34;http://www.freebsd.org/cgi/man.cgi?query=rtadvd&amp;amp;sektion=8&#34;&gt;rtadvd&lt;/a&gt; project.  It also exists in &lt;a href=&#34;http://www.macports.org/&#34;&gt;MacPorts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sweet, now I can see my IPv6 router advertisements in a very simple manner.  The syntax is very straightforward, the command sudo /opt/local/sbin/radvdump will yield you pretty much everything you need to know about what is in your router advertisement:&lt;/p&gt;

&lt;p&gt;# radvd configuration generated by radvdump 1.6&lt;br /&gt;
# based on Router Advertisement from fe80::20d:b9ff:fe18:8ca1&lt;br /&gt;
# received by interface en0&lt;/p&gt;

&lt;p&gt;interface en0&lt;br /&gt;
{&lt;br /&gt;
AdvSendAdvert on;&lt;br /&gt;
# Note: {Min,Max}RtrAdvInterval cannot be obtained with radvdump&lt;br /&gt;
AdvManagedFlag off;&lt;br /&gt;
AdvOtherConfigFlag off;&lt;br /&gt;
AdvReachableTime 0;&lt;br /&gt;
AdvRetransTimer 0;&lt;br /&gt;
AdvCurHopLimit 64;&lt;br /&gt;
AdvDefaultLifetime 1800;&lt;br /&gt;
AdvHomeAgentFlag off;&lt;br /&gt;
AdvDefaultPreference medium;&lt;br /&gt;
AdvSourceLLAddress on;&lt;/p&gt;

&lt;p&gt;prefix 2001:470:xxxx:xxx::/64&lt;br /&gt;
{&lt;br /&gt;
AdvValidLifetime 2592000;&lt;br /&gt;
AdvPreferredLifetime 604800;&lt;br /&gt;
AdvOnLink on;&lt;br /&gt;
AdvAutonomous on;&lt;br /&gt;
AdvRouterAddr off;&lt;br /&gt;
}; # End of prefix definition&lt;/p&gt;

&lt;p&gt;prefix 2001:470:xxxx:xxx::/64&lt;br /&gt;
{&lt;br /&gt;
AdvValidLifetime 2592000;&lt;br /&gt;
AdvPreferredLifetime 604800;&lt;br /&gt;
AdvOnLink on;&lt;br /&gt;
AdvAutonomous on;&lt;br /&gt;
AdvRouterAddr off;&lt;br /&gt;
}; # End of prefix definition&lt;/p&gt;

&lt;p&gt;}; # End of interface definition&lt;/p&gt;

&lt;p&gt;Once you have all of that working, head over to see the &lt;a href=&#34;http://www.kame.net/&#34;&gt;dancing kame&lt;/a&gt; (if you&amp;rsquo;re old school) of just head to &lt;a href=&#34;http://www.buraglio.com/&#34;&gt;my main domain&lt;/a&gt; and it&amp;rsquo;ll show you your ipv4 or ipv6 address at the top. Alternatively, you can use &lt;a href=&#34;http://www.google.com/intl/en/ipv6/&#34;&gt;google over ipv6&lt;/a&gt; in a number of &lt;a href=&#34;http://ipv6.google.com/&#34;&gt;ways&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updating SRX IDP signatures</title>
      <link>https://forwardingplane.net/post/updating-srx-idp-signatures/</link>
      <pubDate>Thu, 02 Sep 2010 18:16:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/updating-srx-idp-signatures/</guid>
      <description>&lt;p&gt;*IDP signatures need to be updated often.  On the SRX platform, there is also the notion of a &amp;ldquo;detector&amp;rdquo;.  This also meeds to be updated on a regular basis. it seems.  Over the past few weeks, we&amp;rsquo;ve needed to update the IDP signatures and detector on our SRX 5800 cluster several times, and the results have normally been fine.&lt;br /&gt;
Updating the IDP signatures has never been &lt;strong&gt;that&lt;/strong&gt; big of a problem (see postings about updating stuff on cluster nodes).  But we ran into issues due to the fact that we&amp;rsquo;d recently disabled application id to troubleshoot another problem.  This was basically causing all of our updates to fail on node1 (the secondary node) when using our &lt;a href=&#34;http://www.juniper.net/techpubs/software/junos/junos82/swconfig82-automation/html/op-scripts-overview.html&#34;&gt;op script&lt;/a&gt; to push the updates over (sorry, I can&amp;rsquo;t share it).&lt;/p&gt;

&lt;p&gt;A few things that I like to make sure to run before and after all of my SRX work are the following:&lt;/p&gt;

&lt;p&gt;show chassis cluster status&lt;br /&gt;
show ospf neighbor brief&lt;br /&gt;
show security idp attack table&lt;/p&gt;

&lt;p&gt;If I&amp;rsquo;m doing work on the IDP engine, I also want to see the status of that:&lt;/p&gt;

&lt;p&gt;request security idp security-package download status&lt;br /&gt;
request security idp security-package install status&lt;br /&gt;
show services application-identification counter*&lt;/p&gt;

&lt;p&gt;Anyway, for anyone else running into this odd behavior, to finally update it was a simple matter of deleting app-id before running the updates.&lt;/p&gt;

&lt;p&gt;edit &lt;br /&gt;
delete services application-id&lt;br /&gt;
commit comment &amp;ldquo;delete services application-id&amp;rdquo; &lt;br /&gt;
request security idp security-package download full-update&lt;br /&gt;
request security idp security-package install &lt;br /&gt;
op instlll-idp-updates&lt;/p&gt;

&lt;p&gt;At that point run the status commands request security idp security-package install status. It should yield something like Done;Attack DB update : successful on both nodes.&lt;/p&gt;

&lt;p&gt;*It should be noted that Application ID is now in services, whereas I believe it used to be down in security.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RYU OpenFlow controller</title>
      <link>https://forwardingplane.net/post/435/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/435/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://osrg.github.com/ryu/index.html&#34;&gt;Ryu&lt;/a&gt;, an openflow controller, was new to me. After doing 5 minutes of reading I knew I needed to get it up in the lab. The thing that caught my eye was that the project page was boasting support for OpenStack. Now, I don;t really have much experience with openstack, but it has a cult like following and it&amp;rsquo;s on my short list of stuff to get involved with. This seemed like a great excuse.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
