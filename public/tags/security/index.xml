<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on ForwardingPlane.net</title>
    <link>https://forwardingplane.net/tags/security/</link>
    <description>Recent content in Security on ForwardingPlane.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2019, all rights reserved.</copyright>
    <lastBuildDate>Wed, 29 May 2019 18:17:13 +0000</lastBuildDate>
    
        <atom:link href="https://forwardingplane.net/tags/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building a dynamic security infrastructure [in a box - with SDN]</title>
      <link>https://forwardingplane.net/post/building-a-dynamic-security-infrastructure-in-a-box-with-sdn/</link>
      <pubDate>Wed, 29 May 2019 18:17:13 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/building-a-dynamic-security-infrastructure-in-a-box-with-sdn/</guid>
      <description>&lt;p&gt;Years ago I wrote about building a &lt;a href=&#34;https://www.forwardingplane.net/2013/07/building-a-secured-network-in-a-box/&#34;&gt;secure network in a box&lt;/a&gt;. Over a weekend I decided to revisit this concept thanks to a colleague at work wanting to do something similar. It got me thinking “a lot has changed since I last did this” and it felt like time to revisit it. Well, disappointment wasn’t in the cards because it’s easier, smarter, and more flexible now that it was back then. As I noted back in 2013 when I wrote that last post, OVS was a lot less well traveled and, frankly, there was not a reasonable controller that I could use in production for OpenFlow integration. I’ve since standardized on &lt;a href=&#34;https://www.proxmox.com/en/&#34;&gt;ProxMox&lt;/a&gt; for my lab and production virtualization and have espoused on every available occasion the usefulness of the &lt;a href=&#34;https://www.faucet.nz&#34;&gt;Faucet SDN controller&lt;/a&gt;. Both play fundamental roles in this project. This is significantly easier than I expected - primarily due to the use of faucet for controlling the OVS switch. It’s fairly straightforward, so I won’t go into the step by step details here since the projects have good install and support docs. Proxmox has support for OVS, so just install it using apt and create an OVS switch in the GUI interface. Faucet has &lt;a href=&#34;https://docs.faucet.nz/en/latest/&#34;&gt;amazingly complete documentation&lt;/a&gt; and even a &lt;a href=&#34;https://docs.faucet.nz/en/latest/installation.html#installing-on-raspberry-pi&#34;&gt;raspberry pi image&lt;/a&gt; (if you’re still thinking “OpenFlow is dead, isn’t it?”, have a listen to &lt;a href=&#34;https://blog.ipspace.net/2019/04/using-faucet-to-build-sc18-network-with.html&#34;&gt;this podcast&lt;/a&gt; I did with Ivan Pepelnjak). From there, install a &lt;a href=&#34;https://securityonion.net/&#34;&gt;security option VM&lt;/a&gt; (or any other tool you want to capture data with). Once you have the OVS switch, the controller, and the VM up and running getting data to it is as simple as issuing the comments to configure a controller. I my case the command was:```
sudo ovs-vsctl set-controller vmbr4 tcp:10.16.9.12:6653 tcp:10.16.9.12:6654&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-In my lab design the architecture was as such ![Faucet OVS Proxmox Security](https://www.forwardingplane.net/wp-content/uploads/2019/05/Faucet-OVS-Proxmox-Security.jpg &#34;Faucet OVS Proxmox Security.jpg&#34;) The two switches on the right are physical and span all uplink data via two physical ports into my proxmox host. Everything else is done virtually in OVS. Once you have the controller setup, the data coming in, and the host listening, you can validate you have the correct controller, interfaces and ports in ovs.```&#34; data-lang=&#34;In my lab design the architecture was as such ![Faucet OVS Proxmox Security](https://www.forwardingplane.net/wp-content/uploads/2019/05/Faucet-OVS-Proxmox-Security.jpg &#34;Faucet OVS Proxmox Security.jpg&#34;) The two switches on the right are physical and span all uplink data via two physical ports into my proxmox host. Everything else is done virtually in OVS. Once you have the controller setup, the data coming in, and the host listening, you can validate you have the correct controller, interfaces and ports in ovs.```&#34;&gt;root@pve1:~# ovs-vsctl show
75b4bc7f-4e00-45c2-8919-b043cbaf509d
Bridge &amp;#34;vmbr4&amp;#34;
Controller &amp;#34;tcp:10.16.9.12:6654&amp;#34;
Controller &amp;#34;tcp:10.16.9.12:6653&amp;#34;
is\_connected: true
Port &amp;#34;enx00051ba65ece&amp;#34;
Interface &amp;#34;enx00051ba65ece&amp;#34;
Port &amp;#34;tap115i1&amp;#34;
Interface &amp;#34;tap115i1&amp;#34;
Port &amp;#34;vmbr4&amp;#34;
Interface &amp;#34;vmbr4&amp;#34;
type: internal
Port &amp;#34;eno2&amp;#34;
Interface &amp;#34;eno2&amp;#34;
ovs\_version: “2.7.0&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Listing interfaces in OVS can be a helpful way to aid in building the faucet configuration```
root@pve1:~# ovs-vsctl &amp;ndash;columns=ofport,name list interface
ofport : 65534
name : &amp;ldquo;vmbr4&amp;rdquo;&lt;/p&gt;

&lt;p&gt;ofport              : 1
name : &amp;ldquo;eno2&amp;rdquo;&lt;/p&gt;

&lt;p&gt;ofport              : 4
name : &amp;ldquo;tap115i1&amp;rdquo;&lt;/p&gt;

&lt;p&gt;ofport              : 2
name : &amp;ldquo;enx00051ba65ece&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-For spanning the data into the VM, the basic configuration within faucet looks like this and should reside in /etc/faucet/faucet.yaml. The real meat here is the mirror statement on port 4.```&#34; data-lang=&#34;For spanning the data into the VM, the basic configuration within faucet looks like this and should reside in /etc/faucet/faucet.yaml. The real meat here is the mirror statement on port 4.```&#34;&gt;dps:
    proxovs1:
        dp\_id: 0x51ba65ece
        hardware: &amp;#34;Open vSwitch&amp;#34;
        interfaces:
            65534:
                name: &amp;#34;vmbr4&amp;#34;
                description: &amp;#34;ProxMox OVS vmbr4&amp;#34;
                native\_vlan: servernet
            1:
                name: &amp;#34;eno2&amp;#34;
                description: &amp;#34;Span from sw1&amp;#34;
                native\_vlan: servernet
            2:
                name: &amp;#34;enx00051ba65ece&amp;#34;
                description: &amp;#34;Span from sw2&amp;#34;
                native\_vlan: servernet
            4:
                name: &amp;#34;tap115i1&amp;#34;
                description: &amp;#34;ProxMox OVS vmbr4&amp;#34;
                output\_only: True
                mirror: \[1,2\]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be fairly easily adjusted to mirror all internal, east-west traffic in a virtualization farm.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS - the treasure trove of information your ISP can see</title>
      <link>https://forwardingplane.net/post/dns-the-treasure-trove-of-information-your-isp-can-see/</link>
      <pubDate>Mon, 10 Dec 2018 10:23:42 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/dns-the-treasure-trove-of-information-your-isp-can-see/</guid>
      <description>&lt;p&gt;In recent years, the nature of &lt;a href=&#34;http://fortune.com/2017/11/23/net-neutrality-explained-what-it-means-and-why-it-matters/&#34;&gt;privacy on the internet&lt;/a&gt; has become a very important topic amongst those concerned with the now lack of &lt;a href=&#34;https://www.theverge.com/2017/12/14/16776154/fcc-net-neutrality-vote-results-rules-repealed&#34;&gt;net neutrality&lt;/a&gt;. The de-facto mechanism for dealing with privacy has been to &amp;ldquo;&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;SSL all the things&lt;/a&gt;&amp;rdquo;, which I am very much in favor of. What many do not realize, though, is that simply using SSL for the traffic that transits a given ISP still leaves a wealth of thick, rich, delicious personal data still easily available to your ISP to harvest, sell, and do with as they please. This data comes in the form of DNS queries. DNS is the nearly-always-forgotten, crucial aspect of how the internet functions. Without DNS, nothing works. Everything appears broken and manifest as what appears to be a networking problem. ISPs typically provide what is called a &lt;a href=&#34;https://umbrella.cisco.com/blog/2014/07/16/difference-authoritative-recursive-dns-nameservers/&#34;&gt;recursive resolver&lt;/a&gt;, which for most people is handed down by a local provider to the customer premise equipment (CPE; usually a modem or optical terminal of some kind) that they install at a residence. This CPE then hands that resolver to your clients that use it to - you guessed it - recursively resolve DNS queries. These queries can be logged and then mined for browsing habits, etc. Anyone that has ever done any network forensics will know straight away that the value of the information contained in DNS query logs is very, very high. &lt;/p&gt;

&lt;p&gt;What this means is that even though a privacy conscious individual is hiding the bulk of their content in SSL, meaning the bulk of what they’re reading, searching for, and doing, is encrypted, the requests for that content or activity is not. For example, an ISP can potentially see that a client is making many, many queries for $onlineshopping.com and begin selling that data to advertisers. If you think they’re not doing this now, &lt;a href=&#34;https://www.wired.com/story/can-verizon-build-a-strong-brand-from-the-bones-of-yahoo-and-aol/&#34;&gt;think again&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Great, so $bigbadprovider can see your queries. There are a number of pretty good ways to work around this, and &lt;a href=&#34;https://pi-hole.net/&#34;&gt;one of my favorite projects&lt;/a&gt; handily deals with one of them with great simplicity. What I am referring to is the newly popular &lt;a href=&#34;https://scotthelme.co.uk/securing-dns-across-all-of-my-devices-with-pihole-dns-over-https-1-1-1-1/&#34;&gt;DNS over HTTPS&lt;/a&gt;, which is supported by the &lt;a href=&#34;https://one.one.one.one/&#34;&gt;cloudflare 1.1.1.1 service&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So, as a thought experiment I decided to play Reeses Peanut butter and chocolate with two of my favorite technological creations: the aforementioned PiHole, and &lt;a href=&#34;https://zerotier.com/&#34;&gt;ZeroTier&lt;/a&gt;. Now anyone that isn’t familiar with ZeroTier, you should acquaint yourself - Packet Pushers did a good &lt;a href=&#34;https://packetpushers.net/podcast/pq-134-meet-zerotier-open-source-networking/&#34;&gt;podcast on it back in November of 2017&lt;/a&gt;. It’s functionally an encrypted overlay supporting dual stack networking with auto configuration and gateway capabilities, and it runs on almost everything. I love this overlay technology and have been using it for a while - highly recommended.&lt;/p&gt;

&lt;p&gt;Back to my peanut butter and chocolate experiment. So, given that I had an existing ZeroTier network and an existing PiHole setup at home, I went over to &lt;a href=&#34;https://www.vultr.com/?ref=7692870&#34;&gt;Vultr.com&lt;/a&gt; and spun up a small VM for $3.50/mo, integrated it into my fleet with my Ansible and Salt tools, and installed ZeroTier and Pihole. From there I set up this DNS hierarchy. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://docs.google.com/drawings/d/e/2PACX-1vS-DsmzNWvE335KZtNo6AHX3SySG-VQWhK7i9sNgT6mFMHC5VzRWtMuJg5JraU2dJTFQT4QIGnfaMFP/pub?w=960&amp;amp;h=720&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;What this buys me is a fully encrypted DNS path up through the Vultr.com VM host without modifying the underlying DNS transport. And it works surprisingly well. I ran SmokePing from two hosts - both leveraging ZeroTier to do their testing, one on my local network and one in the cloud - to measure latency for a few days before I did this and kept that running after the deployment. Now, it’s not perfect but my family and I have been using this for about a month with minimal issues. Once in a great while we’ll see some slow DNS resolution time, but overall it works fairly well. &lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.forwardingplane.net/wp-content/uploads/2018/12/Resolver-Queries.png&#34; alt=&#34;Resolver Queries&#34; title=&#34;Resolver Queries.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My take &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The idea of using a public resolver kinda bothers me, I realize it’s probably unfounded, but I know how to and have run resolvers for ISPs and organizations for like 20 years, so I have the burden of knowledge about what is in the logs and how to run my own. Using a secured recursive resolver is simply trading transit privacy for lack of query privacy somewhere else. Then there is the issue of content networks that use DNS queries to take you to the best / topologically closest cache of their content [NOTE: this, along with the forensics data for debugging potential security issues is a &lt;strong&gt;top&lt;/strong&gt; reason that all ISPs should run their own resolvers]. I fully realize that a normal end user running their own resolver is unlikely and that this deployment is a bit overkill. However, as I can demonstrably prove, it works. And it works pretty well. It also has the added bonus of allowing me to have internal DNS resolution of my own hosts and any mobile ZeroTier client. Is it for everyone? No way. Does it prove viability for low/medium traffic use? Sure. The point is really just to get folks thinking about information leaking that they may not have considered. The nature of the internet makes true privacy pretty much impossible, but there are a few ways to make your data a little harder to for companies to compile and capitalize on if you truly don’t want them to.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Faucet: Enterprise OpenFlow in production</title>
      <link>https://forwardingplane.net/post/faucet-enterprise-openflow-in-production/</link>
      <pubDate>Mon, 05 Nov 2018 10:56:21 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/faucet-enterprise-openflow-in-production/</guid>
      <description>

&lt;p&gt;Remember OpenFlow? It was the media and marketing darling for the better part of 5 years as “the machine” conflated OpenFlow with SDN and SDN with - almost literally - everything. &amp;ldquo;Still Does Nothing&amp;rdquo; was a common phrase uttered around those of us that had run large scale, complex networks for a long time. Quietly, &lt;a href=&#34;https://faucet-sdn.blogspot.com/&#34;&gt;and mostly&lt;/a&gt;, out of the fickle media and blogosphere eye, a scrappy little SDN project called &lt;a href=&#34;https://github.com/faucetsdn/faucet&#34;&gt;faucet&lt;/a&gt; has been &lt;a href=&#34;https://github.com/faucetsdn/faucet&#34;&gt;diligently plugging away&lt;/a&gt; &amp;ndash; making easy to use, production quality, well documented, and very stable code that runs OpenFlow networks quite happily in production and at scale. Oh, did I mention that it&amp;rsquo;s also got a very small footprint? Did I also mention that we&amp;rsquo;ve built a multi-terabit network that scales, transiting IPv4, IPv6, L2/L3 switching as well as routing? Or that faucet can control switches from multiple vendors, including P4 vendors who provide a P4-to-OF bridge, and interoperates with non-SDN networks? Or (and possibly most importantly) that faucet provides automated integration tests, allowing many bugs to be caught early (sometimes even by the switch vendor) before shipping new releases? Well, I should probably mention those things. I&amp;rsquo;ve been lucky enough to have been involved in SDN off and on since around 2009, and I can emphatically say that of the production SDN and OpenFlow networks that I have been intimately involved in, this combination of hardware, software and people has been, hands down, the most rewarding and most supportable. In fact, this has been so supportable and great to work with, we migrated our production branch office over to a set of faucet controlled SDN switches, and will soon migrate first hop routing over to our robust faucet system. &amp;ldquo;However did you do this?!?!&amp;rdquo; you might be inclined to say. Well, I&amp;rsquo;m glad you asked, because I am going to tell you.    First, though, there should be some design goals. As many of the naysayers of SDN will happy point out, &amp;ldquo;what problem are you trying to solve?&amp;rdquo; to that end, here is what our design goals were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run all layer 2 in via faucet&lt;/li&gt;
&lt;li&gt;Remove need to log into any network elements after deployment (other than firmware updates)&lt;/li&gt;
&lt;li&gt;Centralize management&lt;/li&gt;
&lt;li&gt;Stretch goal to NFV BGP, do first hop L3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Easy enough, right? It really is. For our deployment we leveraged Aruba 2930F switches giving us a wealth of 1G copper ports and a handful of 10G SFP+ ports. Luckily, we already had this gear because as so many that have tried to deploy openflow in the past have seen, all hardware is not created equally. Luckily, the &lt;a href=&#34;https://www.faucet.org.nz/&#34;&gt;faucet foundation&lt;/a&gt; has published a list of requirements for support, and there are a reasonable number of vendors that actually conform. The real key that I learned in this process is that without proper vendor support (which had been several lacking in the past), and without multi-table, OpenFlow is not positioned for success. It comes down to using the right tools for the job, and OpenFlow (as well as SDN) is no different. Originally this post was to detail the process of building this network, much like posts in the past where there has been a “do this, then do that” how-to, it’s more or less unnecessary here. Why? The faucet project is serious, well documented and generally here to work. The expectation is that this is not an enclave, or a science experiment, or a lab. It’s a production network with real people and real traffic. Read that again. The expectation is that this is stable, supportable, and can do in ready to use day-to-day. And it doesn’t disappoint. Installing is a snap, the &lt;a href=&#34;https://docs.faucet.nz/en/latest/tutorials/first_time.html&#34;&gt;documentation&lt;/a&gt; for faucet is fantastic and complete. If there is something missing or a question, the developers are incredibly responsive and very quick to answer and address any issues that may arise. It’s extremely low footprint - it runs very well on a raspberry pi and does not tax a raspberry pi series 2, even with the gauge telemetry interface (there is a &lt;a href=&#34;https://docs.faucet.nz/en/latest/installation.html#installing-on-raspberry-pi&#34;&gt;pre-built pi OS&lt;/a&gt; for anyone that would prefer a more turnkey option). You may be thinking “_But Nick, I need my CLI!!!_” You’re covered - and here is why: the developers use this system. They run real networks with it. Every day. They know what is necessary to manage and maintain a real production network and sometimes that means troubleshooting. Like many engineers that learned on traditional network equipment, most of us prefer a CLI to troubleshoot, so the inclusion of this feature from the controller is not really a surprise. The fctl command provides a reasonable visibility into the operations of the controller and can be augmented and scripted.```
buraglio@faucet:~ $ /usr/bin/fctl &amp;ndash;help&lt;/p&gt;

&lt;p&gt;usage:&lt;/p&gt;

&lt;p&gt;MACs learned on a DP.&lt;/p&gt;

&lt;p&gt;/usr/bin/fctl -n &amp;ndash;endpoints=&lt;a href=&#34;http://172.17.0.1:9302&#34;&gt;http://172.17.0.1:9302&lt;/a&gt; &amp;ndash;metrics=learned_macs &amp;ndash;labels=dp_id:0xb827eb608918&lt;/p&gt;

&lt;p&gt;Status of all DPs&lt;/p&gt;

&lt;p&gt;/usr/bin/fctl -n &amp;ndash;endpoints=&lt;a href=&#34;http://172.17.0.1:9302&#34;&gt;http://172.17.0.1:9302&lt;/a&gt; &amp;ndash;metrics=dp_status&lt;/p&gt;

&lt;p&gt;Retrieve FAUCET/Gauge state using Prometheus variables.&lt;/p&gt;

&lt;p&gt;optional arguments:&lt;/p&gt;

&lt;p&gt;-h, &amp;ndash;help            show this help message and exit&lt;/p&gt;

&lt;p&gt;-n, &amp;ndash;nonzero         nonzero results only&lt;/p&gt;

&lt;p&gt;-e ENDPOINTS, &amp;ndash;endpoints ENDPOINTS&lt;/p&gt;

&lt;p&gt;list of endpoint URLs to query&lt;/p&gt;

&lt;p&gt;-m METRICS, &amp;ndash;metrics METRICS&lt;/p&gt;

&lt;p&gt;list of metrics to query&lt;/p&gt;

&lt;p&gt;-l LABELS, &amp;ndash;labels LABELS&lt;/p&gt;

&lt;p&gt;list of labels that must be present&lt;/p&gt;

&lt;p&gt;&amp;ndash;display-labels DISPLAY_LABELS&lt;/p&gt;

&lt;p&gt;list of labels to filter display by (default all)
```Monitoring is also taken into account in the form of the gauge interface, which provides a nearly-real-time telemetry stream of important and useful information. Leveraging both the wealth of topological information that the controller has at its disposal and a familiar &lt;a href=&#34;https://github.com/prometheus&#34;&gt;prometheus&lt;/a&gt; / &lt;a href=&#34;https://grafana.com/&#34;&gt;grafana&lt;/a&gt; back / front end interface, the oft-touted notion of streaming telemetry is fully - and quite capably - realized. From the perspective of a networking monitoring and statistics geek, this is the cat’s meow. Very, very data rich. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/grafana-screencap.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/grafana-screencap-1024x275.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; A simple diagram of our office network pretty well explains the decoupled control plane architecture. Keep it simple, architect for success. Fundamentally SDN networks should be designed like other networks, redundant systems, good monitoring, out of band access. A good design principle is that if you wouldn’t do it on a traditional network, you probably shouldn’t do it for an SDN based network.   &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/faunet-office.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2018/11/faunet-office.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;   Don’t trust me? Fair enough, check out the &lt;a href=&#34;https://www.waikato.ac.nz/research/units/wand.shtml&#34;&gt;University of Waikato&lt;/a&gt; interface &lt;a href=&#34;https://grafana.redcables.wand.nz/d/000000003/redcables-bgp?orgId=1&#34;&gt;here&lt;/a&gt;. For more interface on the deployment at &lt;a href=&#34;https://wand.net.nz/&#34;&gt;WAND&lt;/a&gt;, check &lt;a href=&#34;https://redcables.wand.nz/&#34;&gt;this link&lt;/a&gt;. You won’t be disappointed.    &lt;/p&gt;

&lt;h2 id=&#34;my-take&#34;&gt;My take&lt;/h2&gt;

&lt;h3 id=&#34;building-and-running-it&#34;&gt;Building and running it&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;https://docs.faucet.nz/en/latest/&#34;&gt;documentation for faucet&lt;/a&gt; is indescribably better than any other SDN project I have worked with over the span of nearly 10 years. &lt;strong&gt;It’s also supportable.&lt;/strong&gt; My office has been running the enterprise network off of faucet for a while now, without issue, and it meets our design goals [stretch goal of BGP NFV is still in process - testing is successful]). It is easy to manage and very information rich. I can see security minded folks being very interested in the ACLs and other such options available.&lt;/p&gt;

&lt;h3 id=&#34;telemetry-and-analytics&#34;&gt;Telemetry and analytics    &lt;/h3&gt;

&lt;p&gt;   Where so many others in this space are talking about their Telemetry solution, this one is already here, complete, and usable. Frankly, I am fully comfortable running a production network on this technology, operationally it is truly easier. From a security perspective, the options added scale well and deliver on their promise. Where OpenFlow was once touted as the networking silver bullet (without a lot of real stick time to prove or disprove it), it has now fallen comfortable into a nice, supportable model.&lt;/p&gt;

&lt;h3 id=&#34;up-next&#34;&gt;Up next….    &lt;/h3&gt;

&lt;p&gt;If you think this is cool, wait until &lt;a href=&#34;https://sc18.supercomputing.org/&#34;&gt;SuperComputing 18&lt;/a&gt;, where we’re deploying a &lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6461072411969363968/&#34;&gt;first-of-it’s kind network&lt;/a&gt;, all controlled by FAUCET.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DDoS mitigation podcast, black hole routing</title>
      <link>https://forwardingplane.net/post/ddos-mitigation-podcast-black-hole-routing/</link>
      <pubDate>Thu, 01 Nov 2018 10:53:08 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ddos-mitigation-podcast-black-hole-routing/</guid>
      <description>&lt;p&gt;As an often-security-engineer and an individual that has been working on large networks for quite a while, dealing with DDoS, or the threat of DDoS is a well traveled path. Recently I was invited to discuss some of the basics of DDoS mitigation on the Network Collective Podcast. This was a really fun and insightful chat with a wealth of great information for engineers and operators of any skill level.   &lt;a href=&#34;https://vimeo.com/298146825&#34;&gt;Ep38 - DDoS Mitigation&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/networkcollective&#34;&gt;Network Collective&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.   As mentioned in the cast, there are some good, free resources out there for black hole routing. &lt;a href=&#34;https://fod.grnet.gr/welcome?next=/&#34;&gt;GRnet firewall on Demand&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2011/10/black-hole-routing/&#34;&gt;BlackHole Routing Basics&lt;/a&gt; &lt;a href=&#34;https://www.nanog.org/sites/default/files/tuesday_general_ddos_ryburn_63.16.pdf&#34;&gt;Using BGP FlowSpec slides from NANOG&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trouble with Tribbles .....errr NAT</title>
      <link>https://forwardingplane.net/post/trouble-with-tribbles-errr-nat/</link>
      <pubDate>Mon, 16 Jul 2018 10:24:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/trouble-with-tribbles-errr-nat/</guid>
      <description>

&lt;p&gt;As a follow up to my &lt;a href=&#34;https://www.forwardingplane.net/2018/06/nat-discussions/&#34;&gt;last post&lt;/a&gt;, I wanted to dive a little deeper into the world of address translation and to suss out some of the more compelling details.&lt;/p&gt;

&lt;p&gt;As I&amp;rsquo;ve said on many occasions, it pains me to see NAT referenced as a security mechanism. That said, where PNAT can be beneficial is in an overall privacy strategy, however, even that is comparatively low value and given the current state of global IPv4 allocations, arguably a detriment to usability - we’ll get to that - before we do, it is important to understand what ’NAT” as we call it today actually is, and to do that we need to explain all of the types of address translation (yes, there are several). When what was designed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Static, or one-to-one NAT&lt;/strong&gt; This is the original and most simple. It is comprised of an internal and corresponding external IP address. Every machine on the network still needs a public IP address for external mapping with this model. It was originally designed to solve the problem NAT was built to address: address translation between two networks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic NAT&lt;/strong&gt; This is a bit of a hybrid of static and the next type, NAPT. In this model, a NAT router maintains a set of external IPv4 address and cynically allocates one to internal addressed for outbound communication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network Address port translation (NAPT)&lt;/strong&gt; This is what most folks will mean when they say “NAT”. Really, this is address masquerading with port translation. This is what is often confused with a security tool, given that it provides a low level of obfuscation from external scanning and “hides” the hosts behind an externally facing address. This mechanism is typically conflated with stateful firewall implementation, which is not inclusive of this implementation.&lt;/p&gt;

&lt;p&gt;Because of the enterprise expectation of a modern UTM, NAPT is unfortunately used interchangeably by many security professionals. What NAPT actually buys is a mechanism for obfuscating many hosts to a smaller number of addresses, typically on the same device. By removing a single data reconnaissance vector (scanning of ipv4) you’re actually providing a new one that’s much easier to exploit (state table exhaustion). While it does work to prevent inbound scanning, that’s really all it does other than allow for network and port translation, it should not be expected to provide anything more than simple obscuring of the internal data. NAPT as security is primarily predicated on the notion that your source address is critically important and should be obscured. While this is true to a certain extent, this believe is somewhat antiquated and should be treated as such. Tracking via source address is still completely doable with simple tools, and geolocation is completely available (assuming it is correctly registered) based on the NAPT address. This is true of IPv4 and IPv6. What NAT does accomplish is prevention of scanning and external recon of potentially sensitive systems. That’s it. I would also assert that this over-stated sense of usefulness users a false sense of protection and encourages a relaxed diligence on hardening end hosts. The same level of protection can very easily be accomplished on a public IPv4 or IPv6 prefix with a simple stateful firewall or host based firewall. What NAPT buys is two fold:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Extension of IPv4 resources&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A poor shortcut to resource protection&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If sized appropriately, the expense of this is a very under-stated price tag&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A sizable cost for right-sized UTM&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Acceptance of the risk of a state table exhaustion DoS event&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Insecure internal resources, IoT devices, or BYOD nodes that are compromised or vulnerable.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without proper east-west filtering and a tight egress policy, this sheen of protection becomes significantly less useful. Add in the likelihood of &lt;a href=&#34;https://en.wikipedia.org/wiki/Carrier-grade_NAT&#34;&gt;carrier grade NAT (CGNAT)&lt;/a&gt; due to extreme &lt;a href=&#34;https://en.wikipedia.org/wiki/IPv4_address_exhaustion&#34;&gt;exhaustion of IPv4 resource&lt;/a&gt;, and you compound the limits with additional operational and troubleshooting overhead. IPv6, while the correct next step, does solve a large part of the issues, but not without it’s own [mostly one-time] costs, and given the large uptake in IPv6 from both the client and content perspectives, it would behoove every organization to get their IPv6 strategy sorted and underway.&lt;/p&gt;

&lt;h3 id=&#34;my-take&#34;&gt;&lt;strong&gt;My take&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;In the olden times of winnuke, providing a layer of confusion between the delicious caramel center of your network resource and the dragons of the internet was pretty important. The tracking mechanisms and scanning was mostly thwarted by the thin candy shell of the NAPT device. While this is still a very important aspect in your network architecture and defense in depth strategy, understanding the real risks and true value is important. The belief that NAPT provides your security (or that it is even a security tool at all) is somewhat misguided. With regard to privacy, the real threats lie in the metadata collection, and unless you are high profile or have a highly targeted business or personal footprint, the security incidents are far more nuanced and often happen at higher layers. In addition, lets not forget that a very, very real threat is not from random poking at our externally facing network resources, but in the social engineering attacks that are readily let right in the door. In addition, there are a number of significant risks that NAPT beings to bear based on it’s use of a state table to track IP to port mappings. All of these details need to be considered and continually revisited for relevance.&lt;/p&gt;

&lt;h3 id=&#34;further-study&#34;&gt;&lt;strong&gt;Further study&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Understanding that this is a very high profile, sensitive, and polarizing subject, additional reading and research is important. A few good white papers detailing shortcomings and misconceptions surrounding NAPT can be found &lt;a href=&#34;https://www.google.com/amp/s/www.calyptix.com/top-threats/ddos-attacks-101-types-targets-motivations/amp/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://f5.com/resources/white-papers/the-myth-of-network-address-translation-as-security&#34;&gt;here&lt;/a&gt;. In addition, &lt;a href=&#34;https://thenetworkcollective.com/&#34;&gt;The Network Collective&lt;/a&gt; invited me back to discuss privacy in networking. What resulted was a very spicy podcasts that really highlights the complexity of privacy as a concept in today&amp;rsquo;s internet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://vimeo.com/272381393&#34;&gt;Ep28 - For The Love Of NAT&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/networkcollective&#34;&gt;Network Collective&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NAT discussions, fact checking, and debate</title>
      <link>https://forwardingplane.net/post/nat-discussions/</link>
      <pubDate>Mon, 11 Jun 2018 09:41:15 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nat-discussions/</guid>
      <description>&lt;p&gt;I’ve been very vocal about the misinterpretation of NAT for many, many years. Since it&amp;rsquo;s inception, NAT has been slowly perverted into what many now believe to be a security mechanism. While I do see a reasonable use of IP masquerading in a larger security strategy, this is not the original intent (or implementation) of NAT. What mosts network engineers call &amp;ldquo;NAT&amp;rdquo; is actually &lt;a href=&#34;https://www.tldp.org/HOWTO/IP-Masquerade-HOWTO/ipmasq-background2.1.html&#34;&gt;one to many network port address translation&lt;/a&gt; - or taking one public address and &amp;ldquo;hiding&amp;rdquo; a number of private (likely &lt;a href=&#34;https://tools.ietf.org/html/rfc1918&#34;&gt;RFC1918&lt;/a&gt;) addresses &amp;ldquo;behind&amp;rdquo; it, using ports to translate traffic and keeping the state of those connections. Given my&amp;hellip;.vigor for debating the details of NAT, I was invited to discuss this on &lt;a href=&#34;https://thenetworkcollective.com/2018/05/ep28-for-the-love-of-nat/&#34;&gt;an episode of The Network Collective Podcast.&lt;/a&gt; We get to some of the grimy details with some technical heavy hitters, so if you&amp;rsquo;re into the debate, it is certainly worth a watch.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Strategy Series: What is your netflow strategy?</title>
      <link>https://forwardingplane.net/post/what-is-your-netflow-strategy/</link>
      <pubDate>Mon, 18 Dec 2017 11:15:30 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/what-is-your-netflow-strategy/</guid>
      <description>

&lt;p&gt;You have one, right? Even if your entire strategy is “collect some flow data”, there is absolutely NO reason not to have a netflow implementation, and frankly, it will save you time and money over time if you make the effort to do it. I love network data and analytics and I have waxed poetic about how important they are at every opportunity. There are a myriad of options for analytics and flow data. If you’re not doing something, you’re doing it wrong. I can go on and on about the importance of network data for budgeting, security, capacity planing, and general knowledge of what your network is actually doing, but that’s for another day (contact me directly if you really want to chat details on that subject). Today is about network flow data - the foundational bits and pieces of what the heck your network, big or small, is actually doing. I’ve been having a breakdance fight with flow data packages for almost two decades, and I’ve jotted down a few of my more notable experiences. Regardless of your needs, budget, abilities, or time, there is a solution for you.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://giphy.com/gifs/breakin-boogaloo-shrimp-11FirB7GcukiwU&#34;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;arbor-https-www-arbornetworks-com&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://www.arbornetworks.com/&#34;&gt;Arbor&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Arbor is the Rolls Royce of flow analytics (and DDoS mitigation) solutions. It does almost everything, has options for managed objects, DDoS scrubbing and alerting capabilities, a magnificent interface, role based access, rainbows and gumdrop houses with lollipop trees. This system is pretty darned amazing - it truly is, and that likely comes from the fact that they were one of the first, and had/have one of the largest install bases for this kind of system. They have turnkey solutions and have the unique position of being in roughly 90% of the worlds legacy tier 1 ISPs, so their DDoS and other security options are strong, fast to update, and &lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt; good. I’ve had great experience with this platform and its API. I like to think of arbor as the commercial ISP brass ring for flow data analytics. They have other solutions for enterprise and campus, but their roots are in strong ISP solutions. They’re pricey, but very, very good. Expect to need at least an FTE to really take full advantage of their very capable ecosystem, but if you dedicated the money and manpower to it, you won’t be sad.&lt;/p&gt;

&lt;h2 id=&#34;splunk-https-www-splunk-com&#34;&gt;&lt;a href=&#34;https://www.splunk.com/&#34;&gt;Splunk&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;We all know spunk as a really nice log and analytic system but what many may not realize is that Splunk is really, really good at network data and analytics as well. It’s pricey, but it’s as close as you’ll get to a turkey solution for a SIEM that can actually scale. It has the notion of customizable dashboards and visualization, as a huge amount of plugins and add on’s, but they come with a legendarily steep price tag. The saying I have always heard is “if you can afford spunk, buy spunk. If you can’t use an ELK stack (noe elastic stack)”. My experience backs this up.&lt;/p&gt;

&lt;h2 id=&#34;elk-elastic-stack-https-www-elastic-co&#34;&gt;&lt;a href=&#34;https://www.elastic.co/&#34;&gt;ELK /Elastic Stack&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I’m a big fan of this not only because it’s essentially free, but because it’s so extremely flexible and has so many existing projects built around it. I’ve moved my go-to for net flow collection from nfdump to Elastic Stack built around the &lt;a href=&#34;https://www.manitonetworks.com/about-flow-analyzer/&#34;&gt;Manito Networks flowanalyzer&lt;/a&gt; install.   This platform takes a bit more command line jockeying and isn’t entirely turnkey, but it’s crazy flexible, had great eye candy and building the visualizations and dashboards is easy. Notable mention is &lt;a href=&#34;https://github.com/robcowart/elastiflow&#34;&gt;Elastiflow&lt;/a&gt;, which is similar but has a bit more eye candy and leverages log stash. Elastiflow doesn’t have nearly as turnkey of an install (and really has almost no “newbie” install instructions at all - but it’s a strong offering if you already know how to spin up an ELK stack and tune it.&lt;/p&gt;

&lt;h2 id=&#34;nfdump-http-nfdump-sourceforge-net&#34;&gt;&lt;a href=&#34;http://nfdump.sourceforge.net/&#34;&gt;Nfdump&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The venerable nfdump. This is what so many large networks were using (and probably still are) for their raw flow collections. This package scales exceptionally well to huge networks and has so many tools available for the CLI that it’s the de facto standard for raw flow analytics and forensics. I love this system and ran it for many, many, MANY years. It takes a but of time to learn, and may not be the right tool for you if you want a modern GUI, lots of eye candy, or are inexperienced with the UNIX/LINIX command line, but it’s got it where it counts, supports IPFix, Netflow v5, v9 and IPFIX and you can’t dog wrong with it. I have a handy how-to getting it up and running Under CentOS &lt;a href=&#34;https://www.forwardingplane.net/2014/01/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/&#34;&gt;here&lt;/a&gt;. When you couple this with something like &lt;a href=&#34;https://github.com/JustinAzoff/flow-indexer&#34;&gt;Justin Azoff’s flow indexer&lt;/a&gt; and &lt;a href=&#34;https://sourceforge.net/projects/nfsen/&#34;&gt;nfsen&lt;/a&gt; on the front end, you’ve got an enviable power user setup ripe for both forensics, tactical work as well as baseline generation.&lt;/p&gt;

&lt;h2 id=&#34;solarwinds-https-www-solarwinds-com&#34;&gt;&lt;a href=&#34;https://www.solarwinds.com/&#34;&gt;SolarWinds&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Solarwinds Orion is the go-to for windows based monitoring. It’s not cheap, but if you’re running a windows based monitoring system, you’re likely an enterprise and have budget for it. I have been impressed with the visualizations of this system and like that it does all of the monitoring in one package - once installed I never have to see windows (and since I can’t efficiently support windows, that’s probably a good thing - someone else will handle the OS work). The price tag can be a bit steep depending on number of nodes monitored, but it does what it claims and commercial support is decent. My one complaint is that I can’t seem to find a way to do raw data queries in a straightforward way. This may be possible and I have just not had the time or mental power to workout out. Overall it’s a worthy monitoring platform if you need your system to run on windows and can afford it. There are some older but still good videos from several Network Field Day events &lt;a href=&#34;http://techfieldday.com/companies/solarwinds/&#34;&gt;here&lt;/a&gt; and I wrote about it from a UNIX users perspective &lt;a href=&#34;https://www.forwardingplane.net/2015/07/solarwinds-orion-from-a-unix-user-point-of-view/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;live-action-networks-live-ux-https-www-liveaction-com-products-live-ux&#34;&gt;&lt;a href=&#34;https://www.liveaction.com/products/live-ux/&#34;&gt;Live Action Networks Live UX&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Another commercial option that has good support and a lot of eye candy. This was born out of work with the US Government and is a really interesting system. I’ve met with these guys several times and their team is super open to taking and feature requests and they have a good product. I first heard about them at &lt;a href=&#34;http://techfieldday.com/appearance/liveaction-presents-at-networking-field-day-7/&#34;&gt;Network Field day 7&lt;/a&gt;, their product was intriguing there and they’ve come a long way since then. Worth looking at for a turnkey solution for things like network analytics, IP-SLA,&lt;/p&gt;

&lt;h2 id=&#34;my-take&#34;&gt;My take&lt;/h2&gt;

&lt;p&gt;I like the power that an indexed set of data provides and I am willing and capable of plowing through the install of a linux based system. I’m also frugal, and for a product to really warrant my money it needs to do something that nothing else does [translated: I am willing and able to support open source solutions].&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/12/Screenshot-2017-12-15-20.32.57.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;That said, the Manito Networks install of Elk + Kibana (no logstash in this default install) is where I typically land due to the fact that I can get indexed flow data, nice, configurable graphs and trending statistics, and can integrate things like syslog into another index on the same system giving me the tools to do forensics on a number of topics on that system. &lt;a href=&#34;https://gitlab.com/thart/flowanalyzer/blob/master/Install/README.md&#34;&gt;The setup is crazy easy&lt;/a&gt; and really well documented, too. Someone linux-inclined can have it up and collecting flow data (sflow, netflow v5/9 or IPFIX) in an order of about 30 minutes - probably less. The take aways really, though, is that there are options available no matter your skill level or budget, so there is really no reason not to have something.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>No privacy may be the new privacy.</title>
      <link>https://forwardingplane.net/post/no-privacy-may-new-privacy/</link>
      <pubDate>Sat, 25 Mar 2017 18:06:01 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/no-privacy-may-new-privacy/</guid>
      <description>&lt;p&gt;Taking politics and putting them aside, what the new administration has &lt;a href=&#34;https://www.nytimes.com/2017/03/23/technology/congress-moves-to-strike-internet-privacy-rules-from-obama-era.html?_r=0&#34;&gt;been attempting to change&lt;/a&gt; with regard to internet privacy is something we should &lt;em&gt;&lt;strong&gt;all&lt;/strong&gt;&lt;/em&gt; be informed about. Wether you have a tin foil hat or don&amp;rsquo;t care, &amp;ldquo;knowing is half the battle&amp;rdquo;. The other half is doing - which I will also lend some brief insight to (sorta). What&amp;rsquo;s changing? Nothing yet (as of the time of this writing). What will likely change? The ability of your internet (mobile or not) to sell your browsing habits and personal usage data. What does this mean? Well, it means that if you visit facebook, amazon, JC Penny, or buy-adult-toys.com a lot, that information can be sold to advertisers, private companies, etc., etc. &amp;ldquo;But I use SSL, I&amp;rsquo;m safe&amp;rdquo;. Nope. DNS query data - the requests made for a domain name like google.com, used to map a name to an IPvX address - that can be sold too. The content of the browsing is great, but the knowledge that a site was visited is just as useful&amp;hellip;and this data is generated not just by traditional &amp;ldquo;browsing&amp;rdquo;, everything that touches the internet uses it. Apps, Games, everything. Removing these rules also means that there is no oversight into how this collection can be done, what kind of data - sensitive or not - can be collected and sold and to whom. That&amp;rsquo;s what deregulation looks like, folks.&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/personal.info_.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/personal.info_.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt; What does this mean for the average internet user like, say, my Mom or Dad? It means that when they look at ANYTHING online, it&amp;rsquo;s likely going to be collected, indexed, data mined, and then sold to be further data mined and then these users will get targeted for a barrage of advertising. Worse yet, this data is ripe for misuse. What if the data is compromised? Sorry. That&amp;rsquo;ll suck for sure. Even worse that than, what if that data is used by nation states? What if it&amp;rsquo;s misinterpreted? It&amp;rsquo;s a mess. Has this data been used in this manner in the past? Sure. All of the providers use it internally. &lt;a href=&#34;http://money.cnn.com/2016/07/25/technology/yahoo-verizon-deal-sale/&#34;&gt;Verizon bought yahoo&lt;/a&gt; for this reason.  The real issue is that most people do not understand what all of this means. Since the internet is a completely traceable environment in 99.999% of cases, unlike really anything prior, this is paramount. What can you do? Well, if you&amp;rsquo;re not technical, good luck. Perhaps if this happens it will spark a new industry of private overlays like Tor to be commercialized and widely adopted. Wait with the FCC leaning toward rolling back net neutrality those services could likely be slowed or blocked completely. Sorry. On the fringes are the mom-and-pop ISPs - they still exist. WISPs, small and rural providers. These are less likely to be the safest bet in the future should this come to pass. Mobile metadata - what will generate the majority of the controversy - is likely to be the most often sold because there will be such a diverse and deep pool of data. Another of the side effects is this could potentially be an even higher adoption of SSL, which is good, but may also lead to a higher adoption of the vile SSL decryption practice. Lets hope not. What will I do? Not sure. I have extensive experience running DNS servers and VPNs. I may just start connecting to one of my VPS devices and run everything over OpenVPN from both mobile and traditional connections. There are some super simple &lt;a href=&#34;https://github.com/kylemanna/docker-openvpn&#34;&gt;docker how-tos&lt;/a&gt; out there that Ive used in the past. VPS service are cheap, I have a few but my &lt;a href=&#34;https://prgmr.com/xen/&#34;&gt;prgmr.com&lt;/a&gt; VPS is my favorite. Don&amp;rsquo;t forget to tunnel IPv6 too. Welcome to 2017.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating an internal span port inside proxmox OVS</title>
      <link>https://forwardingplane.net/post/creating-internal-span-port-inside-proxmox-ovs/</link>
      <pubDate>Tue, 21 Mar 2017 03:49:58 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/creating-internal-span-port-inside-proxmox-ovs/</guid>
      <description>&lt;p&gt;In the last few years I have moved all of my virtualization to &lt;a href=&#34;https://www.proxmox.com/en/&#34;&gt;proxmox&lt;/a&gt; and docker. Seeing as I like to look at packets because I am a closet security guy, and being as I have been working off-and-on on a security project in recent times, I wanted to be able to span a port not only from a hardware switch, but also within my software switches. I had been using linux bridge, which I am not a fan of, so when I started down this path I did not look hard to find a way to do so under that platform. Instead I used it as an opportunity to move some of the internal bridges to &lt;a href=&#34;http://openvswitch.org/&#34;&gt;OpenVSwitch&lt;/a&gt;. I wanted to create an OVS span port internally. I had experience with OVS in the past for SDN work that I was doing, but I had never created a mirror port. I briefly thought about using OpenFlow to do it, but the unnecessary complexity was off putting. Instead I chose to create a simple mirror of a span port from my switch. So, traffic flow goes as such: &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/OVS-SPAN-1.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2017/03/OVS-SPAN-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;     This was fairly trivial, and I was seeing packets in no time. I&amp;rsquo;m not going to go through creating an OVS bridge in proxmox, there are lots of &lt;a href=&#34;https://pve.proxmox.com/wiki/Open_vSwitch&#34;&gt;documents&lt;/a&gt; on how to do that. Once you have your switch port SPAN up and running, and the physical interface in the OVS bridge, you essentially just need to add the following: Create the mirror```
ovs-vsctl &amp;ndash; &amp;ndash;id=@m create mirror name=span &amp;ndash; add bridge vmbr1 mirrors @m&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Find your ports that you want to mirror - you&#39;ll need the physical port if consuming from a real switch like I am, and the software port of the virtualized analyzer.  Remember, in OVS anything you want to mess with is going to have a UUID. You need to match the interfaces with the UUID to verify. ovs-vsctl list port \_uuid : 42dbd5a9-27c6-4f1b-958b-943f67b6801b bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[b155454d-db6e-4bb8-af88-7cd6b544c303\] lacp : \[\] mac : \[\] name : &#34;eth1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : 85c932b2-4f98-4650-8298-ae9e9ca72796 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[5219306f-96ec-440a-ac8b-d949ea18d752\] lacp : \[\] mac : \[\] name : &#34;vmbr1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : d53c7323-517f-48a2-9235-4505e654d4b1 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[91d52d05-d881-4693-ab5c-fc64b5d87518\] lacp : \[\] mac : \[\] name : &#34;veth100i9&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] In red we have the interfaces I want to to use. the veth interface is the software port on the VM. Eth1 is the hardware interfce that my switch is spanning traffic to. Pro tip: In OVS, the commands are a little unintuitive to me when talking about mirrors.  &#34;select\_src\_port&#34; and &#34;select\_dst\_port=&#34; is the destination of the traffic flow from an interface and not source and destination of the traffic you are mirroring from the point of view of the in and out ports. Confusing, right? For instance I can monitor the input from one interface and the output of another in the mirror. What we want is the input and output of the same interface to get both directions of traffic. This is not unlike how span ports are configured on your hardware switch, the nomenclature just threw me off.```&#34; data-lang=&#34;Find your ports that you want to mirror - you&#39;ll need the physical port if consuming from a real switch like I am, and the software port of the virtualized analyzer.  Remember, in OVS anything you want to mess with is going to have a UUID. You need to match the interfaces with the UUID to verify. ovs-vsctl list port \_uuid : 42dbd5a9-27c6-4f1b-958b-943f67b6801b bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[b155454d-db6e-4bb8-af88-7cd6b544c303\] lacp : \[\] mac : \[\] name : &#34;eth1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : 85c932b2-4f98-4650-8298-ae9e9ca72796 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[5219306f-96ec-440a-ac8b-d949ea18d752\] lacp : \[\] mac : \[\] name : &#34;vmbr1&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] \_uuid : d53c7323-517f-48a2-9235-4505e654d4b1 bond\_downdelay : 0 bond\_fake\_iface : false bond\_mode : \[\] bond\_updelay : 0 external\_ids : {} fake\_bridge : false interfaces : \[91d52d05-d881-4693-ab5c-fc64b5d87518\] lacp : \[\] mac : \[\] name : &#34;veth100i9&#34; other\_config : {} qos : \[\] statistics : {} status : {} tag : \[\] trunks : \[\] vlan\_mode : \[\] In red we have the interfaces I want to to use. the veth interface is the software port on the VM. Eth1 is the hardware interfce that my switch is spanning traffic to. Pro tip: In OVS, the commands are a little unintuitive to me when talking about mirrors.  &#34;select\_src\_port&#34; and &#34;select\_dst\_port=&#34; is the destination of the traffic flow from an interface and not source and destination of the traffic you are mirroring from the point of view of the in and out ports. Confusing, right? For instance I can monitor the input from one interface and the output of another in the mirror. What we want is the input and output of the same interface to get both directions of traffic. This is not unlike how span ports are configured on your hardware switch, the nomenclature just threw me off.```&#34;&gt;ovs-vsctl set mirror span select\_src\_port=@eth1 select\_dst\_port=@eth1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also do this with the UUID```
ovs-vsctl set mirror span select_src_port=42dbd5a9-27c6-4f1b-958b-943f67b6801b select_dst_port=42dbd5a9-27c6-4f1b-958b-943f67b6801b&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now that we have the source of our mirror we just need to send it somewhere. I wanted mine to go to an internal host running some analytics software (on interface veth100i9)```&#34; data-lang=&#34;Now that we have the source of our mirror we just need to send it somewhere. I wanted mine to go to an internal host running some analytics software (on interface veth100i9)```&#34;&gt;ovs-vsctl -- --id=@veth100i9 get port veth100i9 -- set mirror span output-port=@veth100i9&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;rsquo;s it. Log into your host and do a tcpdump on whatever interface is mapped to veth100i9 and you should see packets flowing. A few tips:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Verify your span from the hardware switch is working before diving into the software stack.&lt;/li&gt;
&lt;li&gt;If you&amp;rsquo;re doing this is proxmox, be aware that proxmox networking stack can be unforgiving when you much around outside of their environment.&lt;/li&gt;
&lt;li&gt;This will not persist across reboots. Add it to /etc/network/interfaces manually to keep it after a restart.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BGP RPKI - why aren&#39;t we using it more?</title>
      <link>https://forwardingplane.net/post/bgp-rpki-why-arent-we-using-it/</link>
      <pubDate>Sat, 21 May 2016 16:33:44 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/bgp-rpki-why-arent-we-using-it/</guid>
      <description>&lt;nav&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#image-created-from-surfnet-rpki-page&#34;&gt;Image created from SURFNet RPKI page.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;p&gt;     I was recently at a meeting where BGP RPKI was the topic de jour. While this has been a topic that I have visited on occasion of the last few years and something I wanted to spend significant time on, I have found that setting aside the time has been difficult and sparse, much like the deployment of BGP RPKI. In order to better understand the options available, it&amp;rsquo;s important to break down the pieces and terminology involved; BGP is daunting enough to those unfamiliar with it and adding PKI on top of that can be even more so. So, what are these bits and pieces and why have we not done more to adopt it?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BGP&lt;/strong&gt; - the venerable and foundational protocol that quite literally runs the internet. BGP allows an organization to announce and exchange it’s IPv4 and IPv6 resources with other organizations.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.arin.net/resources/rpki/&#34;&gt;&lt;strong&gt;Resource Public Key Infrastructure&lt;/strong&gt;&lt;/a&gt; - From &lt;a href=&#34;https://www.arin.net/resources/rpki/&#34;&gt;ARIN&lt;/a&gt;: &lt;em&gt;Using cryptographically verifiable certificates, RPKI allows IP address holders to specify which Autonomous Systems (AS&amp;rsquo;s) are authorized to originate their IP address prefixes. These statements, known as Route Origin Authorizations (ROAs), allow network operators to make informed routing decisions, and help secure Internet routing in general. &lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ROA&lt;/strong&gt; - Route Origin Authorizations - Who is authorized to originate or source these prefixes?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ROV&lt;/strong&gt; - Route Origin Validation - Can we validate, cryptographically, that the origin of this resource (for example, 8.8.8.8) is authorized to originate or source these prefixes?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;     Many of the details of RPKI are actually not even technical, both with ARIN and with vendors, there exists complications that make the technical pieces look like child’s play. Legality of the licensing and housing of authoritative certificates are complicated, shrouded in legalese due to the nature of what they represent. This proves to be a show stopper for a lot of older organizations that have grandfathered address space and may not have gone through the ARIN agreement process any time in the recent past [note: supposedly this process is required for ARIN IPv6 space, so most of that _should_ be covered. Other regions may have easier, lower hurdles - I’ve heard good things about RIPE’s process - but I have no experience with it. The legal issues with contracts and signing certificates may also prove to be troublesome to enterprises, most of which are very conservative and slow to adopt anything new ::cough:: IPv6 ::cough::.  Certificate generation and maintenance is also considered difficult in many cases, the details can be confusing and the documentation overwhelming or difficult to find.&lt;/p&gt;

&lt;p&gt;On top of those non-technical issues, platforms with large install bases are sparsely supported - although this is changing.&lt;/p&gt;

&lt;p&gt;     There have been a &lt;a href=&#34;http://www.bgpmon.net/large-scale-bgp-hijack-out-of-india/&#34;&gt;number&lt;/a&gt; of &lt;a href=&#34;http://www.bgpmon.net/large-hijack-affects-reachability-of-high-traffic-destinations/&#34;&gt;recent&lt;/a&gt;, high profile route hijacks. If you’re ever curious to see what they were, BGPMon typically has a post-mortem shortly after they occur. This is a big deal. There are a number of ways they could have been prevented, too one of which is BGP RPKI. Is that worth the overhead? I think anyone that has had to scramble to figure out what was going on during one of these events would argue yes. But even with that, we have minimal adoption. With the significant movement to cloud based work, enterprises, service providers, academic institutions and even savvy end users should ask themselves a few important questions before doing your risk analysis:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do your cloud providers do RPKI?&lt;/li&gt;
&lt;li&gt;Does your upstream service provider or peering partner honor invalid routes?&lt;/li&gt;
&lt;li&gt;Does your upstream service provider or peering partner even support prefix or AS-Path filtering?&lt;/li&gt;
&lt;li&gt;How does the effect BGP blackhole routing for security filtering?&lt;/li&gt;
&lt;li&gt;How do you deal with invalid routes? (alert, set preference, drop, etc.)&lt;/li&gt;
&lt;li&gt;How do you handle invalid routes that may be more specific?&lt;/li&gt;
&lt;li&gt;Why have I not deployed BGP RPKI yet?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;My perspective:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;    Unfortunately, the feeling I get is very similar to that of things [that we actually need] such as IPv6 and DNSSec. Tools that make our resources safer,  but are often overlooked due to increased operational complexity.&lt;/p&gt;

&lt;p&gt;It is really about risk analysis: Is the risk of not having this worth the effort of maintaining it?  Since we [as an internetworking ecosystem] been clear in our actions that necessary things as obvious and straightforward as appropriate prefix filtering and IPv6 deployment are in many cases above and beyond, it should come as no surprise that adding complexity on top of “stuff that just works” is’t happening on a large scale. Even with repeated proof that changes would alleviate risk, we don’t do it because what we have has been deemed “good enough”* and change is scary and hard.&lt;/p&gt;

&lt;p&gt;What do we need? We need tools. The &lt;a href=&#34;http://rpki.surfnet.nl/&#34;&gt;RPKI dashboard&lt;/a&gt; that SURFnet has available is a fantastic example of an easy to use tool that makes a ton of information available. We need a &lt;strong&gt;&lt;em&gt;very easy&lt;/em&gt;&lt;/strong&gt; way to deploy this. BGP is actually a pretty simple protocol to make work, which is why is hasn’t changed much in the  extremely long tenure it has had as foundation of the internet. We need a very, very straightforward way to get the non-technical pieces done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This is just the tip of the iceberg and I am but a novice with this tech - but my gut feelings are typically right about this type of thing.&lt;/p&gt;

&lt;p&gt;* &amp;ldquo;Good enough” is almost never good enough.&lt;/p&gt;

&lt;h6 id=&#34;image-created-from-surfnet-rpki-page&#34;&gt;Image created from SURFNet RPKI page.&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title>OpenDNS acquires BGPMon and the future of route monitoring</title>
      <link>https://forwardingplane.net/post/opendns-acquires-bgpmon-and-the-future-of-route-monitoring/</link>
      <pubDate>Fri, 20 Mar 2015 05:18:30 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/opendns-acquires-bgpmon-and-the-future-of-route-monitoring/</guid>
      <description>&lt;p&gt;For those that run BGP networks, &lt;a href=&#34;http://www.bgpmon.net&#34;&gt;BGPmon&lt;/a&gt; is often a tool they turn to for some really unique and hard to find information. Remember back in February 2008 when Pakistan Telecom &amp;ldquo;blocked&amp;rdquo; &lt;a href=&#34;http://www.youtube.com/buraglio&#34;&gt;Youtube&lt;/a&gt;? That one was a really, really public example of something that BGPMon caught. BGPmon has been around for a long, long time. Quietly watching prefixes. Silently noting changes and reporting them to the ones lucky enough to know of its existence. For those that don&amp;rsquo;t &lt;a href=&#34;http://searchtelecom.techtarget.com/feature/BGP-essentials-The-protocol-that-makes-the-Internet-work&#34;&gt;know how BGP works&lt;/a&gt;, I am not going to go into it too much other than to say that it is both the foundation that the internet is built upon, and one of the most antiquated trust models that exists in a world where most of the pundits are going on and on about SDN and network engineers being out of a job in 10 years. See, the problem with BGP is not that it is a terrible protocol. Quite the opposite, it is elegant in its simplicity and ability to be extended.It is lightweight and arguably the easiest of the routing protocols with the exception of RIPv2.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Many have argued that it is not a routing protocol, per se, but a policy enforcement framework for paths, but that is a completely different discussion. I happen to agree&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The issue with BGP is that its install base is so vast that changing it is not unlike parting the red sea or holding the earth on ones shoulders, because that is what BGP does. It holds the internet on its shoulders every bit as much as things like fiber in the ground does. Lets get back to BGPmon. BGPmon does something that nothing else really does. It watches the global routing table from points all over the globe and keeps track of prefixes. For a network operation that provides transit, financial services or any sensitive data, notification of a ROA violation, prefix hijack or more specific route announcement is a critical service. BGPmon provides that among other equally distinct services. In fact, &lt;a href=&#34;https://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34;&gt;I have it listed as one of my critical tools for maintaining, monitoring and troubleshooting external routing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What does the acquisition of BGPmon by OpenDNS mean? I honestly can not say, but I am fairly confident that it means good things and &lt;a href=&#34;https://blog.opendns.com/2015/03/12/opendns-acquires-bgpmon/&#34;&gt;OpenDNS has a very, very encouraging position&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Moving forward, our integration plan for BGPmon is straightforward. We’ll invest in building out the service and making it more complete—but we also are committed to keeping the free features free. We’ll continue to use BGPmon data and innovate to augment our predictive intelligence and provide better threat protection to OpenDNS customers. So basically status quo for current customers.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Strong backing from a forward thinking company with a solid track record of good products likely means a bright future for an invaluable service. I am optimistic and encouraged, this was the next logical step and they have taken it with elegance and thought.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 5 - GeoIP tools</title>
      <link>https://forwardingplane.net/post/nix4neteng-5-geoip-tools/</link>
      <pubDate>Sun, 21 Dec 2014 18:22:15 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-5-geoip-tools/</guid>
      <description>&lt;p&gt;Sometimes in networking and security it becomes necessary to do lookups of location data on IP addresses and prefixes. On my Mac I use &lt;a href=&#34;http://brew.sh/&#34;&gt;homebrew&lt;/a&gt; to manage packages, but most of these tools are available with thetypocal apt, yum and port package management systems. For this post, I&amp;rsquo;m going to shift gears and show the install on my mac:```
sliver:~ buraglio$ brew install geoip
==&amp;gt; Downloading &lt;a href=&#34;https://downloads.sf.net/project/machomebrew/Bottles/geoip-1.6.3.mavericks.bottle.tar.gz&#34;&gt;https://downloads.sf.net/project/machomebrew/Bottles/geoip-1.6.3.mavericks.bottle.tar.gz&lt;/a&gt;
######################################################################## 100.0%
==&amp;gt; Pouring geoip-1.6.3.mavericks.bottle.tar.gz
sliver:~ buraglio$ brew install geoipupdate
==&amp;gt; Downloading &lt;a href=&#34;https://downloads.sf.net/project/machomebrew/Bottles/geoipupdate-2.0.2.mavericks.bottle.tar.gz&#34;&gt;https://downloads.sf.net/project/machomebrew/Bottles/geoipupdate-2.0.2.mavericks.bottle.tar.gz&lt;/a&gt;
######################################################################## 100.0%
==&amp;gt; Pouring geoipupdate-2.0.2.mavericks.bottle.tar.gz&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Once this installed we need to do a simple update:```&#34; data-lang=&#34;Once this installed we need to do a simple update:```&#34;&gt;sliver:~ buraglio$ geoipupdate
sliver:~ buraglio$&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This really doesn&amp;rsquo;t yield any output, but I tend to do it pretty much every time I am using the tool so I know I have up to date information. So lets say that you are a service provider and your customers are calling complaining that they&amp;rsquo;re seeing www.weather.co.uk when going to weather.com or more realistically, they can&amp;rsquo;t get to netflix or amazon video, which tells them they don&amp;rsquo;t support srtreaming to the UK.```
sliver:~ buraglio$ geoiplookup 141.142.2.2
GeoIP Country Edition: US, United States
GeoIP City Edition, Rev 1: US, IL, Illinois, Urbana, 61801, 40.109501, -88.212303, 648, 217&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Nope, that looks ok, it must be something else \[I have actually seen this problem in the past, it&#39;s really no fun to run to ground\]. As you can see, there is a good deal of information there, lat/long, area code, city, state, zip, etc. This data, specifically the lat/long, can be used to do really cool visualization stuff with things like google maps or google earth. As a sanity check, here is a view of bbc.com:```&#34; data-lang=&#34;Nope, that looks ok, it must be something else \[I have actually seen this problem in the past, it&#39;s really no fun to run to ground\]. As you can see, there is a good deal of information there, lat/long, area code, city, state, zip, etc. This data, specifically the lat/long, can be used to do really cool visualization stuff with things like google maps or google earth. As a sanity check, here is a view of bbc.com:```&#34;&gt;sliver:~ buraglio$ geoiplookup 212.58.244.71
GeoIP Country Edition: GB, United Kingdom
GeoIP City Edition, Rev 1: GB, N7, Surrey, Tadworth, N/A, 51.283298, -0.233300, 0, 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yup, that looks right. The nice thing about this tool is that it can be automated to do all kinds of things with logs from syslog, Bro-IDS, Snort, whatever, and then act on the data or like I mentioned above, plot it out for visualization. The one drawback I&amp;rsquo;ve found is that the IPv6 lookups are sparsely correct, for example:&lt;code&gt;
sliver:~ buraglio$ geoiplookup6 2400:cb00:2048:1::681c:194f
sliver:~ buraglio$
&lt;/code&gt;Looking up 2400:cb00:2048:1::681c:194f which belongs to cloudflare yields me nothink, so there is some work to do there on the IPv6 front. Overall this is a useful tool for quick troubleshooting but it really shines when used in scripts and for visualization.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4Neteng 4: POODLE and SSLv3, scanning and updating</title>
      <link>https://forwardingplane.net/post/nix4neteng-4-poodle-and-sslv3-scanning-and-updating/</link>
      <pubDate>Wed, 15 Oct 2014 17:36:54 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-4-poodle-and-sslv3-scanning-and-updating/</guid>
      <description>&lt;p&gt;With the recent release of the &lt;a href=&#34;https://www.openssl.org/~bodo/ssl-poodle.pdf&#34;&gt;POODLE SSLv3 vulnerability&lt;/a&gt;, folks are scrambling around trying to figure out what runs what and where.  Running a handful of things that do SSL, I was obligated, both personally and professionally, to figure out an easy way to drill down and figure out what does what and then fix the vulnerable services.  When there are a lot of devices, this can seem like a daunting task, and it is if you&amp;rsquo;re trying to do it manually.  This is where &lt;a href=&#34;http://nmap.org/&#34;&gt;NMAP&lt;/a&gt; comes into play.  NMAP is an extremely powerful tool for scanning and enumerating your own network, not just a tool for the script kiddies to port scan. Since there is no SSL patch at the time of this writing, and since SSLv3 is old and depricated, it is a good idea to see what services support it and then squish them in favor of TLS 1+.  Thankfully, smarter folks than myself have done most of the legwork for accomplishing this task and written most of it down &lt;a href=&#34;http://nmap.org/nsedoc/scripts/ssl-enum-ciphers.html&#34;&gt;here&lt;/a&gt;. NMAP has a wealth of cool scripts and bolt ons that extend it in amazing ways.  To accomplish our tasks we&amp;rsquo;ll ned to do a few things. Install nmap. I ran into issues with the &lt;a href=&#34;http://nmap.org/book/nse-library.html&#34;&gt;nselibs&lt;/a&gt; being incomplete, so I grabbed the source and built it that way as opposed to using yum.```
git clone git@github.com:nmap/nmap.git&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-We then need to build it from source which requires the dev tools:```&#34; data-lang=&#34;We then need to build it from source which requires the dev tools:```&#34;&gt;sudo yum -y groupinstall &amp;#39;Development Tools&amp;#39;
cd nmap
./configure
sudo make&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and alternatively```
sudo make install&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-I like to just run it from my directory since there are path considerations.```&#34; data-lang=&#34;I like to just run it from my directory since there are path considerations.```&#34;&gt;(~/nmap) v-chimera $ ./nmap --script ssl-enum-ciphers -p 443 10.14.14.0/27

Starting Nmap 6.46 ( http://nmap.org ) at 2014-10-15 12:21 CDT
Nmap scan report for gw.test (10.14.14.1)
Host is up (0.0028s latency).
PORT    STATE  SERVICE
443/tcp closed https

Nmap scan report for ssldevice.test (10.14.14.2)
Host is up (0.0042s latency).
PORT    STATE SERVICE
443/tcp open  https
| ssl-enum-ciphers:
|   SSLv3:
|     ciphers:
|       TLS\_RSA\_WITH\_RC4\_128\_MD5 - strong
|       TLS\_RSA\_WITH\_RC4\_128\_SHA - strong
|     compressors:
|       NULL
|   TLSv1.0:
|     ciphers:
|       TLS\_RSA\_WITH\_RC4\_128\_MD5 - strong
|       TLS\_RSA\_WITH\_RC4\_128\_SHA - strong
|     compressors:
|       NULL
|\_  least strength: strong

Nmap scan report for nossl.test (10.14.14.3)
Host is up (0.00049s latency).
PORT    STATE  SERVICE
443/tcp closed https&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From here we can see that there is a host that needs to be updated. There are a wealth of docs out there for changing out the supported version. Most of my stuff is apache so I used &lt;a href=&#34;https://zmap.io/sslv3/&#34;&gt;this guide&lt;/a&gt;. For embedded devices, the best option is to filter access [which you should probably be doing anyway] until there is a patched firmware version.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sonrancid: A [very] basic RANCID module for sonicwall</title>
      <link>https://forwardingplane.net/post/sonrancid-a-very-basic-rancid-module-for-sonicwall/</link>
      <pubDate>Mon, 15 Sep 2014 09:05:13 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonrancid-a-very-basic-rancid-module-for-sonicwall/</guid>
      <description>&lt;p&gt;I know, I know, I&amp;rsquo;m always saying that you don&amp;rsquo;t need a firewall. That&amp;rsquo;s mostly to get your attention to push my agenda of sane security architecture, I do actually believe that firewalls are appropriate in a great many use cases and I&amp;rsquo;ve managed them big and small ranging from &lt;a href=&#34;http://www.forwardingplane.net/2010/08/juniper-srx-cluster/&#34; title=&#34;Juniper SRX Cluster&#34;&gt;Juniper SRX 5800 clusters&lt;/a&gt; to tiny purpose built BSD distros on custom hardware. I even managed &lt;a href=&#34;http://www.checkpoint.com/&#34;&gt;Checkpoint&lt;/a&gt; and &lt;a href=&#34;http://www.kulichki.com/moshkow/SECURITY/gauntlet.txt&#34;&gt;gauntlet firewall&lt;/a&gt; back in the 1990s. And &lt;a href=&#34;https://www.novell.com/products/bordermanager/&#34;&gt;Novell Border manager&lt;/a&gt;&amp;hellip;.good gravy&amp;hellip;.border manager. I just had a chill, that thing is still around.  They work well when spec&amp;rsquo;d, designed, maintained correctly and placed in an appropriate location in a network architecture.  That said, I have a few SonicWall devices that I work on occasionally and it has always irritated me that there was not a usable &lt;a href=&#34;http://www.shrubbery.net/rancid/&#34;&gt;RANCID&lt;/a&gt; module for it.  To that end, I hacked up the Cisco RANCID script to support very rudimentary config backups. &lt;em&gt;&lt;Insert comment about having some DevOps skills is useful, even if they are very basic like mine.&gt;&lt;/em&gt; The script will log in and pull the config and version using the following commands:&lt;code&gt;
show current-config
&lt;/code&gt;&lt;code&gt;
show version
&lt;/code&gt;I am really hoping that someone else will pick it up and massage it a bit because it is very chatty and will produce a diff every time due to the way SonicOS presents some of its configuration parameters. It also needs tested against larger SonicWall devices as I only have smaller boxes to run against.  I know it works against a TZ210, YMMV. Please post comments on github if you use it with anything else.   The password hash is particularly annoying, it always changes when the configuration is displayed. Some of the framework is there to remove it so I may hack at it a bit more but it&amp;rsquo;s usable in the loosest sense for the short term.  It&amp;rsquo;s available on &lt;a href=&#34;https://github.com/buraglio/sonrancid&#34;&gt;my github site&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why you don&#39;t need a firewall [how to secure an open perimeter network]</title>
      <link>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</link>
      <pubDate>Mon, 08 Sep 2014 07:30:07 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/why-you-dont-need-a-firewall-how-to-secure-an-open-perimeter-network/</guid>
      <description>&lt;p&gt;I admit that the title was meant to be inflammatory.  However, there are use cases that aren&amp;rsquo;t terribly uncommon where an in-line security appliance is just not the correct tool for the job.  Someone once told me &amp;ldquo;a firewall protects a network like a fuse protects an electrical circuit&amp;rdquo;, and it&amp;rsquo;s mostly a correct statement. Firewall vendors will probably argue this and enterprise folks may discount this as heresy and call for burning me at the stake.  I can say, though, that the use of a firewall, IPS or other inline security appliance has presented many problems in many environments in my years as a network and security engineer and architect.    To that end, there are mechanisms for replacing the functions of a firewall and IPS with other options, which in many cases have a lower capital expense [although they may have a higher &lt;em&gt;initial&lt;/em&gt; operational expense].  I&amp;rsquo;ll outline them here, but before I do I want to re-iterate that NAT (PAT) is not a security tool, it&amp;rsquo;s a translation tool.  Nothing more.  So, I will leave that out.  If you don&amp;rsquo;t have appropriate IPv4 or IPv6 address space some of these things may need adjustments although they are still accomplishable by doing NAT on a border Layer 3 device.     Below is a talk that I gave at BroCon14 that is a rough outline of how to do this, if you don&amp;rsquo;t want to spend 30 minutes listening to me talk about it, the clifs notes are bulleted below, but the context is all in the video so I encourage you to watch it before responding to my post. For those that want to take a look, here is the talk. Here are the bullets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Announce only necessary resources &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One can utilize routing to only expose the pieces of the network that need to be exposed.  If you have a /16 and on;y a /24 needs to be exposed, only announce that prefix.  This is not that different than a typical DMZ.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter access to network, storage and management hardware&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Utilize best practice ingress filtering.  Follow &lt;a href=&#34;http://tools.ietf.org/html/bcp38&#34;&gt;BCP38&lt;/a&gt;. You should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Utilize host based firewalls&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a no-brainer.  Firewall as close to the resource as possible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Employ central host management&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make your life easy.  Cloud providers do it and it&amp;rsquo;s well documented nowadays.  There are &lt;a href=&#34;http://cfengine.com/&#34;&gt;many&lt;/a&gt; &lt;a href=&#34;http://puppetlabs.com/&#34;&gt;options&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Centralize logging and flow data collection&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another no brainer, you should be doing this anyway.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create baselines for traffic and activity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Data is good.  Knowledge is power.  Baselines are useful for both anomaly detection and forecasting and it&amp;rsquo;s not that hard to do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Deploy and tune IDS&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Passive IDS system[s] off of a TAP or SPAN are key to this kind of architecture.  See video for more details but there are a bunch of good options. I prefer &lt;a href=&#34;http://www.bro.org&#34;&gt;Bro IDS&lt;/a&gt; but there are many players both commercial and FOSS.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Filter with black hole routing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve &lt;a href=&#34;http://www.forwardingplane.net/2011/10/black-hole-routing/&#34; title=&#34;Black Hole routing&#34;&gt;talked about this before&lt;/a&gt;.  Automating this is key to making it function efficiently and it is a fantastic tool.  This can be done with BGP (traditionally) or with something innovative like OpenFlow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Make use of regularly scheduled external vulnerability scanning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a great way to verify your exposure and works for any sized network.  Highly recommended.&lt;/p&gt;

&lt;p&gt;  Clearly this isn&amp;rsquo;t for everyone, and that&amp;rsquo;s ok.  For anyone that has struggled with issues involving security appliances either based on protocol, horsepower or interface speeds, there are options.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NIX4NetEng 2 IPv4/6 address investigation tools - whois &#43; dig</title>
      <link>https://forwardingplane.net/post/nix4neteng-2-ipv46-address-investigation-tools-whois-dig/</link>
      <pubDate>Sat, 07 Jun 2014 19:54:41 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/nix4neteng-2-ipv46-address-investigation-tools-whois-dig/</guid>
      <description>

&lt;p&gt;I don&amp;rsquo;t care what your vendor alignment of choice is, Cisco, Juniper, Brocade, Alcatel&amp;hellip;.it doesn&amp;rsquo;t matter. At one point or another you&amp;rsquo;re going to need to bird dog an address to see where it&amp;rsquo;s coming from, who owns it, what it&amp;rsquo;s DNS name is or what path you&amp;rsquo;re taking to get to it.  We&amp;rsquo;ve already talked about &lt;a href=&#34;http://www.forwardingplane.net/2014/03/bgp-tools-troubleshooting-and-monitoring-external-routing-in-a-nutshell/&#34; title=&#34;BGP tools; troubleshooting and monitoring external routing in a nutshell&#34;&gt;BGP tools&lt;/a&gt;, they&amp;rsquo;re a great choice for checking routes across the internet. Hunting down addresses is an interesting one, though, as address management and lookups  can bleed into other aspects of networking like path selection, latency, jitter and many other things.  I&amp;rsquo;m going to touch on a few things and give generalizations on a few others.  First, querying where things originate and who has ownership is infinitely useful, especially if your job description has &amp;ldquo;security&amp;rdquo; anywhere in it, written or implied.  I like to use a range of services, all of which are from the CLI (for speed and scriptability).  My go-to tools for this are the venerable &lt;a href=&#34;http://en.wikipedia.org/wiki/Whois&#34;&gt;whois&lt;/a&gt; and dig tools. Lets say I want to check on the address 192.80.96.88. First, lets figure out if it&amp;rsquo;s got a name.  dig is your friend here.```
(~) jumphost $ dig -x 192.80.96.88
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -x 192.80.96.88
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 29443
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0
;; QUESTION SECTION:
;88.96.80.192.in-addr.arpa. IN PTR
;; ANSWER SECTION:
88.96.80.192.in-addr.arpa. 7145 IN PTR local.forwardingplane.net.
;; Query time: 2 msec
;; SERVER: 10.209.209.1#53(10.209.209.1)
;; WHEN: Sat May 31 11:43:18 2014
;; MSG SIZE rcvd: 82&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Dig is an incredibly powerful DNS tool. I&#39;d recommend learning it as well as you possibly can. [_man dig_](http://linux.die.net/man/1/dig) on any good unix box should give you a good start, [this site](http://www.thegeekstuff.com/2012/02/dig-command-examples/) has some good examples too, I can&#39;t even scratch the surface of how useful DNS tools are, probably a great subject for another NIX4NetEng.  Here we see that the address has reverse DNS (PTR record) of local.forwardingplane.net.  We can poke a bit more at this using DNS, too.```&#34; data-lang=&#34;Dig is an incredibly powerful DNS tool. I&#39;d recommend learning it as well as you possibly can. [_man dig_](http://linux.die.net/man/1/dig) on any good unix box should give you a good start, [this site](http://www.thegeekstuff.com/2012/02/dig-command-examples/) has some good examples too, I can&#39;t even scratch the surface of how useful DNS tools are, probably a great subject for another NIX4NetEng.  Here we see that the address has reverse DNS (PTR record) of local.forwardingplane.net.  We can poke a bit more at this using DNS, too.```&#34;&gt;(~) jumphost $ dig -t ANY local.forwardingplane.net +noall +answer

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; -t ANY local.forwardingplane.net +noall +answer
;; global options: +cmd
local.forwardingplane.net. 221 IN AAAA 2607:dd00:8000:18::88
local.forwardingplane.net. 221 IN A 192.80.96.88&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Well, we can see here we have a dual stacked host.  We&amp;rsquo;ll look at that more later. Let&amp;rsquo;s see who owns this address space. Whois is the way to go here.  I always start with querying ARIN and go from there.  ```
(~) jumphost $ whois -h whois.arin.net 192.80.96.88&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;arin-whois-data-and-services-are-subject-to-the-terms-of-use&#34;&gt;ARIN WHOIS data and services are subject to the Terms of Use&lt;/h1&gt;

&lt;h1 id=&#34;available-at-https-www-arin-net-whois-tou-html&#34;&gt;available at: &lt;a href=&#34;https://www.arin.net/whois_tou.html&#34;&gt;https://www.arin.net/whois_tou.html&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;query-terms-are-ambiguous-the-query-is-assumed-to-be&#34;&gt;Query terms are ambiguous.  The query is assumed to be:&lt;/h1&gt;

&lt;h1 id=&#34;n-192-80-96-88&#34;&gt;&amp;ldquo;n 192.80.96.88&amp;rdquo;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;use-to-get-help&#34;&gt;Use &amp;ldquo;?&amp;rdquo; to get help.&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;the-following-results-may-also-be-obtained-via&#34;&gt;The following results may also be obtained via:&lt;/h1&gt;

&lt;h1 id=&#34;http-whois-arin-net-rest-nets-q-192-80-96-88-showdetails-true-showarin-false-ext-netref2&#34;&gt;&lt;a href=&#34;http://whois.arin.net/rest/nets;q=192.80.96.88?showDetails=true&amp;amp;showARIN=false&amp;amp;ext=netref2&#34;&gt;http://whois.arin.net/rest/nets;q=192.80.96.88?showDetails=true&amp;amp;showARIN=false&amp;amp;ext=netref2&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;NetRange:       192.80.96.0 - 192.80.111.255
CIDR:           192.80.96.0/20
OriginAS:       AS10932
NetName:        UC2B-1
NetHandle:      NET-192-80-96-0-1
Parent:         NET-192-0-0-0-0
NetType:        Direct Allocation
RegDate:        2013-02-27
Updated:        2013-02-27
Ref:            &lt;a href=&#34;http://whois.arin.net/rest/net/NET-192-80-96-0-1&#34;&gt;http://whois.arin.net/rest/net/NET-192-80-96-0-1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgName:        UC2B
OrgId:          CCLAUBBC
Address:        102 North Neil Street
City:           Champaign
StateProv:      IL
PostalCode:     61820
Country:        US
RegDate:        2012-02-28
Updated:        2014-02-19
Ref:            &lt;a href=&#34;http://whois.arin.net/rest/org/CCLAUBBC&#34;&gt;http://whois.arin.net/rest/org/CCLAUBBC&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgAbuseHandle: UCBTE-ARIN
OrgAbuseName:   uc2b-tech
OrgAbusePhone:  +1-217-265-4226
OrgAbuseEmail:  uc2b-tech@uc2b.net
OrgAbuseRef:    &lt;a href=&#34;http://whois.arin.net/rest/poc/UCBTE-ARIN&#34;&gt;http://whois.arin.net/rest/poc/UCBTE-ARIN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgNOCHandle: UCBTE-ARIN
OrgNOCName:   uc2b-tech
OrgNOCPhone:  +1-217-265-4226
OrgNOCEmail:  uc2b-tech@uc2b.net
OrgNOCRef:    &lt;a href=&#34;http://whois.arin.net/rest/poc/UCBTE-ARIN&#34;&gt;http://whois.arin.net/rest/poc/UCBTE-ARIN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OrgTechHandle: UCBTE-ARIN
OrgTechName:   uc2b-tech
OrgTechPhone:  +1-217-265-4226
OrgTechEmail:  uc2b-tech@uc2b.net
OrgTechRef:    &lt;a href=&#34;http://whois.arin.net/rest/poc/UCBTE-ARIN&#34;&gt;http://whois.arin.net/rest/poc/UCBTE-ARIN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;arin-whois-data-and-services-are-subject-to-the-terms-of-use-1&#34;&gt;ARIN WHOIS data and services are subject to the Terms of Use&lt;/h1&gt;

&lt;h1 id=&#34;available-at-https-www-arin-net-whois-tou-html-1&#34;&gt;available at: &lt;a href=&#34;https://www.arin.net/whois_tou.html&#34;&gt;https://www.arin.net/whois_tou.html&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-The first 7 lines of this are the most important. Here we can see that the address space is owned by an entity called [UC2B](http://www.uc2b.net), it is part of a /20 that the origin ASN is 10932 and that it is a direct allocation (as opposed to assigned space from an upstream provider).```&#34; data-lang=&#34;The first 7 lines of this are the most important. Here we can see that the address space is owned by an entity called [UC2B](http://www.uc2b.net), it is part of a /20 that the origin ASN is 10932 and that it is a direct allocation (as opposed to assigned space from an upstream provider).```&#34;&gt;NetRange:       192.80.96.0 - 192.80.111.255
CIDR:           192.80.96.0/20
OriginAS:       AS10932
NetName:        UC2B-1
NetHandle:      NET-192-80-96-0-1
Parent:         NET-192-0-0-0-0
NetType:        Direct Allocation&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I could tell you some horror stories about getting this address space assigned. It took me 7 months to get that allocation from ARIN&amp;hellip;&amp;hellip;.but I digress.  From here we can query the ASN, also using whois, again, the first few lines are generally the most useful.```
(~) jumphost $ whois -h whois.arin.net 10932
ASNumber: 10932
ASName: UC2B
ASHandle: AS10932
RegDate: 2012-06-28
Updated: 2012-06-28
Ref: &lt;a href=&#34;http://whois.arin.net/rest/asn/AS10932&#34;&gt;http://whois.arin.net/rest/asn/AS10932&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-We can use this information to track down responsible parties, addresses, etc.  It&#39;s a great resource for knowing both technical and non-technical details about address space. [Team Cymru has an extremely powerful whois service](http://www.team-cymru.org/Services/ip-to-asn.html#whois) that allows for significantly more flexibility including time and date.```&#34; data-lang=&#34;We can use this information to track down responsible parties, addresses, etc.  It&#39;s a great resource for knowing both technical and non-technical details about address space. [Team Cymru has an extremely powerful whois service](http://www.team-cymru.org/Services/ip-to-asn.html#whois) that allows for significantly more flexibility including time and date.```&#34;&gt;(~) jumphost $ whois -h whois.cymru.com &amp;#34; -v 192.80.96.88&amp;#34;
AS      | IP               | BGP Prefix          | CC | Registry | Allocated  | AS Name
10932   | 192.80.96.88     | 192.80.96.0/20      | US | arin     | 2013-02-27 | UC2B - UC2B,US&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can imagine, this can be a robust way to track changes and re-allocations of ASNs and address blocks, especially with the dwindling amounts of IPv4 and the re-assignment of ASNs.  One can see when ownership has changed and verify the correct origin of address blocks.  Great for validation and correlation. These services also work for IPv6. We can see if the V6 space is coming from the same ASN or if it&amp;rsquo;s a different entity (like a &lt;a href=&#34;http://www.tunnelbroker.net&#34;&gt;tunnel&lt;/a&gt; or a totally different provider).&lt;code&gt;
\[buraglio@local ~\]$ whois -h whois.cymru.com &amp;quot; -v 2607:dd00:8000:18::88&amp;quot;
\[Querying whois.cymru.com\]
\[whois.cymru.com\]
AS      | IP                                       | BGP Prefix          | CC | Registry | Allocated  | AS Name
10932   | 2607:dd00:8000:18::88                    | 2607:dd00::/32      | US | arin     | 2012-07-23 | UC2B - UC2B,US
&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;This is really just the tip of the iceberg in this kind of toolset.  There are &lt;em&gt;countless&lt;/em&gt; scripts, binaries and  shell hacks to do no end of interesting and useful things and gather information.  Have some other, better uses or tools?  Post them in the comments!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install nfsen and nfdump on CentOS 6.5 for netflow and or sflow collection</title>
      <link>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</link>
      <pubDate>Sat, 11 Jan 2014 21:55:24 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/install-nfsen-and-nfdump-on-centos-6-5-for-netflow-and-or-sflow-collection/</guid>
      <description>

&lt;p&gt;I am an absolutely &lt;strong&gt;huge&lt;/strong&gt; fan of statistical and instrumentation data, especially when it comes to traffic analysis, visualization and baselining.  I&amp;rsquo;ve rambled on about the importance of it at &lt;a href=&#34;http://searchnetworking.techtarget.com/news/2240212051/The-Der-Spiegel-NSA-revelations-What-network-engineers-need-to-know&#34;&gt;every opportunity&lt;/a&gt;.  As a result of that, I have been doing work with netflow and netflow-like data for a fairly long time.  My first collector was the &lt;a href=&#34;http://www.splintered.net/sw/flow-tools/&#34;&gt;OSU Flow tools&lt;/a&gt; based stuff  back around 13 years ago.  From there I played with all kinds of netflow tools, both &lt;a href=&#34;http://www.arbornetworks.com/&#34;&gt;commercial&lt;/a&gt; and open source, finally settling most of my focus on &lt;a href=&#34;http://nfdump.sourceforge.net/&#34;&gt;nfdump&lt;/a&gt; and &lt;a href=&#34;http://nfsen.sourceforge.net/&#34;&gt;nfsen&lt;/a&gt;. A bit of history: nfdump was born out of a research network, requiring it to be able to consume huge amounts of flows efficiently.  This makes it very powerful and very useful for nearly anyone, from the small technology tinkerer to to the enterprise network engineer up through the service provider architect.  nfsen is really just a php wrapper for nfdump, however, the really nice thing about it (other then being free, opensource software) is that it is extendable via &lt;a href=&#34;http://sourceforge.net/apps/trac/nfsen-plugins/&#34;&gt;plugins&lt;/a&gt;.  This is really what makes it a serious player from all angles.     From botnet detection to displaying IP geo-data on a map, there is likely a plugin for it.  Not finding what you are looking for?  Write it!  The architecture to use it is already there and documented. For ease of install, I chose CentOS 6.5.  Once you have a system up and running, to get nfsen/nfdump working, here is what you need to do:```
yum install -y httpd php wget gcc make rrdtool-devel &lt;br /&gt;
rrdtool-perl perl-MailTools perl-Socket6 flex byacc&lt;/p&gt;

&lt;p&gt;vi /etc/selinux/config
set SELINUX=disabled
reboot&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-You&#39;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)```&#34; data-lang=&#34;You&#39;ll need to make an iptables rule (I generally make one for ip6tables as well, in case I want to also enable ipv6 transport)```&#34;&gt;sudo iptables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT
sudo ipt6ables -I INPUT -p udp -m state --state NEW -m udp --dport 9995 -j ACCEPT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also allow for access to the web server you just installed.```
sudo ip6tables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 443 -j ACCEPT
sudo ip6tables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 80 -j ACCEPT&lt;br /&gt;
sudo iptables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 443 -j ACCEPT
sudo iptables -I INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 80 -j ACCEPT&lt;br /&gt;
service iptables save
service ip6tables save&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Once you enable https you can safely remove the table rules for port 80. Start HTTPd```&#34; data-lang=&#34;Once you enable https you can safely remove the table rules for port 80. Start HTTPd```&#34;&gt;sudo service httpd start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable HTTPd at boot```
chkconfig httpd on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)```&#34; data-lang=&#34;Now you need the actual code. I like to grab the latest from sourceforge. (nfdump-1.6.11 and nfsen-1.3.6p1 at the time of this writing)```&#34;&gt;wget http://downloads.sourceforge.net/project/nfdump/stable/nfdump-1.6.11/nfdump-1.6.11.tar.gz
wget http://downloads.sourceforge.net/project/nfsen/stable/nfsen-1.3.6p1/nfsen-1.3.6p1.tar.gz
``````
tar -zxvf nfdump-1.6.11.tar.gz 
./configure --enable-nfprofile --enable-nftrack --enable-sflow 
make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default 1.6.11 enables v9 and ipfix =)```
adduser netflow
vi /etc/group&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add user netflow to group apache```&#34; data-lang=&#34;Add user netflow to group apache```&#34;&gt;vi etc/nfsen.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;change www user to apache Add your host to the file to allow for collection, my %sources looks like this:```
%sources = (
    &amp;lsquo;home&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9995&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#0000ff&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },
    &amp;lsquo;internal&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#FF0000&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },&lt;/p&gt;

&lt;h1 id=&#34;gw-port-9995-col-0000ff-type-netflow&#34;&gt;&amp;lsquo;gw&amp;rsquo;    =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9995&amp;rsquo;, &amp;lsquo;col&amp;rsquo; =&amp;gt; &amp;lsquo;#0000ff&amp;rsquo;, &amp;lsquo;type&amp;rsquo; =&amp;gt; &amp;lsquo;netflow&amp;rsquo; },&lt;/h1&gt;

&lt;h1 id=&#34;peer1-port-9996-ip-172-16-17-18&#34;&gt;&amp;lsquo;peer1&amp;rsquo;        =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;IP&amp;rsquo; =&amp;gt; &amp;lsquo;172.16.17.18&amp;rsquo; },&lt;/h1&gt;

&lt;h1 id=&#34;peer2-port-9996-ip-172-16-17-19&#34;&gt;&amp;lsquo;peer2&amp;rsquo;        =&amp;gt; { &amp;lsquo;port&amp;rsquo; =&amp;gt; &amp;lsquo;9996&amp;rsquo;, &amp;lsquo;IP&amp;rsquo; =&amp;gt; &amp;lsquo;172.16.17.19&amp;rsquo; },&lt;/h1&gt;

&lt;p&gt;);&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow```&#34; data-lang=&#34;As you can see, I have two valid sources with different ports and different colors. You can make all netflow, all sflow, or any combination of protocol. change directory to /home/netflow```&#34;&gt;./install.pl etc/nfsen.conf
cd /home/netflow/bin/
./nfsen start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it start at boot (referenced from &lt;a href=&#34;http://sourceforge.net/mailarchive/message.php?msg_id=29434166&#34;&gt;this post&lt;/a&gt;).```
vi /etc/init.d/nfsen&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add this into the file:```&#34; data-lang=&#34;Add this into the file:```&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;#
&lt;span style=&#34;color:#75715e&#34;&gt;# chkconfig: - 50 50&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# description: nfsen&lt;/span&gt;

DAEMON&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/home/netflow/bin/nfsen

&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
		start&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON start
		;;
		stop&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON stop
		;;
		status&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON status
		;;
		restart&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		$DAEMON stop
		sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		$DAEMON start
		;;
		&lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Usage: &lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt; {start|stop|status|restart}&amp;#34;&lt;/span&gt;
		exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then chkconfig it on to start it at boot:```
chmod 755 nfsen &amp;amp;&amp;amp; chkconfig &amp;ndash;add nfsen &amp;amp;&amp;amp; chkconfig nfsen on&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-That&#39;s pretty much it. Once you configure your netflow or sflow source, you should start seeing data in ~5-10 minutes. Point your browser at your web server and see: Mine is set as https://netmon/nfsen/nfsen.php (you&#39;ll need to include the &#34;nfsen.php&#34; uness you edit your apache config to recognize &#34;nfsen.php&#34; as in index.&#34; data-lang=&#34;That&#39;s pretty much it. Once you configure your netflow or sflow source, you should start seeing data in ~5-10 minutes. Point your browser at your web server and see: Mine is set as https://netmon/nfsen/nfsen.php (you&#39;ll need to include the &#34;nfsen.php&#34; uness you edit your apache config to recognize &#34;nfsen.php&#34; as in index.&#34;&gt;[![&lt;span style=&#34;color:#a6e22e&#34;&gt;Screen&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Shot&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2014&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.13.53&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PM&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;http&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM-913x1024.png)](http://www.forwardingplane.net/wp-content/uploads/2014/01/Screen-Shot-2014-01-11-at-3.13.53-PM.png)
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;Common&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issues&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;see&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;one&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;every&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: nfsend connect() error: Permission denied!&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;It&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;always&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;permissions&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;issue&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;documented&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;here&lt;/span&gt;](&lt;span style=&#34;color:#a6e22e&#34;&gt;https&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;//code.google.com/p/nfsenplugins/wiki/NFSEN_Installation_Gotchas).  You need to make sure that the nfsen package can read the nfsen.comm socket file. I fixed mine by doing```
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;chmod&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;g&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;rwx&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;netflow&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My nfsen.conf file is using /home/netflow as the $BASEDIR.```
 &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/Screenshot-2014-01-11-13.04.17.png&#34; alt=&#34;Screenshot 2014-01-11 13.04.17&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-You&#39;ll likely see &#34;Frontend - Backend version mismatch!&#34;, this is a known issue. There is a patch to fix it [here](http://sourceforge.net/p/nfsen/bugs/43/), I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:```&#34; data-lang=&#34;You&#39;ll likely see &#34;Frontend - Backend version mismatch!&#34;, this is a known issue. There is a patch to fix it [here](http://sourceforge.net/p/nfsen/bugs/43/), I never bothered since it did not cause any issues for me. Disk full. Depending on your setup, you may generate a firehose worth of data. I have filled disks in less than a day in the past on a good sized regional WAN. I generally keep a month of data, but you can store as much data as disk you want to buy. I have a script run from cron to prune data, if you want to do the same:```&#34;&gt;vi /usr/local/etc/rmflowdata.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Paste this in:```
#!/bin/bash&lt;/p&gt;

&lt;h1 id=&#34;prune-flow-data&#34;&gt;prune flow data&lt;/h1&gt;

&lt;h1 id=&#34;usage&#34;&gt;Usage:&lt;/h1&gt;

&lt;h1 id=&#34;30-is-the-number-of-days-adjust-accordingly&#34;&gt;+30 is the number of days, adjust accordingly.&lt;/h1&gt;

&lt;p&gt;/bin/find /home/netflow/profiles-data/live -name &amp;ldquo;nfcapd.*&amp;rdquo; -type f -mtime +30 -delete&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Add this to your crontab:```&#34; data-lang=&#34;Add this to your crontab:```&#34;&gt;@daily /usr/local/bin/rmflowdata.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make it executable&lt;code&gt;
chmod 755 /usr/local/bin/rmflowdata.sh
&lt;/code&gt;There are probably more elegant ways to do it but this works just fine, is lightweight and can be run manually if needed. There are a lot of great use cases for this.  If you&amp;rsquo;re looking for an SDN tie-in, guess what, there is one.  &lt;a href=&#34;http://blog.sflow.com/2010/05/configuring-open-vswitch.html&#34;&gt;OpenVSwitch supports sflow export&lt;/a&gt; and low-and-behold, nfsen and nfdump can easily consume and display sflow data. Want flow statistics on your all VM, OVS based SDN lab?  Guess what, you can! There are some other great things you can do with flow data, too, specifically sflow.  It&amp;rsquo;s not just for network statistics, there is a host &lt;a href=&#34;http://host-sflow.sourceforge.net/&#34;&gt;based sflow implementation&lt;/a&gt; that track any number of interesting metrics.  &lt;a href=&#34;http://blog.sflow.com/&#34;&gt;blog.sflow.com&lt;/a&gt; is a great resource for all things sflow (also, it does IPv6 by default, as it should). Ok, now you have &lt;strong&gt;absolutely&lt;/strong&gt; no good reason not to be collecting flow data.   It&amp;rsquo;s easy, it&amp;rsquo;s useful and almost everything (hosts, routers, virtual switches) supports exporting &lt;strong&gt;&lt;em&gt;some&lt;/em&gt;&lt;/strong&gt; kind of flow information.  You can even generate it from an inline linux box or a box off of an optical tap or a span port running &lt;a href=&#34;https://code.google.com/p/softflowd/&#34;&gt;softflowd&lt;/a&gt; or &lt;a href=&#34;http://www.ntop.org/products/nprobe/&#34;&gt;nprobe&lt;/a&gt;.   Both of which I can confirm work wonderfully (the above collector is gathering flows from softflowd running on my &lt;a href=&#34;http://www.forwardingplane.net/2013/07/building-a-secured-network-in-a-box/&#34; title=&#34;Building a secured network in a box&#34;&gt;security onion box&lt;/a&gt; as well as exported flows from pfflowd on a &lt;a href=&#34;http://www.pfsense.org/&#34;&gt;pfsense&lt;/a&gt; router).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Speculation and soapboxing about the leaked NSA spy catalog.</title>
      <link>https://forwardingplane.net/post/speculation-and-soapboxing-about-the-leaked-nsa-spy-catalog/</link>
      <pubDate>Sat, 04 Jan 2014 17:15:40 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/speculation-and-soapboxing-about-the-leaked-nsa-spy-catalog/</guid>
      <description>&lt;p&gt;The buzz as of late around the security and networking communities has been about the &lt;a href=&#34;http://www.spiegel.de/international/world/nsa-secret-toolbox-ant-unit-offers-spy-gadgets-for-every-need-a-941006.html&#34;&gt;NSA and their catalog or spy toolkit&lt;/a&gt;.  I&amp;rsquo;ve spent time in my career thinking about and doing infosec and I did a brief stint working for the FBI in a project called &lt;a href=&#34;http://gcn.com/articles/2007/08/20/fbi-launches-cybersecurity-project.aspx&#34;&gt;NCDIR&lt;/a&gt;.  I like to think that I can provide at least a peripherally competent commentary about it [take it with a grain of salt].  Instead of thinking about the morality of it or the violation of privacy that everyone else seems to be focused on, I want to think about the mechanics. If one takes the emotion and outrage out of the equation, there are some &lt;a href=&#34;http://permalink.gmane.org/gmane.comp.encryption.general/17244&#34;&gt;really interesting tools here&lt;/a&gt;.  My initial thoughts, though, are &amp;ldquo;how is the backdoor installed?&amp;rdquo; and &amp;ldquo;how is the data harvested?&amp;rdquo; There are cases where I&amp;rsquo;m sure the backdoors are installed via local access and the data is harvested in uninteresting ways like optical taps, wireless bridges, etc., however, what how about in cases where this isn&amp;rsquo;t possible?  What about when the equipment is in a bunker with no viable wireless in or out, it&amp;rsquo;s have to be done either in-band or via a tap, which would require physical access.   It&amp;rsquo;d be interesting to see a &lt;a href=&#34;http://www.bro.org/&#34;&gt;BroIDS&lt;/a&gt; or &lt;a href=&#34;http://www.snort.org/&#34;&gt;Snort&lt;/a&gt; policy for the &amp;ldquo;DNT Implant Communications Protocol&amp;rdquo; once that is deconstructed. As far as installation of the backdoor, how about the case about when interception of hardware in transit isn&amp;rsquo;t an option and physical access is also not viable?  The implications of remotly exploitable network equipment for things such as this are very-wide scoped and &lt;strong&gt;&lt;em&gt;extremely&lt;/em&gt;&lt;/strong&gt; unpleasant.  One can assume that if our government can exploit something like this, so can another nation-state.  Not good.  Not good at all.  How much of our gear is manufactured abroad?  They have physical access because they &lt;strong&gt;&lt;em&gt;build&lt;/em&gt;&lt;/strong&gt; it, one could assert that it is plausible that &amp;ldquo;they&amp;rdquo; could insert whatever they wanted in the hardware.  Again, I&amp;rsquo;m not a hardware engineer, but I can speculate. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/40g-tap-500x500.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2014/01/40g-tap-500x500-300x126.jpg&#34; alt=&#34;40g-tap-500x500&#34; /&gt;&lt;/a&gt; I&amp;rsquo;d be really interested in seeing if data is being harvested inline, without a tap and how that is being done.  It&amp;rsquo;s implied in some of the descriptions of the *THROUGH listings that there is inline control available.  What I&amp;rsquo;d really be interested in seeing is someone that can capture that traffic flow data in an upstream device.  Flow data doesn&amp;rsquo;t lie, and it is highly likely that there is a router in the path somewhere exporting flow data that isn&amp;rsquo;t obfuscating traffic by being compromised.  Where is the traffic going?  How is it transported (encrypted, for sure, but how?) How does this change how we, as network engineers, feel about RMA&amp;rsquo;d hardware?  If the manufacturers don&amp;rsquo;t know about modded boot ROMS, it&amp;rsquo;s likely that RMA&amp;rsquo;d hardware is being shipped all over with backdoors that were intended for someone else in it.  Oh, and another thing, this is an &lt;em&gt;old&lt;/em&gt; document.  2008 is a lifetime ago in terms of networking and computing technology.  I saw no mention of the &lt;a href=&#34;http://www.juniper.net/us/en/products-services/security/srx-series/&#34;&gt;Juniper SRX&lt;/a&gt;, &lt;a href=&#34;http://www.juniper.net/us/en/products-services/routing/mx-series/&#34;&gt;Juniper MX&lt;/a&gt;, &lt;a href=&#34;http://www.cisco.com/en/US/products/ps9343/prod_models_comparison.html&#34;&gt;Cisco ASR&lt;/a&gt;, &lt;a href=&#34;http://www.brocade.com/products/all/routers/index.page&#34;&gt;Brocade MLX/CES&lt;/a&gt; or &lt;a href=&#34;http://www.alcatel-lucent.com/&#34;&gt;Alcatel-Lucent&lt;/a&gt; devices.  I&amp;rsquo;d bet real money all of that exists now. Additionally, what about &lt;a href=&#34;http://en.wikipedia.org/wiki/FIPS_140&#34;&gt;FIPS 140&lt;/a&gt;?  I want to believe this can come into play, but admittedly I don&amp;rsquo;t know a lot about FIPS, just what I&amp;rsquo;ve read on the &lt;a href=&#34;http://csrc.nist.gov/groups/STM/cmvp/standards.html#02&#34;&gt;NIST site&lt;/a&gt;.  How does FIPS assist in preventing the software hacks? Or does it? As far as most of the the network equipment backdoors, they imply that boot time code modifies the OS, can cryptographic checks aide in rooting some of these out?  I have not done much in this aspect of security, but I have to believe there is a way to detect this kind of boot time modification of the OS. This opens up an entirely new aspect of SDN, too. When your control plane is decoupled and likely running on a linux box of some sort, the targeting of &amp;ldquo;the network&amp;rdquo; becomes far more simple of a compromise.  Ever done linux forensics?  Most of the hacks are fairly low-brow.  Root one box and you have access to the control plane of a data center, internet backbone or campus network.  What about all of the white box network devices that are just linux like &lt;a href=&#34;http://www.aristanetworks.com/&#34;&gt;Arista&lt;/a&gt; and &lt;a href=&#34;http://cumulusnetworks.com/&#34;&gt;Cumulus Networks&lt;/a&gt;? Now we&amp;rsquo;re managing linux boxes like we are with Juniper and FreeBSD, except they are less customized and more vanilla (read: potentially more likely to be exploitable).  This is a problem.  Think because you have a firewall and a NAT device you&amp;rsquo;re safe?  You&amp;rsquo;re wrong [clearly].  Hardening controllers will be increasingly important, perhaps even running them on trusted unix platforms.  It&amp;rsquo;s a problem that is now much easier than intercepting hardware in transit and installing backdoors into it, but an in-depth SDN security talk is an &lt;em&gt;entirely&lt;/em&gt; different can of worms. This just solidifies my thought that if something is &lt;strong&gt;&lt;em&gt;so&lt;/em&gt;&lt;/strong&gt; critically important that it must remain secret and secure, don&amp;rsquo;t put it on a computer.  Especially one with a network connection.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sonicwall revisited - Now with IPv6 - and way too much licensing cruft.</title>
      <link>https://forwardingplane.net/post/sonicwall-revisited-now-with-ipv6-and-way-too-much-licensing-cruft/</link>
      <pubDate>Sat, 07 Dec 2013 15:45:06 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonicwall-revisited-now-with-ipv6-and-way-too-much-licensing-cruft/</guid>
      <description>&lt;p&gt;About a year ago &lt;a href=&#34;http://www.forwardingplane.net/2012/12/sonicwall-old-dog-learns-some-new-tricks/&#34; title=&#34;Sonicwall – Old dog learns [some] new tricks&#34;&gt;I did a brief review of the &amp;ldquo;new Sonicwall&amp;rdquo;&lt;/a&gt;, specifically a smaller branch office device that was said should have had all of the features of the larger devices.  I proposed that it had some significant limitations (much to the disagreement of a great deal of folks).  However, I stand by my statements.  If you ignore the fact that firewalls often cause more problems than they solve, that NAT is a nightmarish kludge (and not a security mechanism), and &lt;a href=&#34;http://www.forwardingplane.net/2013/03/why-hardware-firewalls-are-the-walking-dead/&#34; title=&#34;Why hardware firewalls are the walking dead&#34;&gt;will likely be phased out for better options eventually&lt;/a&gt;, the SonicOS I tested was pretty limited as far as what I believe should be features. Let&amp;rsquo;s be clear, I&amp;rsquo;m mostly talking about IPv6.  I&amp;rsquo;ve ranted and raved that anyone not doing IPv6 is already years behind.  Get on the ball, you&amp;rsquo;re already late to the game.  Yesterday, a colleague said something that resonated with me regarding this and it got me thinking about how much IPv6 support SonicOS had added.  Many folks that aren&amp;rsquo;t doing IPv6 think that instead of doing something that may be a little hard that they&amp;rsquo;re just not going to do anything.   They&amp;rsquo;re dead wrong.  They&amp;rsquo;re forcing themselves to do something else like CGN or multi-layer NAT, or something else equally (or more) unpleasant.  And then they&amp;rsquo;ll do IPv6 anyway after that. It &lt;strong&gt;is&lt;/strong&gt; inevitable. But I digress…. I pulled my old TZ-210 out and upgraded it to SonicOS Enhanced 5.9.0.2-107o.  What a pleasant surprise!  A &lt;strong&gt;huge&lt;/strong&gt; amount of IPv6 support added!  &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-v4.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-v4.png&#34; alt=&#34;sonicwall-v6-v4&#34; /&gt;&lt;/a&gt; They&amp;rsquo;ve really done their homework here.  I was very surprised to see things like DHCPv6-PD with interface tracking.  Well done, Dell.  This will allow for small and home offices to take advantage of the Comcast and AT&amp;amp;T DHCPv6-PD that they&amp;rsquo;ve been offering for a while now, and lets be honest, once it&amp;rsquo;s on, most folks will never even realize they&amp;rsquo;re using IPv6. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-dhcpv6.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-dhcpv6-257x300.png&#34; alt=&#34;sonicwall-dhcpv6&#34; /&gt;&lt;/a&gt; &amp;lt;== This is a giant step forward for reasons that are far beyond simple protocol support.   &lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/12/sonicwall-v6-fw-rules.png&#34; alt=&#34;sonicwall-v6-fw-rules&#34; /&gt;   I&amp;rsquo;m very happy to see this level of support from Dell/Sonicwall.  I expected to put this box in, turn it on, use it for a few days and turn it off.  I set it up in transparent mode, tuned the rules a bit….and I have no real plans of taking it out.  I&amp;rsquo;m actually pretty happy with it for the application I&amp;rsquo;m using it for.  It doesn&amp;rsquo;t seem to really impede anything I want to do (after TCP ssh timeout rules to a reasonable time; BTW, timeouts are one of the reasons I don&amp;rsquo;t like firewalls).     This brings me to my problem with Sonicwall (and many network and network security vendors).  My licenses have all expired. I can understand having to license services that cost money because they&amp;rsquo;re licensed upstream services.  I get that, I really do.  However,  Some of the things that Dell requires licenses for seem a bit extreme to me.  The fact that I get essentially zero visualization options once the licenses expire is downright shameful.  No worries, I&amp;rsquo;ll just export Netflow/IPFIX data.  Nope, also a licensed feature.  You heard that right.  No flow export, no real time monitor.  Heck, I can&amp;rsquo;t even look at interface graphs on-box. I have to poll with a 3rd party tool suite.  Realistically, one gets significantly better instrumentation from a default &lt;a href=&#34;http://www.pfsense.org&#34;&gt;pfSense&lt;/a&gt; load.  And pfSense has had IPv6 support for years. If you take away all of the downright shameful licensing requirements to do anything useful with trending and instrumentation, this is a good platform. Their IPv6 support is solid now.   However, for anyone running  networks  that require instrumentation and visualization, you had better budget for [unnecessary] fees or have 3rd party mechanisms for collecting the data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inline-jflow on MX series Juniper</title>
      <link>https://forwardingplane.net/post/inline-jflow-on-mx-series-juniper/</link>
      <pubDate>Sun, 01 Sep 2013 15:40:29 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/inline-jflow-on-mx-series-juniper/</guid>
      <description>&lt;p&gt;One of the things that I&amp;rsquo;ve always lamented about using non-Cisco hardware is the lack of true 1:1 &lt;a href=&#34;http://en.wikipedia.org/wiki/Netflow&#34;&gt;netflow&lt;/a&gt; support.  Say what you will about jflow, cflow, sflow&amp;hellip;.there is no substitute for netflow, with sflow being the exception to that since it is a protocol that inherently supports ipv6 and &lt;a href=&#34;http://www.forwardingplane.net/2012/10/host-based-sflow-or-sflow-for-more-than-just-network-traffic/&#34; title=&#34;Host based sflow, or, sflow for more than just network traffic&#34;&gt;can transport far more than simple network information&lt;/a&gt; if configured in certain ways on certain devices. On newer MX series Juniper routers the game has changed.  One to one flow data export (in IPFIX format) is now available, in hardware, for IPv4 and IPv6.  Queue the service providers rejoice.  Configuring this on the MX is a tad more involved than a Cisco, but it&amp;rsquo;s still pretty straightforward. In set commands:```
 buraglio@mx480&amp;gt; show configuration forwarding-options | display set
 set forwarding-options sampling traceoptions file ipfix.log
 set forwarding-options sampling traceoptions file size 10k
 set forwarding-options sampling instance 1to1 input rate 1
 set forwarding-options sampling instance 1to1 family inet output flow-server &lt;br /&gt;
 10.16.120.204 port 9995
 set forwarding-options sampling instance 1to1 family inet output flow-server &lt;br /&gt;
 10.16.120.204 version-ipfix template ipv4
 set forwarding-options sampling instance 1to1 family inet output \
 inline-jflow source-address 10.16.120.1
 set forwarding-options sampling instance 1to1 family inet6 output flow-server \
 10.16.120.204 port 9995
 set forwarding-options sampling instance 1to1 family inet6 output flow-server \
 10.16.120.204 version-ipfix template ipv6
 set forwarding-options sampling instance 1to1 family inet6 output inline-jflow \
 source-address 10.16.120.1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Once the forwarding-options are set the chassis hardware has to be told what it can do.  Lets say you want to configure the inline-jflow on interfaces that exist on fpc0 (MPC0):```&#34; data-lang=&#34;Once the forwarding-options are set the chassis hardware has to be told what it can do.  Lets say you want to configure the inline-jflow on interfaces that exist on fpc0 (MPC0):```&#34;&gt;buraglio@ur1rtr&amp;gt; show configuration chassis fpc 0 | display set
set chassis fpc 0 pic 0 tunnel-services bandwidth 1g
set chassis fpc 0 pic 1 tunnel-services bandwidth 1g
set chassis fpc 0 sampling-instance 1to1
set chassis fpc 0 inline-services flow-table-size ipv4-flow-table-size 5
set chassis fpc 0 inline-services flow-table-size ipv6-flow-table-size 5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice we&amp;rsquo;re referencing the sampling instance we created in the forwarding-options.  This tells the MPC (FPC) and MIC (PIC) that you want a traceoptions file (deactivate this after the setup is all working; I generaly keep a traceoptions section configured but deactivated in nearly every protocol for quick debugging.)  Enables the sampling instance we jut added to the forwarding options and sets the flow collector address and port.  It also sets the protocol as &lt;a href=&#34;http://en.wikipedia.org/wiki/IP_Flow_Information_Export&#34;&gt;IPFIX&lt;/a&gt; (Essentially netflow v9).  Now that we have the framework set up, we need to add the bits to the interface that tell it to sample the traffic```
buraglio@ur1rtr&amp;gt; show configuration interfaces xe-0/0/1 | display set
set interfaces xe-0/0/1 description &amp;ldquo;trib port 1&amp;rdquo;
set interfaces xe-0/0/1 flexible-vlan-tagging
set interfaces xe-0/0/1 encapsulation flexible-ethernet-services
set interfaces xe-0/0/1 unit 105 description &amp;ldquo;Trib peering #1&amp;rdquo;
set interfaces xe-0/0/1 unit 105 vlan-id 1005
set interfaces xe-0/0/1 unit 105 family inet mtu 9000
set interfaces xe-0/0/1 unit 105 family inet sampling input
set interfaces xe-0/0/1 unit 105 family inet address 10.17.120.&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;30&lt;/sub&gt;
set interfaces xe-0/0/1 unit 105 family inet6 mtu 9000
set interfaces xe-0/0/1 unit 105 family inet6 sampling input
set interfaces xe-0/0/1 unit 105 family inet6 address 2001:DB8:1:dead:beef::&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
Point this at your favorite flow collector and reap the benefits of having flow data. As far as collectors there are a lot of options, I prefer [nfdump](http://nfdump.sourceforge.net/)/[nfsen](http://nfsen.sourceforge.net/) because it&#39;s FOSS, very flexible, has [plugins](http://sourceforge.net/apps/trac/nfsen-plugins/) and is well supported, but there are fantastic commercial options for every flavor.  I&#39;ve used the Arbor Peakflow and like it but it has a very expensive licensing model so it is generally deployed in larger environments.   I&#39;ve also heard good things about the [SolarWinds Netflow Analyzer](http://www.solarwinds.com/netflow-traffic-analyzer.aspx) but I&#39;ve never used it. Caveats: On the older ichip platform with the MS-DPC you can view the actual flows on the box itself using the command &amp;lt;command&amp;gt;  much like show cef on a cisco.  I cannot find a way to do that on in the inline-jflow configuration on the trio hardware. This was configured on JunOS 12.3R3.4 on MX480 hardware with MPC3/Trio hardware. I can&#39;t seem to get the IPv6 flow data from the flow records.  I suspect it&#39;s either not in there yet or I&#39;ve configured that part wrong. -----EDIT----- IPv6 flow data is working fine, flows are just being obfuscated by IPv4.  Using nfdump and singling out the IPv6 traffic shows what we expect:```
nfdump -M /home/netflow/profiles-data/testlab/rtr1  -T  -r \\ 
2013/09/03/nfcapd.201309030945 -n 20 -s ip/flows -6
nfdump filter:
inet6
Top 20 IP Addr ordered by flows:

---SNIP---

Summary: total flows: 19222, total bytes: 28.7 M, total packets: \\ 
45173, avg bps: 732, avg pps: 0, avg bpp: 636
Time window: 2013-07-15 16:42:57 - 2013-09-03 09:50:20
Total flows processed: 4134975, Blocks skipped: 0, Bytes read: 281643580
Sys: 1.235s flows/second: 3345958.0  Wall: 1.770s flows/second: 2335921.0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Building a secured network in a box</title>
      <link>https://forwardingplane.net/post/building-a-secured-network-in-a-box/</link>
      <pubDate>Fri, 26 Jul 2013 05:28:15 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/building-a-secured-network-in-a-box/</guid>
      <description>&lt;p&gt;In many environments, the move to virtualization is a path well traveled.  My home and lab networks are no exception to this and I&amp;rsquo;m sure nearly everyone who reads these pages has at least been exposed to it in one way or another.  I have played with nearly all of the virtualization platforms and am firmly in the camp that there will be a large segment of networking that will move to a virtualized platform especially in the data center and campus segments.  Virtualization of routing tables has existed for a long time, see &lt;a href=&#34;http://en.wikipedia.org/wiki/Virtual_Routing_and_Forwarding&#34;&gt;VRF-Lite  and MPLS VRF&lt;/a&gt; as well as multi-tenancy technologies like Junipers logical systems so the concept, at some level, has existed in networking for quite some time. &amp;ldquo;How is a small to medium sized environment going to take advantage of this and more interestingly, how can it be secured?&amp;rdquo; &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/Red_onions.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/Red_onions-1024x763.jpg&#34; alt=&#34;Red_onions&#34; /&gt;&lt;/a&gt;This is a question I inadvertently found at least one answer to when building out my own network and testing a great little project called &lt;a href=&#34;http://securityonion.blogspot.com/&#34;&gt;security onion&lt;/a&gt;.  I&amp;rsquo;d seen and used this platform a bit in the past, but it had been at least a version ago and my exposure was pretty short. The problem now, though, was that everything I have in use other than a gigabit switch and a NAS is virtualized.  My firewall, my router, all of my dev and test boxes and all but one of my non-portable machines.  All VMs.  I&amp;rsquo;d gone back and forth between VMware and KVM, and while I like KVM better, management of edge case or non-standard networking stuff wasn&amp;rsquo;t as well documented and &lt;a href=&#34;http://openvswitch.org/&#34;&gt;OVS&lt;/a&gt; either wasn&amp;rsquo;t in the build of CentOS I was using or I didn&amp;rsquo;t know about its inclusion yet, so I settled on VMware ESXi 5 for this particular box.  I needed to be able to span a port on a vswitch.  My hopes were not high, but I figured there may be an unsupported way. Interestingly enough, the VMWare operating system has a mechanism for makeshift &amp;ldquo;spanning&amp;rdquo; a port.  More correctly, it has a way to see &amp;ldquo;all vlans&amp;rdquo; on a given vswitch, and it&amp;rsquo;s quite simple.  Essentially, you have to create a port group on vlan 4095 on the vswitch then set that port group to promiscuous mode. Add the vm NIC that you are going to use to monitor traffic to that port group.  &lt;a href=&#34;http://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;amp;cmd=displayKC&amp;amp;externalId=1004099&#34;&gt;From VMware site&lt;/a&gt;: &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWare-site.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWare-site.png&#34; alt=&#34;VMWare-site&#34; /&gt;&lt;/a&gt; I was pleasanty surprised at how easy it was and was at the point of telling security onion to have interfaces on both of the vswitches in less than 15 minutes. Configuration, Networking, Properties, Security. VLAN 4095. Done.Here are a few screenshots of my VMware config following the steps laid out above. It&amp;rsquo;s far more simple than I could have imagined.   &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWAre-config-networking.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWAre-config-networking.png&#34; alt=&#34;VMWAre-config-networking&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWare-SPAN-WAN1.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWare-SPAN-WAN1.png&#34; alt=&#34;VMWare-SPAN-WAN1&#34; /&gt;&lt;/a&gt;           &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWARE-Span-WAN2.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWARE-Span-WAN2.png&#34; alt=&#34;VMWARE-Span-WAN2&#34; /&gt;&lt;/a&gt;             At this point Security onion was able to see what was going on.  In my case I allowed for visibility on both sides of my routing firewall, so there was a decent amount of data.     This is the interesting part, I think.  My initial thoughts are that this could be a &amp;ldquo;network in a box&amp;rdquo; for small offices.  No router, no servers (other than the VMware host), essentially a fully functional &amp;ldquo;enterprise&amp;rdquo; network of hosts, including a very high quality IDS device in a single device.  Put whatever firewall / vrouter in there that is supported or familiar, &lt;a href=&#34;http://www.pfsense.org&#34;&gt;pfsense&lt;/a&gt;, &lt;a href=&#34;http://www.juniper.net&#34;&gt;Juniper vSRX&lt;/a&gt;, &lt;a href=&#34;http://www.fortinet.com&#34;&gt;fortinet&lt;/a&gt;, &lt;a href=&#34;http://www.paloaltonetworks.com&#34;&gt;Palo Alto&lt;/a&gt;, they all have virtual devices and they all do a fine job [with the exception of IPv6; the only one I could get DHCPv6-PD to work with was pfsense.  Still need to test the fortinet]. Here is a high level diagram of how mine is put together. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWare-SPAN.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/07/VMWare-SPAN.jpg&#34; alt=&#34;VMWare SPAN&#34; /&gt;&lt;/a&gt; Is this a viable option?  I have no idea, but it does work pretty darned well.  In fact, ironically enough, the day I got this working (July 13, 2013), a post went up over at &lt;a href=&#34;http://www.geekempire.com/2013/07/virtual-security-onion-via-ubuntu-kvm.html&#34;&gt;GeekEmpire&lt;/a&gt; doing almost exactly the same thing with KVM and OVS.  The setup is shockingly similar, right down to using pfSense. I was actually a bit envious, not only because his post went up first, but because he did what I had actually wanted to do by using KVM and OVS.  It&amp;rsquo;s well done, I recommend reading it. I think this is a sign of what will come.  &amp;ldquo;network in a box&amp;rdquo; is an intriguing concept, and I&amp;rsquo;m absolutely &lt;a href=&#34;https://www.google.com/search?q=network+in+a+box&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=org.mozilla:en-US:official&amp;amp;client=firefox-a&amp;amp;channel=fflb&#34;&gt;positive I am not the only one thinking about it&lt;/a&gt;.  I think, however, that the important part is to see the options available and make sure the masses know that there are many ways to do it.  It is not VMware or nothing, and it&amp;rsquo;s certainly not cisco or the highway.  OpenSource tools like OVS and KVM under a free operating system like Linux can compete at the highest levels and there are documents and how-tos out there.  More importantly, it&amp;rsquo;s not hard.  The same goes for security appliances and even vrouters.  Security Onion and pfSense are both viable platforms and they&amp;rsquo;re just the tip of the iceberg.  At the end of the day it all comes down to options. Opensource, commercial, they all have virtualization strategies and the more you know the better off you&amp;rsquo;ll be in the long run because virt is here to stay.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why hardware firewalls are the walking dead</title>
      <link>https://forwardingplane.net/post/why-hardware-firewalls-are-the-walking-dead/</link>
      <pubDate>Mon, 18 Mar 2013 11:02:42 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/why-hardware-firewalls-are-the-walking-dead/</guid>
      <description>&lt;p&gt;OK, maybe they&amp;rsquo;re not totally dead, but they&amp;rsquo;re being demoted. To the mail room. During the course of my career I&amp;rsquo;ve always had at least some responsibility for firewall and security devices.  In those ~15 years, how these boxes are built and function has shifted.  From the perspective of my career, there were IOS ACLs (yes, I know, not a firewall), there was the IOS firewall versions and there were software packages such as gauntlet, checkpoint.  There was the Cisco PIX. One installation I worked on in a past life even chose to use IPFW on BSD boxes.   Then came was the Sonicwall, a newer take on how to manage a security appliance via a web interface. There was the FWSM.  A few things stayed the same. Dedicated hardware. &lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/Firewall-1024x670.jpg&#34; alt=&#34;Free Firewall Clipart Illustrations at http://free.ClipartOf.com/&#34; /&gt; Being a networking guy by nature, it always irritated me that the inline security devices were 3 years behind networking&amp;hellip;.at best. Working in a service provider and in research and education has given me a bit of a different take on firewalls and IPS devices as well and has only solidified this belief.   There are a few things that make firewalls and IPS devices an unholy thing in the world that I live in. Since I &lt;strong&gt;love&lt;/strong&gt; bulleted lists, this is an opportunity to use one:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;They get in the way.&lt;/strong&gt;  Of course they to, that is their job.  Big data flows, Multicast, jumbo frames, IPv6.  There are boxes that can &lt;strong&gt;finally&lt;/strong&gt; do these things, but they are 5-7 years behind and even now are often lacking in support and features.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;They&amp;rsquo;re expensive.&lt;/strong&gt;  When considering CAPEX, they are often prohibitively expensive compared to something like a passive IDS.  Not many budget for a firewall / IPS that can do multi 10G at line rate, IPv6, Multicast and can handle things like GridFTP flows, because until recently they didn&amp;rsquo;t exist.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Speeds and Feeds are always first.&lt;/strong&gt;  I worked on 10G and OC192 on the WAN around 2002 with 10G on the LAN around the same time.  The first real firewall I saw that could even fall into consideration for that was the &lt;a href=&#34;http://webcache.googleusercontent.com/search?q=cache:pLu75PgugigJ:www.force10networks.com/news/pressreleases/2006/pr-2006-08-28_2.asp+&amp;amp;cd=1&amp;amp;hl=en&amp;amp;ct=clnk&amp;amp;gl=us&amp;amp;client=safari&#34;&gt;FPGA based P10&lt;/a&gt; from Force10 in 2005 (we had an early demo).  It was a really innovative device but even it was very clunky since it was an FPGA and caused service interruptions every time you needed to push rules to the FPGAs.  The Juniper SRX came much later at 2009, and even &lt;a href=&#34;http://www.forwardingplane.net/2010/09/updating-srx-idp-signatures/&#34; title=&#34;Updating SRX IDP signatures&#34;&gt;it&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2011/01/moving-junos-code-between-srx-cluster-nodes/&#34; title=&#34;Moving JunOS code between SRX cluster nodes&#34;&gt;had&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2010/10/enabling-ipv6-on-juniper-srx-5800-cluster/&#34; title=&#34;Enabling IPv6 on Juniper SRX 5800 cluster&#34;&gt;some&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/2010/09/srx-ipv6-flow-based-processing/&#34; title=&#34;SRX IPv6 flow based processing&#34;&gt;issues&lt;/a&gt; back then.  There exists a handful of options now, the Sonicwall SuperMassive, the Juniper SRX  and the Palo Alto come to mind but they&amp;rsquo;re late.  10G is old hat to some of us.  We&amp;rsquo;re on to 40G and 100G.  What now?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, lets get down to the buzzwords.  Cloud.  Data Center.  Virtualization.  SDN.  OpenFlow.  Ironically enough, being &amp;ldquo;buzzword compliant&amp;rdquo; is actually relevant to this commentary. With the advent of virtualization of nearly everything, including the network, vendors are adding things like virtualized firewalls.  Juniper has added the &lt;a href=&#34;http://www.juniper.net/us/en/dm/edge/products/&#34;&gt;JunosV Firefly&lt;/a&gt;, Cisco has added the &lt;a href=&#34;http://www.cisco.com/en/US/products/ps12233/index.html&#34;&gt;VSG&lt;/a&gt;.  There are surely others.  This movement is just in it&amp;rsquo;s infancy, but it&amp;rsquo;s big and I would venture to say that it is game changing.  With the huge amounts of cores and memory in virtual machine hosts, it makes sense that the network become part of that for management, total cost of ownership and usability. The really interesting part of all of this comes not with the virtualization of firewalls, but with the commoditization of network silicon.  Chip makers that are spinning ASICS need to make sure their ducks are in a row since, in my personal opinion, there are a lot of options for LAN and data center equipment.  &lt;a href=&#34;http://www.aristanetworks.com&#34;&gt;Arista&lt;/a&gt; is already on top of this.  Others vendors will adopt this methodology as merchant silicon adds more abilities.  Firewalls will are on their way now.  Eventually WAN gear will come around. What I&amp;rsquo;m really excited about is the prospect of a merchant silicon based, 40 or 100G OpenFlow based &amp;ldquo;Firewall&amp;rdquo;.  The foundation is already laid for this.  &lt;a href=&#34;http://www.openflowhub.org/display/floodlightcontroller/Firewall+(Dev)&#34;&gt;Floodlight already has a dev module for building a firewall with OpenFlow&lt;/a&gt;.  I&amp;rsquo;ve not tested this extensively yet.  It&amp;rsquo;s on my short list but wether it works or not isn&amp;rsquo;t really even relevant.  The fact of the matter is that this is the way to a comfortable security perimeter at a reasonable speed for a far more reasonable price tag. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/OF-Firewall.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/03/OF-Firewall.jpg&#34; alt=&#34;OF-Firewall&#34; /&gt;&lt;/a&gt;Think of buying an OpenFlow capable device with 40 and 100G interfaces in it as your firewall and IPS device.  Port cost is very low.  CAPEX is low.  OPEX is also fairly low since it is just a normal piece of network hardware.  Management is accomplished via an OpenFlow controller. Rules are pushed manually or programmatically based entirely on site policy.  IPS functions can be performed via a passive system like BroIDS or Snort triggering rules in OpenFlow much like is being commonly done with &lt;a href=&#34;http://www.forwardingplane.net/2011/10/black-hole-routing/&#34; title=&#34;Black Hole routing&#34;&gt;black hole routers&lt;/a&gt; now. This will happen.  It&amp;rsquo;s already happening. Firewall vendors take notice.  Have a strategy for Virtualization.  Have a strategy for dealing with OpenFlow and SDN. It is my belief that once the reporting and management is even half as good as a &lt;a href=&#34;http://www.paloaltonetworks.com&#34;&gt;Palo Alto&lt;/a&gt; or &lt;a href=&#34;http://www.sonicwall.com&#34;&gt;Sonicwall&lt;/a&gt;, the market will start to change based solely on cost.  &lt;a href=&#34;http://openflow.marist.edu/avior.html&#34;&gt;There is already work being done on this as well&lt;/a&gt;. Am I right?  Time will be the judge, but I suspect I am.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>IPv6 Toolkit 1.3 fun - scan6</title>
      <link>https://forwardingplane.net/post/ipv6-toolkit-1-3-fun-scan6/</link>
      <pubDate>Wed, 20 Feb 2013 10:53:38 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ipv6-toolkit-1-3-fun-scan6/</guid>
      <description>&lt;p&gt;Recently &lt;a href=&#34;http://www.si6networks.com/tools/ipv6toolkit/&#34;&gt;SI6 released the IPv6 Toolkit 1.3 &lt;/a&gt;  This release is on the heels of this &lt;a href=&#34;http://tools.ietf.org/html/draft-ietf-opsec-ipv6-host-scanning-00&#34;&gt;IETF draft &lt;/a&gt; on IPv6 host scanning.  It was long thought that scanning an IPv6 network was impossible.  The address space was too large and reliably ascertaining the hosts from it would be too time consuming to even attempt.  However, as &lt;a href=&#34;http://en.wikipedia.org/wiki/Hans_Zarkov&#34;&gt;Dr. Hans Zarkov&lt;/a&gt; says in the 1980 classic cult film of my youth, &lt;a href=&#34;http://en.wikipedia.org/wiki/Flash_Gordon_(film)&#34;&gt;Flash Gordon&lt;/a&gt;, &amp;ldquo;You can&amp;rsquo;t beat the human spirit!&amp;ldquo;  That fine community out there has thought outside the box and found a way.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.thiel-a-vision.com/wp-content/uploads/2010/07/flash68sm.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a network engineer by profession, but I&amp;rsquo;ve been a security guy more than once during my ~15 years doing IT work; I think there is definite value in studying &amp;ldquo;the dark side&amp;rdquo; and learning it&amp;rsquo;s power.  Couple that with my zealotry of IPv6&amp;hellip;.and I&amp;rsquo;ve found a time vortex. Scanning IPv6 is not like scanning IPv4.   It can&amp;rsquo;t be.  A /64 network has 18,446,744,073,709,551,616 (18 quintillion) unique addresses and a /64 is the default allocation for an end user subnet.  Have fun scanning that one by one.  The methodology used by scan6 is pretty innovative, but first you have to build it. The &lt;a href=&#34;http://www.si6networks.com/tools/ipv6toolkit/&#34;&gt;IPv6 toolkit&lt;/a&gt; is available via download &lt;a href=&#34;http://www.si6networks.com/tools/ipv6toolkit/ipv6-toolkit-v1.3.1.tar.gz&#34;&gt;here&lt;/a&gt;.  It is current;y supported under FreeBSD, NetBSD, OpenBSD, Linux, and Mac OS X.  I&amp;rsquo;ve chosen to build mine on my laptop, a macbook pro running OS 10.8. It&amp;rsquo;s pretty straightforward to build assuming you have the Developers Tools and CLI support added. &lt;em&gt;(~/Downloads/ipv6-toolkit-v1.3) Tardis $ make&lt;/em&gt; &lt;em&gt;gcc -Wall -o flow6 tools/flow6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o frag6 tools/frag6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o icmp6 tools/icmp6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o jumbo6 tools/jumbo6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o na6 tools/na6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o ni6 tools/ni6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o ns6 tools/ns6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o ra6 tools/ra6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o rd6 tools/rd6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o rs6 tools/rs6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o scan6 tools/scan6.c -lpcap -lm&lt;/em&gt; &lt;em&gt;gcc -Wall -o tcp6 tools/tcp6.c -lpcap -lm&lt;/em&gt;   That&amp;rsquo;s it.  If you want to install it in the global environment, to a &amp;ldquo;&lt;em&gt;make install&lt;/em&gt;&amp;rdquo; Now for the good stuff.  The docs are well written for this tool. Here is an example of scanning a local segment in verbose mode and the output: &lt;em&gt;(~/Downloads/ipv6-toolkit-v6.8) tardis $ sudo ./scan6 -i en6 -l -e -v&lt;/em&gt; &lt;em&gt;Link-local addresses:&lt;/em&gt; &lt;em&gt;fe80::20d:b9ff:fe68:8ca6 @ 00:0d:b9:68:8c:a6&lt;/em&gt; &lt;em&gt;fe80::264:d6ff:fe25:9704 @ 00:64:d6:25:97:04&lt;/em&gt; &lt;em&gt;fe80::26f:f8ff:fe06:dcb4 @ 00:6f:f8:06:dc:b4&lt;/em&gt; &lt;em&gt;fe80::22cf:80ff:fea8:ec26 @ 20:cf:80:a8:ec:26&lt;/em&gt; &lt;em&gt;fe80::224:86ff:fe9f:c628 @ 00:24:86:9f:c6:28&lt;/em&gt; &lt;em&gt;fe80::267:f2ff:fe52:8574 @ 00:67:f2:52:85:74&lt;/em&gt; &lt;em&gt;fe80::8ed0:f8ff:fe8a:4d29 @ 8c:d0:f8:8a:4d:29&lt;/em&gt; &lt;em&gt;fe80::62fa:cdff:fe86:62bd @ 60:fa:cd:86:62:bd&lt;/em&gt; &lt;em&gt;fe80::629a:ddff:fe45:6c08 @ 60:9a:dd:45:6c:08&lt;/em&gt; &lt;em&gt;Global addresses:&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24::6 @ 00:0d:b9:68:8c:a6&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:224:86ff:fe9f:c628 @ 00:24:86:9f:c6:28&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:22cf:80ff:fea8:ec26 @ 20:cf:80:a8:ec:26&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:26f:f8ff:fe06:dcb4 @ 00:6f:f8:06:dc:b4&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:267:f2ff:fe52:8574 @ 00:67:f2:52:85:74&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:62fa:cdff:fe86:62bd @ 60:fa:cd:86:62:bd&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:8ed0:f8ff:fe8a:4d29 @ 8c:d0:f8:8a:4d:29&lt;/em&gt; &lt;em&gt;2001:db8:86c0:24:629a:ddff:fe45:6c08 @ 60:9a:dd:45:6c:08&lt;/em&gt; This example,  taken straight from the documentation and run on my local network (with MAC and v6 addresses changed to protect the innocent), will &amp;ldquo;Perform host scanning on the local network (“-l” option) using interface “eth0” (“-i” option). Use both ICMPv6 echo requests and unrecognized IPv6 options of type 10xxxxxx (default). Print link- link layer addresses along with IPv6 addresses (“-e” option). Be verbose (“-v” option).&amp;rdquo; One of the interesting things I saw available in this scan6 tool was the ability to narrow down a search based on a known OUI.  If someone wanted to search for virtual machines hosted by VMWare host and the IPv4 address of the VMWare host is known, this command would be useful for scanning from a host off net, scanning a network in the lab area:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sudo ./scan6 -i en0 -d 2001:db8:e00:4000::/64 –tgt-virtual-machines vmware –tgt-ipv4-embedded 10.17.4.&lt;sup&gt;195&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; What this does is target the /64 but narrow down the search to vmwre specific virtual machines hosted on the vmware host at IPv4 address 10.17.4.&lt;sup&gt;195&lt;/sup&gt;&amp;frasl;&lt;sub&gt;32&lt;/sub&gt;. It is able to accomplish this because it can make assumptions about vmware (or virtual box) based on their OUI and how they build their The OUI will always be set to  00:05:59 for VMWare.  Additionally, The next 16-bits of the MAC address are set to the same value as the last 16 bits of the console operating system&amp;rsquo;s primary IPv4 address. If that were not enough, the final eight bits of the MAC address are set to a hash value based on the name of the virtual machine&amp;rsquo;s configuration file. That, according to the IETF draft and math, means that if you know the VMWare host IPv4 address you can reduce a scan of 64 bits down to just 8 bits.  This is a powerful set of tools that this post does not even scratch the surface of. Be careful using this scan tool, there are a number of devices that will have their neighbor table exhausted and potentially cause a DoS by running the networking gear out of resources, which in and of itself is another potential use of this tool.  There is a HUGE amount of work to be done and learned about IPv6, it&amp;rsquo;s not going away and, in fact, I&amp;rsquo;ve been using it in one form or another for 10 years or so.  If you&amp;rsquo;re a network engineer or a security professional you&amp;rsquo;re doing yourself a disservice by not learning it. In addition to the scan6 binary, the toolkit includes: flow6 frag6 icmp6 jumbo6 na6 ni6 ns6 ra6 rd6 rs6 scan6 tcp6 With the content providers and consumer ISPs providing native IPv6 more and more every day (my comcast service has a DHCPv6-PD /64 and a DHCPv6 /128 provisioned by default) the world at large is doing more v6.  If you&amp;rsquo;ve got MS windows on your network and it&amp;rsquo;s even relatively new, you&amp;rsquo;ve got v6 unless you policy it as disabled.  It&amp;rsquo;s tunneling it. Make these part of your arsenal for testing gear, pen testing, whatever. I promise it&amp;rsquo;s worth your time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Watch out, Gigamon (and others), Arista is bringing their A game</title>
      <link>https://forwardingplane.net/post/watch-out-gigamon-and-others-arista-is-bringing-their-a-game/</link>
      <pubDate>Sat, 16 Feb 2013 03:11:20 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/watch-out-gigamon-and-others-arista-is-bringing-their-a-game/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s no secret that I&amp;rsquo;m a fan of the model &lt;a href=&#34;http://www.aristanetworks.com&#34;&gt;Arista Networks&lt;/a&gt; is using to make gear and provide innovative services and products. In my opinion, they&amp;rsquo;re changing the landscape of campus and data center networking gear. I&amp;rsquo;m always a fan of the little guy trying to change the world and this falls under that category. For those that don&amp;rsquo;t know, Arista Networks is a &amp;ldquo;hardware&amp;rdquo; networking company that is using merchant silicon wrapped in their custom linux based operating system (which is very much like IOS).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/ARISTA-TAP.jpg&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/ARISTA-TAP-1024x768.jpg&#34; alt=&#34;ARISTA-TAP&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This model does a few things. It takes the time it would normally take a vendor to engineer and spin an ASIC, typically 1-3 years) and completely removes it. Instead, they rely on silicon manufacturers like Intel and &lt;a href=&#34;http://www.fulcrummicro.com&#34;&gt;Fulcrum&lt;/a&gt; for their already engineered and tested chips. Arista is generally touted as an extremely low latency box and has been widely deployed in the financial industry because of this. However, they&amp;rsquo;re not a one trick pony, not by any means. Their open architecture and OS allows for &lt;strong&gt;heavy&lt;/strong&gt; customization. In fact, unlike most others, it&amp;rsquo;s encouraged. Arista has put together an &lt;a href=&#34;https://eos.aristanetworks.com/home.php&#34;&gt;ecosystem for extending and expanding&lt;/a&gt; their &lt;a href=&#34;https://eos.aristanetworks.com/2011/03/eos-so-what-is-it/&#34;&gt;EOS&lt;/a&gt; networking operating system. Want something added to the CLI? Easy, it&amp;rsquo;s all python and can be changed on-box and submitted back to the community. They also have a very, very slick internal mechanism called the sysdb, but that&amp;rsquo;s another blog post altogether.   None of this is really new. Folks have been using merchant silicon forever. What is new and refreshing is the open nature of it. Additionally, the exclusive use of merchant silicon is something [I believe] is now in this class of hardware. With the open nature of this platform, it also lends itself well to the OpenFlow movement in that it&amp;rsquo;s essentially a linux box on well documented hardware of which the vendor is encouraging modification. In addition, it is a well tested data center product. I&amp;rsquo;m calling it now, this platform is going to go places in it&amp;rsquo;s market. For the newest addition to the capabilities portfolio, this is where it really gets interesting. As of 2/13/2013 Arista has added some very &lt;a href=&#34;http://www.aristanetworks.com/en/news/pressrelease/532-pr-20130212-01&#34;&gt;compelling tap aggregation options&lt;/a&gt;. What this means, is that you can now aggregate Nx1 or 10G at 40G, then symmetrically hash that across another 10G array to an IDS cluster. Why is this important? Monitoring fat links. Have some 100G? Good luck finding a security mechanism to watch that.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/ARISTA-TAP.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/ARISTA-TAP.png&#34; alt=&#34;ARISTA TAP&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until now the only options for this are players like &lt;a href=&#34;http://www.gigamon.com&#34;&gt;Gigamon&lt;/a&gt;, &lt;a href=&#34;http://www.cpacket.com&#34;&gt;cPacket&lt;/a&gt; and maybe &lt;a href=&#34;http://www.mrv.com&#34;&gt;MRV&lt;/a&gt;. All are very expensive and one-off solutions. Arista offers a standard ethernet switch that can be managed by an existing networking team, integrated into existing network tools and maintained like any other router or switch. OpEx is a wash. Capital expenditure is standard [probably cheaper] than a normal Layer2 switch. It looks JUST like IOS, so the old networking guy that hates change will only complain a little that it&amp;rsquo;s not a blue box with a bridge on it. This may seem like a small deal, but the implications for passive security monitoring are huge. This feature alone will have a trickle down effect over the next few years since it&amp;rsquo;s something that is only recently being exercised in enterprise worlds. I suspect this will also have a very large impact to gigamon, who is really the current industry leader in this corner of the market, but is priced well beyond what many can afford. Arista can now do the symmetric hashing on layer2, layer3 or layer4 parameters. ACL support is also coming, although I&amp;rsquo;ve not seen it work like I have the hashing.   Oh, you want to know how to do it? =) It currently doesn&amp;rsquo;t exist in the CLI, but here is basically how it&amp;rsquo;s done. Thanks to an awesome Arista rep, the heavy lifting of parsing through the Acons interface is all condensed to a simple script. from the CLI: Log in and enable.```
7150-Source#bash
Arista Networks EOS shell
[arista@7150-Source ~]$ cd /mnt/flash&lt;/p&gt;

&lt;p&gt;[arista@7150-Source ~]$vi set_hash.sh
#!/bin/ti
rm /mnt/flash/set_hash_log.txt
cat &amp;lt;&amp;lt; EOF | Acons FocalPointV2 &amp;gt;&amp;gt; /mnt/flash/set_hash_log.txt 2&amp;gt;&amp;amp;1
from FmApi import *
fmDbgWriteRegisterField(0,0,0,0,&amp;ldquo;FM6000_HASH_LAYER3_PROFILE&amp;rdquo;,&amp;ldquo;SymmetrizeL3&amp;rdquo;,1)
fmDbgWriteRegisterField(0,0,0,0,&amp;ldquo;FM6000_HASH_LAYER3_PROFILE&amp;rdquo;,&amp;ldquo;SymmetrizeL4&amp;rdquo;,1)
fmDbgWriteRegisterField(0,0,0,0,&amp;ldquo;FM6000_HASH_LAYER2_KEY_PROFILE&amp;rdquo;,&amp;ldquo;SymmetrizeMAC&amp;rdquo;,1)
EOF
exit 0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-Done. This, of course, doesn&#39;t include any of the port channel and monitor interface configuration, but if you&#39;re this deep, you probably know how to do that already. If you&#39;d like to dump this to a log, add the following lines to the end of the script before the &#34;EOF&#34;```&#34; data-lang=&#34;Done. This, of course, doesn&#39;t include any of the port channel and monitor interface configuration, but if you&#39;re this deep, you probably know how to do that already. If you&#39;d like to dump this to a log, add the following lines to the end of the script before the &#34;EOF&#34;```&#34;&gt;fmDbgDumpRegisterV2(0,0,0,&amp;#34;FM6000\_HASH\_LAYER2\_KEY\_PROFILE&amp;#34;)
fmDbgDumpRegisterV2(0,0,0,&amp;#34;FM6000\_HASH\_LAYER3\_PROFILE&amp;#34;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;*As the CLI bits become available in EOS 4.12, this post will be amended to the more supportable way of managing this awesome new feature.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Identify and remedy problem IKE and eventd processes on Juniper SRX</title>
      <link>https://forwardingplane.net/post/identify-and-remedy-problem-ike-and-eventd-processes-on-juniper-srx/</link>
      <pubDate>Mon, 04 Feb 2013 12:45:18 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/identify-and-remedy-problem-ike-and-eventd-processes-on-juniper-srx/</guid>
      <description>&lt;p&gt;Recently we encountered a very strange behavior on an SRX 5800 cluster.  The cluster, which is in active/active mode, started dropping OSPF adjacencies to it&amp;rsquo;s neighboring routing equipment, in this case, Juniper MX480 and Brocade/Foundry MLX8.  Strange behavior indeed, since for us, these had been rock solid for around 2 years and we&amp;rsquo;d never seen this odd behavior before. Honestly, we started looking at the routers first since this was something the SRX has never done before.  After noticing that it was actually link dropping and not just OSPF having issues, we dug deeper into logs (as an aside, this is an &lt;strong&gt;excellent&lt;/strong&gt; reason to centrally syslog everything.  And I do mean &lt;strong&gt;everything&lt;/strong&gt;).  To our surprise and dismay, it was actually the SRX node0 actually rebooting all of its interface line cards. &amp;ldquo;&lt;em&gt;show chassis routing-engine&lt;/em&gt;&amp;rdquo; showed that User was taking up a very significant amount of CPU.  This is a problem.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/Screen-Shot-2013-02-01-at-10.37.27-AM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/Screen-Shot-2013-02-01-at-10.37.27-AM.png&#34; alt=&#34;Screen Shot 2013-02-01 at 10.37.27 AM&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  As you can probably guess, this isn&amp;rsquo;t a good state.  So, in order to drill down what was causing User to be so abnormally high, we had to do a little sleuthing.  Running &amp;ldquo;&lt;em&gt;show system processes extensive | except 0.00&lt;/em&gt;&amp;rdquo; will display any process that isn&amp;rsquo;t zero.  From here it was pretty obvious what was eating the CPU.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/Screen-Shot-2013-02-01-at-10.43.50-AM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/Screen-Shot-2013-02-01-at-10.43.50-AM.png&#34; alt=&#34;Screen Shot 2013-02-01 at 10.43.50 AM&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  &amp;ldquo;kmd&amp;rdquo; and &amp;ldquo;eventd&amp;rdquo;, as you can see, are chewing up an abnormally high amount of CPU.  First things first, make sure no traceoptions are on. &amp;ldquo;&lt;em&gt;show conf | display set | match traceoptions&lt;/em&gt;&amp;rdquo;  We had some on so we disabled them.  Next, lets make sure we know what &amp;ldquo;kid&amp;rdquo; and &amp;ldquo;eventd&amp;rdquo; are. &lt;a href=&#34;http://www.juniper.net/techpubs/software/junos/junos94/syslog-messages/kmd-system-log-messages.html&#34;&gt;KMD&lt;/a&gt; is the key management process. It provides IP Security (IPSec) authentication services for encryption Physical Interface Cards (PICs). &lt;a href=&#34;http://www.juniper.net/techpubs/en_US/junos10.1/information-products/topic-collections/syslog-messages/jd0e22130.html&#34;&gt;eventd&lt;/a&gt; is the event policy process. It performs configured actions in response to events on a routing platform that trigger system log messages. It&amp;rsquo;s all starting to add up.  I&amp;rsquo;ll bet there are a LOT of IPsec messeges in the log. &amp;ldquo;&lt;em&gt;show log messages&lt;/em&gt;&amp;rdquo; confirms this.  There are a LOT of KMD messages, which is likely causing events to eat even more resources to generate them. &lt;em&gt;Jan 29 12:02:53 fw1 (FPC Slot 11, PIC Slot 0) init: kmd1 (PID 176) started&lt;/em&gt; _Jan 29 12:02:53 _fw1&lt;em&gt; (FPC Slot 11, PIC Slot 0) init: kmd2 (PID 177) started&lt;/em&gt; _Jan 29 12:02:53 _fw1&lt;em&gt; (FPC Slot 11, PIC Slot 0) init: kmd3 (PID 178) started&lt;/em&gt; _Jan 29 12:02:53 _fw1&lt;em&gt; (FPC Slot 11, PIC Slot 0) init: kmd4 (PID 179) started&lt;/em&gt; _Jan 29 12:02:54 _fw1&lt;em&gt; (FPC Slot 11, PIC Slot 1) init: kmd1 (PID 176) started&lt;/em&gt; _Jan 29 12:02:55 _fw1&lt;em&gt; (FPC Slot 11, PIC Slot 1) init: kmd2 (PID 177) started&lt;/em&gt; _Jan 29 12:02:55 _fw1&lt;em&gt; (FPC Slot 11, PIC Slot 1) init: kmd3 (PID 178) started&lt;/em&gt; _Jan 29 12:02:55 _fw1&lt;em&gt; (FPC Slot 11, PIC Slot 1) init: kmd4 (PID 180) started&lt;/em&gt; _Jan 29 12:03:13 _fw1&lt;em&gt; (FPC Slot 4, PIC Slot 0) init: kmd1 (PID 176) started&lt;/em&gt; _Jan 29 12:03:13 _fw1&lt;em&gt; (FPC Slot 4, PIC Slot 0) init: kmd2 (PID 177) started&lt;/em&gt; _Jan 29 12:03:13 _fw1&lt;em&gt; (FPC Slot 4, PIC Slot 0) init: kmd3 (PID 178) started&lt;/em&gt; _Jan 29 12:03:13 _fw1&lt;em&gt; (FPC Slot 4, PIC Slot 0) init: kmd4 (PID 179) started&lt;/em&gt; _Jan 29 12:03:14 _fw1&lt;em&gt; (FPC Slot 5, PIC Slot 0) init: kmd1 (PID 176) started&lt;/em&gt; _Jan 29 12:03:14 _fw1&lt;em&gt; (FPC Slot 5, PIC Slot 0) init: kmd2 (PID 177) started&lt;/em&gt; _Jan 29 12:03:14 _fw1&lt;em&gt; (FPC Slot 5, PIC Slot 0) init: kmd3 (PID 178) started&lt;/em&gt; _Jan 29 12:03:15 _fw1&lt;em&gt; (FPC Slot 5, PIC Slot 0) init: kmd4 (PID 179) started&lt;/em&gt;   Check the security log to verify &amp;ldquo;&lt;em&gt;show log kmed&lt;/em&gt;&amp;rdquo; &lt;em&gt;Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_ipc_err_handler: status: 1: usp_ipc_client_open: failed to connect to the server after 5 retries Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_send_msg_to_spu: failed to connect to iked_spu on SPU - Connection refused. Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_ipc_err_handler: status: 1: usp_ipc_client_open: failed to connect to the server after 5 retries Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_send_msg_to_spu: failed to connect to iked_spu on SPU - Connection refused. Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_ipc_err_handler: status: 1: usp_ipc_client_open: failed to connect to the server after 5 retries Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_send_msg_to_spu: failed to connect to iked_spu on SPU - Connection refused. Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_ipc_err_handler: status: 1: usp_ipc_client_open: failed to connect to the server after 5 retries Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_send_msg_to_spu: failed to connect to iked_spu on SPU - Connection refused. Dec 27 05:58:05 KMD_INTERNAL_ERROR: iked_re_ipc_err_handler: status: 1: usp_ipc_client_open: failed to connect to the server after 5 retries&lt;/em&gt;   Yeah, looks suspicious.  Lets restart ipsec-key-management and see if that helps. &amp;ldquo;&lt;em&gt;restart ipsec-key-management&amp;rdquo;.  &lt;/em&gt; &lt;strong&gt;&lt;em&gt;Note: If this does not work, you may have to drop to the shell and kill it like a unix process.  &lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&amp;ldquo;start shell&amp;rdquo;&lt;/em&gt; &amp;ldquo;kill -9 kmd&amp;rdquo; Idle process should now be back to normal.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/Screen-Shot-2013-02-02-at-12.24.11-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2013/02/Screen-Shot-2013-02-02-at-12.24.11-PM.png&#34; alt=&#34;Screen Shot 2013-02-02 at 12.24.11 PM&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;  CPU&amp;rsquo;s were at a &amp;ldquo;normal&amp;rdquo; state in our environment has the idle process near 90% (+/-).  In the future this will be monitored so that this problem does sneak up on us. Now, the right way to remedy this is to disable those services if you don&amp;rsquo;t need them.  If you do not plan to terminate VPN tunnels, there is no reason to run the services (on by default) to do so.  We opted to both disable and do a more inclusive loopback filter which seems to have taken care of the problem. Take aways from this is multi faceted.  The SRX is a weird beast. It&amp;rsquo;s JunOS, so the inclination is to treat it like a router, but it &amp;rsquo;s not.  It&amp;rsquo;s a firewall.  And an IPS. And a router. I&amp;rsquo;m planning to write up an &amp;ldquo;SRX command cheat sheet&amp;rdquo; for this because it&amp;rsquo;s got enough different pieces and commands that I believe it warrants one.  Secondly, there are a lot of intricacies in monitoring these devices since they arent just routers.  I&amp;rsquo;m hoping to come up with a best practice for monitoring an SRX cluster in a carrier type environment as well.  I&amp;rsquo;m sure they&amp;rsquo;ll both be living documents.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sonicwall - Old dog learns [some] new tricks</title>
      <link>https://forwardingplane.net/post/sonicwall-old-dog-learns-some-new-tricks/</link>
      <pubDate>Sat, 08 Dec 2012 00:00:26 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonicwall-old-dog-learns-some-new-tricks/</guid>
      <description>&lt;p&gt;~12 years ago I had a drinking buddy that worked with me at the regional ISP.   We had a lot in common, he had been an icon back in the &lt;a href=&#34;http://en.wikipedia.org/wiki/The_Didjits&#34;&gt;didjits&lt;/a&gt; era of punk rock in Champaign Urbana and we had briefly been in a terrible band together.  He introduced me to a dude that to this day I just knew as &amp;ldquo;Ravi Sonicwall&amp;rdquo;.  He had apparently been recruited from the U of I, written a lot of the low level pieces of the original sonicwall and retired to enjoy life and buy beers (he actually scolded me at a bar for buying him a beer saying &amp;ldquo;when I&amp;rsquo;m in town, I buy the beers&amp;rdquo;). I had purchased a few sonicwall boxes after that, having only really used linux, IOS, checkpoint on nokia boxes and *&lt;em&gt;shudder&lt;/em&gt;* Novell Border manager.  I liked the boxes since they had a GUI and I could hand off day-to-day operations to someone that !=Me.  After a year or so in production, I started to become frustrated with them,  the ones I had lacked a CLI completely and had fallen behind on the things I needed to do with them.   Their cost to feature wasn&amp;rsquo;t there for what I needed and the ones I had purchased systematically had hardware failures all within 7 months.  I wrote off sonicwall completely at that point. Fast forward a decade. Sonicwall purchased by Dell. We&amp;rsquo;ve heavily invested in the &lt;a href=&#34;http://www.juniper.net/us/en/products-services/security/srx-series/&#34;&gt;Juniper SRX&lt;/a&gt;. The SRX mostly does what we ask of it (talk to me about Oracle replication through one and their SQL ALG). The SRX has some limitation as far as management and display of eye candy. While I personally like a CLI to rummage around in, not everyone does.  &lt;a href=&#34;http://www.paloaltonetworks.com&#34;&gt;Palo Alto Networks&lt;/a&gt; has an amazing GUI.  Like, the best I&amp;rsquo;ve ever seen.  Sonicwall&amp;hellip;&amp;hellip;well, theirs always left me wanting back in the day.  Now&amp;hellip;..wow, a totally different ballgame. Don&amp;rsquo;t get me wrong, I&amp;rsquo;m not confident that the Sonicwall &amp;ldquo;Super Massive&amp;rdquo; won&amp;rsquo;t compete (in this guys opinion) with a Juniper 5800.  &lt;strong&gt;However, &lt;/strong&gt;their transparent mode is a tad better and their web management is an order of magnitude better.  Performance?  I don&amp;rsquo;t think anything can touch an SRX loaded with SPCs, but the numbers are impressive.  I&amp;rsquo;d like to do a bake off once I get some time (and a super massive in my lab) That being said, I gave the Sonicwall we have as a demo a good go around.  I found it&amp;rsquo;s ease of setup pretty refreshing.  For those that have non-networking savvy security folks running these boxes, they&amp;rsquo;ll likely love the interface.  I like the AppFlow Monitor.  It&amp;rsquo;s a nice reprensentation of the transit data in an easy to understand format.  Here is an example of the box in my lab after running a few days. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM-1024x256.png&#34; alt=&#34;&#34; title=&#34;SonicWall AppFlow Monitor &#34; /&gt;&lt;/a&gt;  [](&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM.png&#34;&gt;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM.png&lt;/a&gt;)   The threat reports are nice as well, very eye candy and they seem pretty accurate based on what we threw at it and what we generally see in the wild west.   &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.48-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.48-PM-1024x256.png&#34; alt=&#34;&#34; title=&#34;Screen Shot 2012-12-07 at 4.09.48 PM&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM1.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM1-1024x256.png&#34; alt=&#34;&#34; title=&#34;Screen Shot 2012-12-07 at 4.09.41 PM&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.10.00-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.10.00-PM-1024x256.png&#34; alt=&#34;&#34; title=&#34;Screen Shot 2012-12-07 at 4.10.00 PM&#34; /&gt;&lt;/a&gt;                         The real time monitor reminds me a lot of the Palo Alto.  It gives some serious eye candy, live, realtime graphs of any traffic transiting the box.  Very eye catching and I can see a use case for it. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.48.44-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.48.44-PM-1024x635.png&#34; alt=&#34;&#34; title=&#34;Sonicwall Real Time Monitor&#34; /&gt;&lt;/a&gt; However, I find the management of the interfaces a bit clunky and the lack of non-beta IPv6 support is a but disappointing.  I&amp;rsquo;ll be testing the IPv6 support soon, I&amp;rsquo;m just waiting on the activation of the box I have to support it. Firmware updates seem to require a registration of the machine in their system, something I understand but the old school networking guy in me really hates feature licensing and remote activation of network hardware.  A lot.  the fact that every vendor seems to be doing it just makes my skin crawl, but such is life. The box comes with an SSL VPN server as well, I&amp;rsquo;ve still been twiddling with getting mine working.  The smaller SOHO devices have wifi built in, but that&amp;rsquo;s way outside of my scope, so I&amp;rsquo;ll leave it at that.   The CLI isn&amp;rsquo;t terrible, either.  It&amp;rsquo;s more IOS that I remember, but a far cry from JunOS.  Tab complete works and there are a decent amount of options.  I&amp;rsquo;ve not yet tried to configure much with it but have used the show commands some.  Here is an example from the small box we have: &lt;em&gt;User:admin&lt;/em&gt; &lt;em&gt;Password:&lt;/em&gt; &lt;em&gt;labfw&amp;gt; show interface sta&lt;/em&gt; _labfw&amp;gt; show interface statistics _ &lt;em&gt;Interface statistics for X0&lt;/em&gt; _ InDiscards : 0_ _ InNUcast : 401464_ _ InUcast : 4921467_ _ InOctets : 2207976060_ _ InErrs : 0_ _ OutDiscards : 37_ _ OutNUcast : 9733_ _ OutUcast : 5407031_ _ OutOctets : 3031626437_ _ OutErrs : 0_ _ InUnkProto : 0_ _ InMcast : 291793_ _ InBcast : 109671_ _ OutMcast : 0_ _ OutBcast : 9733_ &lt;em&gt;Interface statistics for X1&lt;/em&gt; _ InDiscards : 0_ _ InNUcast : 5401982_ _ InUcast : 4496250_ _ InOctets : 3192806274_ _ InErrs : 0_ _ OutDiscards : 0_ _ OutNUcast : 54_ _ OutUcast : 4582195_ _ OutOctets : 2114718776_ _ OutErrs : 0_ _ InUnkProto : 0_ _ InMcast : 1500142_ _ InBcast : 3901840_ _ OutMcast : 0_ _ OutBcast : 54_  Overall, not a bad platform.  They&amp;rsquo;ve certainly done their homework.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sonicwall - Old dog learns [some] new tricks</title>
      <link>https://forwardingplane.net/post/sonicwall-old-dog-learns-some-new-tricks/</link>
      <pubDate>Sat, 08 Dec 2012 00:00:26 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/sonicwall-old-dog-learns-some-new-tricks/</guid>
      <description>&lt;p&gt;~12 years ago I had a drinking buddy that worked with me at the regional ISP.   We had a lot in common, he had been an icon back in the &lt;a href=&#34;http://en.wikipedia.org/wiki/The_Didjits&#34;&gt;didjits&lt;/a&gt; era of punk rock in Champaign Urbana and we had briefly been in a terrible band together.  He introduced me to a dude that to this day I just knew as &amp;ldquo;Ravi Sonicwall&amp;rdquo;.  He had apparently been recruited from the U of I, written a lot of the low level pieces of the original sonicwall and retired to enjoy life and buy beers (he actually scolded me at a bar for buying him a beer saying &amp;ldquo;when I&amp;rsquo;m in town, I buy the beers&amp;rdquo;). I had purchased a few sonicwall boxes after that, having only really used linux, IOS, checkpoint on nokia boxes and *&lt;em&gt;shudder&lt;/em&gt;* Novell Border manager.  I liked the boxes since they had a GUI and I could hand off day-to-day operations to someone that !=Me.  After a year or so in production, I started to become frustrated with them,  the ones I had lacked a CLI completely and had fallen behind on the things I needed to do with them.   Their cost to feature wasn&amp;rsquo;t there for what I needed and the ones I had purchased systematically had hardware failures all within 7 months.  I wrote off sonicwall completely at that point. Fast forward a decade. Sonicwall purchased by Dell. We&amp;rsquo;ve heavily invested in the &lt;a href=&#34;http://www.juniper.net/us/en/products-services/security/srx-series/&#34;&gt;Juniper SRX&lt;/a&gt;. The SRX mostly does what we ask of it (talk to me about Oracle replication through one and their SQL ALG). The SRX has some limitation as far as management and display of eye candy. While I personally like a CLI to rummage around in, not everyone does.  &lt;a href=&#34;http://www.paloaltonetworks.com&#34;&gt;Palo Alto Networks&lt;/a&gt; has an amazing GUI.  Like, the best I&amp;rsquo;ve ever seen.  Sonicwall&amp;hellip;&amp;hellip;well, theirs always left me wanting back in the day.  Now&amp;hellip;..wow, a totally different ballgame. Don&amp;rsquo;t get me wrong, I&amp;rsquo;m not confident that the Sonicwall &amp;ldquo;Super Massive&amp;rdquo; won&amp;rsquo;t compete (in this guys opinion) with a Juniper 5800.  &lt;strong&gt;However, &lt;/strong&gt;their transparent mode is a tad better and their web management is an order of magnitude better.  Performance?  I don&amp;rsquo;t think anything can touch an SRX loaded with SPCs, but the numbers are impressive.  I&amp;rsquo;d like to do a bake off once I get some time (and a super massive in my lab) That being said, I gave the Sonicwall we have as a demo a good go around.  I found it&amp;rsquo;s ease of setup pretty refreshing.  For those that have non-networking savvy security folks running these boxes, they&amp;rsquo;ll likely love the interface.  I like the AppFlow Monitor.  It&amp;rsquo;s a nice reprensentation of the transit data in an easy to understand format.  Here is an example of the box in my lab after running a few days. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM-1024x256.png&#34; alt=&#34;&#34; title=&#34;SonicWall AppFlow Monitor &#34; /&gt;&lt;/a&gt;  [](&lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM.png&#34;&gt;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM.png&lt;/a&gt;)   The threat reports are nice as well, very eye candy and they seem pretty accurate based on what we threw at it and what we generally see in the wild west.   &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.48-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.48-PM-1024x256.png&#34; alt=&#34;&#34; title=&#34;Screen Shot 2012-12-07 at 4.09.48 PM&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM1.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.09.41-PM1-1024x256.png&#34; alt=&#34;&#34; title=&#34;Screen Shot 2012-12-07 at 4.09.41 PM&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.10.00-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.10.00-PM-1024x256.png&#34; alt=&#34;&#34; title=&#34;Screen Shot 2012-12-07 at 4.10.00 PM&#34; /&gt;&lt;/a&gt;                         The real time monitor reminds me a lot of the Palo Alto.  It gives some serious eye candy, live, realtime graphs of any traffic transiting the box.  Very eye catching and I can see a use case for it. &lt;a href=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.48.44-PM.png&#34;&gt;&lt;img src=&#34;http://www.forwardingplane.net/wp-content/uploads/2012/12/Screen-Shot-2012-12-07-at-4.48.44-PM-1024x635.png&#34; alt=&#34;&#34; title=&#34;Sonicwall Real Time Monitor&#34; /&gt;&lt;/a&gt; However, I find the management of the interfaces a bit clunky and the lack of non-beta IPv6 support is a but disappointing.  I&amp;rsquo;ll be testing the IPv6 support soon, I&amp;rsquo;m just waiting on the activation of the box I have to support it. Firmware updates seem to require a registration of the machine in their system, something I understand but the old school networking guy in me really hates feature licensing and remote activation of network hardware.  A lot.  the fact that every vendor seems to be doing it just makes my skin crawl, but such is life. The box comes with an SSL VPN server as well, I&amp;rsquo;ve still been twiddling with getting mine working.  The smaller SOHO devices have wifi built in, but that&amp;rsquo;s way outside of my scope, so I&amp;rsquo;ll leave it at that.   The CLI isn&amp;rsquo;t terrible, either.  It&amp;rsquo;s more IOS that I remember, but a far cry from JunOS.  Tab complete works and there are a decent amount of options.  I&amp;rsquo;ve not yet tried to configure much with it but have used the show commands some.  Here is an example from the small box we have: &lt;em&gt;User:admin&lt;/em&gt; &lt;em&gt;Password:&lt;/em&gt; &lt;em&gt;labfw&amp;gt; show interface sta&lt;/em&gt; _labfw&amp;gt; show interface statistics _ &lt;em&gt;Interface statistics for X0&lt;/em&gt; _ InDiscards : 0_ _ InNUcast : 401464_ _ InUcast : 4921467_ _ InOctets : 2207976060_ _ InErrs : 0_ _ OutDiscards : 37_ _ OutNUcast : 9733_ _ OutUcast : 5407031_ _ OutOctets : 3031626437_ _ OutErrs : 0_ _ InUnkProto : 0_ _ InMcast : 291793_ _ InBcast : 109671_ _ OutMcast : 0_ _ OutBcast : 9733_ &lt;em&gt;Interface statistics for X1&lt;/em&gt; _ InDiscards : 0_ _ InNUcast : 5401982_ _ InUcast : 4496250_ _ InOctets : 3192806274_ _ InErrs : 0_ _ OutDiscards : 0_ _ OutNUcast : 54_ _ OutUcast : 4582195_ _ OutOctets : 2114718776_ _ OutErrs : 0_ _ InUnkProto : 0_ _ InMcast : 1500142_ _ InBcast : 3901840_ _ OutMcast : 0_ _ OutBcast : 54_  Overall, not a bad platform.  They&amp;rsquo;ve certainly done their homework.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using a Brocade MLXe as a replicator to an IDS</title>
      <link>https://forwardingplane.net/post/using-a-brocade-mlxe-as-a-replicator-to-an-ids/</link>
      <pubDate>Sun, 25 Nov 2012 17:26:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/using-a-brocade-mlxe-as-a-replicator-to-an-ids/</guid>
      <description>&lt;p&gt;Have you ever needed to replicate a lot of data transparently to an IDS without the use of a rack of optical taps?  Not enough budget for a Gigamon or cPacket?  Have a spare MLXe laying around?  you&amp;rsquo;re in luck, we were in that boat too. Let me first preface this by saying that this would be fairly trivial using OpenFlow / SDN.  That being said, we didn&amp;rsquo;t have the time to set that up, so this is what we came with.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-dkBh5cQqBtc/UKPe167KFsI/AAAAAAABbFY/5DP_E2YVWgg/s1600/TransHWFlood.jpg&#34;&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-dkBh5cQqBtc/UKPe167KFsI/AAAAAAABbFY/5DP_E2YVWgg/s640/TransHWFlood.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This would also work using an input interface of 100G, but of course the flows would be limited to 10G. How this works is pretty simple, it just uses a policy based route to direct the flow of traffic out of the desired aggregate interface.  In this real world use case that this was built for, the destination was a Bro cluster, consuming as much of the data as possible.  The config on a brocade is pretty similar to Cisco IOS if you&amp;rsquo;re not familiar, but the VLAN bits are a tad different (actually more intuitive in my opinion).  Here are the bits to make all of this work: Create the vlans and tag them appropriately&lt;/p&gt;

&lt;p&gt;mlxe8# conf t mlxe8(config)# vlan 100 mlxe8(config-vlan-100)# untag ethernet 1/1 mlxe8(config-vlan-100)# transparent-hw-flooding mlxe8(config-vlan-100)# router-interface ve 100 mlxe8(config)# vlan 101 mlxe8(config-vlan-101)# untag ethernet 4/1 &amp;hellip; mlxe8(config-vlan-101)# untag ethernet 4/10 mlxe8(config-vlan-101)# router-interface ve 101 mlxe8(config-vlan-101)#exit mlxe8(config)#interface ve 100 mlxe8(config-vlan-100)#ip policy route-map PBR-TRAFFIC mlxe8(config-vlan-100)#ip access-group pbr-traffic-acl&lt;/p&gt;

&lt;p&gt;mlxe8(config-vlan-101)#exit&lt;/p&gt;

&lt;p&gt;mlxe8(config)#interface ve 101&lt;/p&gt;

&lt;p&gt;mlxe8(config)#ip address 10.101.101.&lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;24&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Enable all of the interfaces.&lt;/p&gt;

&lt;p&gt;mlxe8(config)#interface ethernet 4/1&lt;/p&gt;

&lt;p&gt;mlxe8(config)#enable&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;mlxe8(config)#interface ethernet 4/10&lt;/p&gt;

&lt;p&gt;mlxe8(config)#enable&lt;/p&gt;

&lt;p&gt;Create the LAG.&lt;/p&gt;

&lt;p&gt;mlxe8(config)# lag “IDS” static&lt;/p&gt;

&lt;p&gt;   mlxe8(config)#ports ethernet 4/1 to &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;   mlxe8(config)#primary-port &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;   mlxe8(config)#deploy&lt;/p&gt;

&lt;p&gt;s&lt;/p&gt;

&lt;p&gt;     Create the PBR ACL bits. This can also be done to filter types of traffic using more complex ACLs  if so desired&lt;/p&gt;

&lt;p&gt;  mlxe8(config)#access-list pbr-traffic-acl permit ip any any&lt;/p&gt;

&lt;p&gt;mlxe8(config)#exit&lt;/p&gt;

&lt;p&gt;mlxe8(config)#route-map PBR-TRAFFIC permit 1&lt;/p&gt;

&lt;p&gt;mlxe8(config)#matchipaddress pbr-traffic-acl&lt;/p&gt;

&lt;p&gt;mlxe8(config)#set ip next-hop 10.101.101.1&lt;/p&gt;

&lt;p&gt;Create a static ARP entry to tie it all together. &lt;/p&gt;

&lt;p&gt;arp 10.101.101.1 c0ff.eec0.ffee ethernet 1/1&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it, let the security folks drink from the firehose.  =)&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ftps (secure ftp) from the command line</title>
      <link>https://forwardingplane.net/post/ftps-secure-ftp-from-the-command-line/</link>
      <pubDate>Tue, 04 Oct 2011 04:31:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/ftps-secure-ftp-from-the-command-line/</guid>
      <description>&lt;p&gt;I have recently enabled &lt;a href=&#34;http://www.duosecurity.com/&#34;&gt;Duo Security&lt;/a&gt; for many of my personal services, and I can&amp;rsquo;t recommend them enough. Personal &lt;a href=&#34;http://en.wikipedia.org/wiki/Two-factor_authentication&#34;&gt;two factor authentication&lt;/a&gt; is very useful and really powerful. It works on my iPhone and I have yet to run into any real issues&amp;hellip;.except for one. I can&amp;rsquo;t use automation to scp or sftp anything anymore and keep my two factor auth working in a way I&amp;rsquo;m comfortable with.&lt;/p&gt;

&lt;p&gt;Enter &lt;a href=&#34;http://en.wikipedia.org/wiki/Ftps&#34;&gt;ftps&lt;/a&gt;. FTP is a terrible, yet immensely useful protocol. I chose to use &lt;a href=&#34;https://security.appspot.com/vsftpd.html&#34;&gt;vsftp&lt;/a&gt; under debian Linux with Implicit TLS/SSL, meaning there is no negotiation of protocol as with explicit ftps (or ftpes). It&amp;rsquo;s secure, or none.&lt;/p&gt;

&lt;p&gt;Configuring this is pretty easy, but it does require some editing of the /etc/vsftpd.conf file. I added some stuff to make it do ftpes as such:&lt;/p&gt;

&lt;p&gt;_ssl_enable=YES&lt;br /&gt;
allow_anon_ssl=NO&lt;br /&gt;
force_local_data_ssl=YES&lt;br /&gt;
force_local_logins_ssl=YES&lt;br /&gt;
rsa_cert_file=/etc/ssl/certs/vsftpd.pem&lt;br /&gt;
_&lt;/p&gt;

&lt;p&gt;This and a few other tweaks that aren&amp;rsquo;t relevant here, make ftpes work on my machine.&lt;/p&gt;

&lt;p&gt;Now, clients are another story. Most of the modern GUI based clients work. I know &lt;a href=&#34;http://filezilla-project.org/&#34;&gt;filezilla&lt;/a&gt; works, and it&amp;rsquo;s free. The problem I have, is that I need to do this programmatically, via a script.&lt;/p&gt;

&lt;p&gt;A bit of digging didn&amp;rsquo;t yield much, however, I did come across &lt;a href=&#34;http://lftp.yar.ru/&#34;&gt;lftp&lt;/a&gt;. lftp is an extremely powerful command line ftp client that has a LOT of features, one of which is ftpes support. Now, the one problem with lftp is that it is extremely full featured. Like, overly featured. So much so, that it can be a bit daunting to make it do what you want, which in my case was pretty simple.&lt;/p&gt;

&lt;p&gt;I wrote a simple script to make it do what I wanted, which was just to upload a file and move it around.&lt;/p&gt;

&lt;p&gt;_&lt;br /&gt;
#!/bin/sh&lt;br /&gt;
_&lt;em&gt;/usr/bin/lftp -u user,password remote.host.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;_&amp;lt;__&lt;/p&gt;

&lt;p&gt;cd data&lt;/p&gt;

&lt;p&gt;lcd /mnt/NAS/files/updates&lt;/p&gt;

&lt;p&gt;put updates.txt&lt;/p&gt;

&lt;p&gt;mv updates.txt data.txt&lt;/p&gt;

&lt;p&gt;quit 0&lt;/p&gt;

&lt;p&gt;EOF&lt;/p&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;This works fine, and since I&amp;rsquo;m using ftpes, it does all of the negotiation for me.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Black Hole routing</title>
      <link>https://forwardingplane.net/post/black-hole-routing/</link>
      <pubDate>Tue, 04 Oct 2011 01:00:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/black-hole-routing/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s no secret or ground breaking area to do black hole routing.&lt;/p&gt;

&lt;p&gt;ISPs and NSPs have been doing it forever to allow for a very low cost, very scriptable and very effective way to wholesale block a layer3 address. However, it can seem like a bit of a black box to anyone who has never done it.&lt;/p&gt;

&lt;p&gt;I recently did some work spinning this up in a good sized network that it didn&amp;rsquo;t currently exist, and remembered how monumentally useful (and simple) it actually is.&lt;/p&gt;

&lt;p&gt;There are lots of ways to do this. There are a lot of different &lt;a href=&#34;http://packetlife.net/blog/2009/jul/6/remotely-triggered-black-hole-rtbh-routing/&#34;&gt;articles&lt;/a&gt; written about how to do it. Cisco includes it in their CCIE Security track.&lt;/p&gt;

&lt;p&gt;The idea is a pretty simple one. Run &lt;a href=&#34;http://en.wikipedia.org/wiki/Reverse_path_forwarding#Unicast_RPF_.28uRPF.29&#34;&gt;uRPF&lt;/a&gt; on your eBGP speakers. Create a peering with a router on the inside. For my purposes I used a private ASN and peered it with eBGP to my border devices. Create a static route to null0 on the BHR (Black Hole Router), which then sends the route (possibly tagged with a community) to the eBGP speakers. They see an internal route for this external host, so any packets that come from that host on the outside get dropped on the floor by uRPF. In theory it&amp;rsquo;s all handled in hardware so the overhead is minimal and the blocks are as fast as a BGP route advertisement/withdrawal.&lt;/p&gt;

&lt;p&gt;There are, of course, lots of caveats to this, like, what if you are taking default on your eBGP speakers? How is that handled. One of the places I recently set this up takes default, one takes full tables. I suggest reading &lt;a href=&#34;http://www.cisco.com/web/about/security/intelligence/unicast-rpf.html&#34;&gt;this page&lt;/a&gt; if you aren&amp;rsquo;t experienced with uRPF, it explains how cissco handles it and is a decent primer on uRPF in general.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a simple guy and I like things to be easy to support, so my designs tend to be those that can easily be maintained by someone that !=me and not so overly complicated that they can be reverse engineered in case of emergency or replicated if need be.&lt;/p&gt;

&lt;p&gt;That said, I&amp;rsquo;ve chosen to do it in a pocketbook friendly way. It probably stems from cutting my teeth at a decent sized mom and pop ISP that had a very small operating budget so we did things in creative and cost savings ways while still keeping them simple and supportable. I&amp;rsquo;m not sure why, but it makes more sense to me to run a software router like &lt;a href=&#34;http://www.blogger.com/www.quagga.net&#34;&gt;Quagga&lt;/a&gt; or &lt;a href=&#34;http://www.openbgpd.org/&#34;&gt;OpenBGPd&lt;/a&gt; that I can run as a VM and connect to my IGP and EGP, scripting the adds and removal of the routes we want to blackhole. It can also be done with an actual router, but I personally prefer to drop it in as a software router.&lt;/p&gt;

&lt;p&gt;The use of a linux box allows for a bunch of neat options. You can use the iproute2 package to watch changes to the routing table, you can run it in a virtual machine, it can be done in a very economical way, etc.&lt;/p&gt;

&lt;p&gt;Using Quagga has its pros and its cons. Quagga is a great platform, but it is an open source project. Their ISISd support is a bit lacking, so if your IGP is ISIS, it will work, but it feels half baked to me (and there is zero documentation that I could find). The ospf[v2 and v3] versions work fine. BGPd works well enough. It can be put into RANCID for configuration management and it is easily scriptable using vtysh and its IOS-like interface.&lt;/p&gt;

&lt;p&gt;Here is a basic design for a black hole router running inside a network with an external peering with something like a bogon route server:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-5lZmt2zsQ3Y/T3oMBMHyysI/AAAAAAABIS4/T5lzIgb0I2I/s1600/BHR+Example.jpg&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-5lZmt2zsQ3Y/T3oMBMHyysI/AAAAAAABIS4/T5lzIgb0I2I/s320/BHR+Example.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This just shows a basic setup, one site border router and a black hole box. In this example, the BHR is also peered with an external &amp;ldquo;service&amp;rdquo; like a bogon route server. This is a value-add, and not required.&lt;/p&gt;

&lt;p&gt;Any traffic that comes in can be routed to null0 on the bhr. This, in turn, sends a routes to the SBR. The SBR then installs it as an internal route. Now, any traffic that comes in from this route outside will looked like spoofed traffic and uRPF will discard it.&lt;/p&gt;

&lt;p&gt;Very simple, very effective.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrading a new SRX 3600</title>
      <link>https://forwardingplane.net/post/upgrading-a-new-srx-3600/</link>
      <pubDate>Mon, 07 Feb 2011 22:29:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/upgrading-a-new-srx-3600/</guid>
      <description>&lt;p&gt;We are putting a few new SRX 3600 clusters into production soon, and we&amp;rsquo;ve had them for about 6 months in boxes. This presented a fairly significant issue, one that I didn&amp;rsquo;t think about until it smacked me in the face.&lt;br /&gt;
The code on these boxes was old. Very old. JunOS 9.2 old.&lt;br /&gt;
No problem, lets just upgrade them to 10.4R something.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wrong&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;the code that shipped on these boxes was so old, and we waited so long to upgrade them that I was unable to upgrade them straight to anything modern. To compound the issue, the upgrade was only able to be performed from certain code level releases as noted &lt;a href=&#34;http://forums.juniper.net/t5/SRX-Services-Gateway/SRX-3400-upgrade-failure/m-p/55416&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a problem. I logged into the Juniper site to get the appropriate code, low and behold, it&amp;rsquo;s not available. I had to contact jtac and convince them that the code wasn&amp;rsquo;t there (which was a bit frustrating). Once they understood the issue (which took a bit longer than I expected; I don&amp;rsquo;t have Agility services on these particular boxes or I would never have had the jtac &amp;ldquo;issue&amp;rdquo;), they provided me with a download link for junos-srx3000-9.6R4.4-domestic. Once I had that code I was able to upgrade to it and then to 10.4.&lt;/p&gt;

&lt;p&gt;Not a huge issue, but something that was very annoying to have to jump through since I&amp;rsquo;ve never seen this issue upgrading a Juniper device.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving JunOS code between SRX cluster nodes</title>
      <link>https://forwardingplane.net/post/moving-junos-code-between-srx-cluster-nodes/</link>
      <pubDate>Sat, 08 Jan 2011 02:11:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/moving-junos-code-between-srx-cluster-nodes/</guid>
      <description>&lt;p&gt;Regardless of the fact that there is now a good ISSU-like service for the SRX (named Low-Impact Cluster Upgrade; LICU for short), if you&amp;rsquo;re upgrading your Active/Active cluster from something that isn&amp;rsquo;t 10.4, or if you just aren&amp;rsquo;t comfortable with how baked LICU actually is, you&amp;rsquo;ll need to know how to move the junos code around. This is easy if you have physical access to both nodes, but for those that have.&lt;br /&gt;
This was a problem for me in that our cluster nodes have geographic diversity. In other words, they&amp;rsquo;re far apart. Being how I am, I don&amp;rsquo;t want to trek all around to hand load code from a USB key and being how the SRX cluster works, I can&amp;rsquo;t easily get to node1 over the network since it&amp;rsquo;s part of a cluster.&lt;/p&gt;

&lt;p&gt;Low and behold, there is a very simple way to move this code around over the control network. Enter our old friend &lt;a href=&#34;http://www.mkssoftware.com/docs/man1/rcp.1.asp&#34;&gt;rcp&lt;/a&gt;.&lt;br /&gt;
Log into node0 and load the code as normal.&lt;/p&gt;

&lt;p&gt;node0&amp;gt;file copy scp://buraglio@desktop.domain.edu/Users/buraglio/Downloads/junos-srx5000-10.4R1.9-domestic.tgz /var/tmp/junos-srx5000-10.4R1.9-domestic.tgz&lt;/p&gt;

&lt;p&gt;From here, it&amp;rsquo;s really easy but will require dropping to the unix (FreeBSD, Yay!) shell so I&amp;rsquo;m always careful of what I&amp;rsquo;m typing and by all means be careful.&lt;/p&gt;

&lt;p&gt;{primary:node0}&lt;/p&gt;

&lt;p&gt;buraglio@node0&amp;gt; start shell&lt;/p&gt;

&lt;p&gt;% su&lt;/p&gt;

&lt;p&gt;Password:&lt;/p&gt;

&lt;p&gt;root@node0% rcp -T /var/tmp/junos-srx5000-10.4R1.9-domestic.tgz node1:/var/tmp/&lt;/p&gt;

&lt;p&gt;Thats pretty much it. Upgrade per the normal active/active procedure.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://kb.juniper.net/InfoCenter/index?page=content&amp;amp;id=KB17410&amp;amp;actp=RSS&amp;amp;smlogin=true&#34;&gt;Here&lt;/a&gt; is a Juniper knowledge base article on this procedure for second reference.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enabling IPv6 on Juniper SRX 5800 cluster</title>
      <link>https://forwardingplane.net/post/enabling-ipv6-on-juniper-srx-5800-cluster/</link>
      <pubDate>Wed, 20 Oct 2010 21:59:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/enabling-ipv6-on-juniper-srx-5800-cluster/</guid>
      <description>&lt;p&gt;After &lt;a href=&#34;http://tech.buraglio.com/2010/09/srx-ipv6-flow-based-processing.html&#34;&gt;enabling the IPv6 Flow based processing&lt;/a&gt;, we decided to get rolling with making our IPv6 path congruent with everything else (IPv4 unicast and multicast). With all of the other things we had going on, we thought this would be a low hanging fruit that would be easily plucked from the routing tree. Well, a minor oversight on our part caught us by surprise.&lt;/p&gt;

&lt;p&gt;According to this &lt;a href=&#34;http://www.juniper.net/techpubs/software/junos-security/junos-security10.2/junos-srx-jseries-support-reference/jd0e5522.html&#34;&gt;handy dandy matrix for JunOS 10.2 on the SRX&lt;/a&gt;, Active/Active is actually not supported for v6 processing. After configuring all of the rest of the path, BGP peerings, OSPFv3, an IPv6 firewall policy, we were a bit surprised to see OSPFv3 adjacencies andappropriate routes, but absolutely no state for v6 traffic that was not destined for the RE.&lt;/p&gt;

&lt;p&gt;About 30 seconds of google searching came up with the matrix, which we somehow missed, that showed exactly what we feared:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://lh3.ggpht.com/_99YK8gwWGlQ/TL8UouI51lI/AAAAAAAAACM/7humintSX-I/s1152/Screen%20shot%202010-10-20%20at%2011.09.54%20AM.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;My first reaction was&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.popartuk.com/g/l/lgmp0163+homer-simpson-doh-the-simpsons-mini-poster.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;How could we have missed that? We knew that IDP wouldn&amp;rsquo;t work on v6 until a future release (probably sometime of next year, we&amp;rsquo;re hoping). Oh well, we missed something. It was bound to happen sooner or later with as many moving parts as we have. Doing some more digging it looks like we&amp;rsquo;re not going to get Active/Active until around the same time as IDP&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multicast through Juniper SRX 5800</title>
      <link>https://forwardingplane.net/post/multicast-through-juniper-srx-5800/</link>
      <pubDate>Sun, 17 Oct 2010 23:56:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/multicast-through-juniper-srx-5800/</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve been working toward a more simplified model for our network path, and in doing so, we desired a congruent path for IPv6, IPv4 Multicast and IPv4 Unicast.&lt;br /&gt;
However, this is actually pretty hard when dealing with the link speeds, amounts of traffic and flows that we do, in conjunction with Firewall&amp;hellip;..and IDP/IPS&amp;hellip;&lt;br /&gt;
Lots of research, reading and testing was done.&lt;br /&gt;
Juniper SRX series has full support for 90% of this, with IPv6 IDP coming in Q2 of 2011.&lt;/p&gt;

&lt;p&gt;IPv4 Multicast is that unpleasant, poorly understood beast that most folks try to ignore. Nevertheless, we need it. So, we had to make this work through our SRX (in the past IPv4 multicast took a different path in/out of our network.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to glaze over the multicast bits on our Juniper MX routers, if you&amp;rsquo;re doing multicast already, this should already be working and Juniper has well documented and well implemented multicast capabilities.&lt;/p&gt;

&lt;p&gt;On the SRX, luckily, it&amp;rsquo;s pretty similar.&lt;/p&gt;

&lt;p&gt;buraglio@srx5800&amp;gt; show configuration protocols pim&lt;/p&gt;

&lt;p&gt;rib-group inet multicast-rpf-rib;&lt;/p&gt;

&lt;p&gt;rp {&lt;/p&gt;

&lt;p&gt;static {&lt;/p&gt;

&lt;p&gt;address 10.16.0.145;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;interface xe-1/1/0.0;&lt;/p&gt;

&lt;p&gt;interface xe-2/1/0.0;&lt;/p&gt;

&lt;p&gt;interface xe-10/1/0.0;&lt;/p&gt;

&lt;p&gt;interface xe-13/1/0.0;&lt;/p&gt;

&lt;p&gt;{primary:node0}&lt;/p&gt;

&lt;p&gt;Make sure you are importing the routes into the tables by configuring your RIB groups&lt;/p&gt;

&lt;p&gt;buraglio@srx5800&amp;gt; show configuration routing-options rib-groups&lt;/p&gt;

&lt;p&gt;igp-rib {&lt;/p&gt;

&lt;p&gt;import-rib [ inet.0 inet.2 ];&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;multicast-rpf-rib {&lt;/p&gt;

&lt;p&gt;export-rib inet.2;&lt;/p&gt;

&lt;p&gt;import-rib inet.2;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll need to make sure that there is a firewall policy to permit your multicast to actually flow. For arguments sake, I&amp;rsquo;m assuming you have an outbound policy that is less than or equal to this in terms of policy allowed.&lt;/p&gt;

&lt;p&gt;{primary:node0}&lt;/p&gt;

&lt;p&gt;buraglio@srx5800&amp;gt; show configuration security policies from-zone Untrust to-zone Trust policy Multicast-permit&lt;/p&gt;

&lt;p&gt;match {&lt;/p&gt;

&lt;p&gt;source-address any;&lt;/p&gt;

&lt;p&gt;destination-address multicast_224_0_0_0_4;&lt;/p&gt;

&lt;p&gt;application junos-udp-any;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;then {&lt;/p&gt;

&lt;p&gt;permit;&lt;/p&gt;

&lt;p&gt;log {&lt;/p&gt;

&lt;p&gt;session-init;&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;Thats pretty much it as far as the SRX goes (assuming I&amp;rsquo;m remembering correctly, it&amp;rsquo;s been a while since we did it and I don&amp;rsquo;t know multicast as well as I&amp;rsquo;d like). Using the &lt;a href=&#34;http://globalnoc.iu.edu/i2network/multicast-cookbook.html&#34;&gt;cookbook from Internet2&lt;/a&gt; one should be enough to get Multicast working with your SRX as long as you have your policy set to allow it.&lt;/p&gt;

&lt;p&gt;buraglio@srx5800&amp;gt; show multicast statistics&lt;/p&gt;

&lt;p&gt;&amp;hellip;snip&amp;hellip;&lt;/p&gt;

&lt;p&gt;Interface: xe-10/1/0.0&lt;/p&gt;

&lt;p&gt;Routing protocol: PIM Mismatch error: 0&lt;/p&gt;

&lt;p&gt;Mismatch: 8 Mismatch no route: 0&lt;/p&gt;

&lt;p&gt;Kernel resolve: 287 Routing notify: 0&lt;/p&gt;

&lt;p&gt;Resolve no route: 0 Resolve error: 0&lt;/p&gt;

&lt;p&gt;Resolve filtered: 0 Notify filtered: 0&lt;/p&gt;

&lt;p&gt;In kbytes: 4273 In packets: 45042&lt;/p&gt;

&lt;p&gt;Out kbytes: 18014398509409554 Out packets: 18446744073709258616&lt;/p&gt;

&lt;p&gt;Interface: xe-1/1/0.0&lt;/p&gt;

&lt;p&gt;Routing protocol: PIM Mismatch error: 0&lt;/p&gt;

&lt;p&gt;Mismatch: 11786 Mismatch no route: 3&lt;/p&gt;

&lt;p&gt;Kernel resolve: 323210 Routing notify: 0&lt;/p&gt;

&lt;p&gt;Resolve no route: 0 Resolve error: 0&lt;/p&gt;

&lt;p&gt;Resolve filtered: 0 Notify filtered: 0&lt;/p&gt;

&lt;p&gt;In kbytes: 100127811 In packets: 1164651571&lt;/p&gt;

&lt;p&gt;Out kbytes: 10827919 Out packets: 80039321&lt;/p&gt;

&lt;p&gt;&amp;hellip;snip&amp;hellip;&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SRX IPv6 flow based processing</title>
      <link>https://forwardingplane.net/post/srx-ipv6-flow-based-processing/</link>
      <pubDate>Thu, 16 Sep 2010 17:18:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/srx-ipv6-flow-based-processing/</guid>
      <description>&lt;p&gt;One of our plans is to consolidate as many of the egress trafic paths as possible.  To facilitate this, we had to do some things like buy carrier grade equipment.  Enter the &lt;a href=&#34;http://bit.ly/9jrUiG&#34;&gt;SRX 5800&lt;/a&gt;.  No one really does IPS/IDP+Firewall quite like the SRX.  After extensive research and exhaustive hands on testing with quite a bit of equipment, that is what we settled on.  Even the IBM &amp;ldquo;technical evangelist&amp;rdquo; guy that came to talk to us said &amp;ldquo;No one really does it like they do&amp;rdquo; when referring to Juniper and 10G firewall/IPS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.juniper.net/shared/img/products/srx-series/srx5800/lbox-srx5800-left.jpg&#34;&gt;&lt;img src=&#34;http://www.juniper.net/shared/img/products/srx-series/srx5800/lbox-srx5800-left.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lets make one thing clear, IPv6 isn&amp;rsquo;t going away.  We&amp;rsquo;ll all be using in in the next few years, and so, to that end, it needs to work through our network as closely to the way folks are using the current resources as we can make it&amp;hellip;.within the confines of our resources and the limitations of IPv4 and IPv6 respectively.&lt;/p&gt;

&lt;p&gt;To make IPv6 process similarly to IPv4 on the SRX 5800 cluster, we have to enable flow based security processing for it.  To make that happen, you have to do the following things, as documented &lt;a href=&#34;http://bit.ly/9jrUiG&#34;&gt;here&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;set security forwarding-options family inet6 mode flow-based&lt;/p&gt;

&lt;p&gt;Enabling this actually requires a reboot of the boxes, and on a chassis cluster, I&amp;rsquo;ve been told by our Agility JTAC guy (and learned the herd way because I&amp;rsquo;m stubborn like that) that you need to reboot both cluster nodes at the same time (which I find dumb since the purpose of a firewall cluster is almost always redundancy).&lt;/p&gt;

&lt;p&gt;Regardless, I used the recommended method and kicked the boxes after a commit check.&lt;/p&gt;

&lt;p&gt;commit check&lt;/p&gt;

&lt;p&gt;The router then spits out the following information after the commit check:&lt;/p&gt;

&lt;p&gt;node0:&lt;br /&gt;
warning: You have enabled/disabled inet6 flow.&lt;br /&gt;
You must reboot the system for your change to take effect.&lt;br /&gt;
If you have deployed a cluster, be sure to reboot all nodes.&lt;br /&gt;
configuration check succeeds&lt;/p&gt;

&lt;p&gt;node1:&lt;br /&gt;
warning: You have enabled/disabled inet6 flow.&lt;br /&gt;
You must reboot the system for your change to take effect.&lt;br /&gt;
If you have deployed a cluster, be sure to reboot all nodes.&lt;br /&gt;
configuration check succeeds&lt;/p&gt;

&lt;p&gt;From here I like to comment all of my commits, as it&amp;rsquo;s just good practice and it will be logged on your handy &lt;a href=&#34;http://campin.net/syslog-ng/faq.html&#34;&gt;syslog server&lt;/a&gt; for later use or reference.&lt;/p&gt;

&lt;p&gt;commit comment &amp;ldquo;Enabling Flow-Based Processing for IPv6 Traffic&amp;rdquo;&lt;/p&gt;

&lt;p&gt;And from there, a reboot of both nodes (at the same time) is necessary..&lt;/p&gt;

&lt;p&gt;request system reboot&lt;/p&gt;

&lt;p&gt;And then, we wait&amp;hellip;&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;..and wait some more&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;.and then&amp;hellip;..the prompt on the console is back.&lt;/p&gt;

&lt;p&gt;&amp;hellip;&amp;hellip;&amp;hellip;..and after about 6-7 minutes, we have OSPF adjacencies and packets are flowing.  The SPCs take a bit to self test, fully boot and start processing traffic, as I would expect from something processing so many pieces of so much traffic.  &lt;/p&gt;

&lt;p&gt;Now we need to verify that what we did actually worked.  From the SRX, check the security flow status:&lt;/p&gt;

&lt;p&gt;show security flow status&lt;/p&gt;

&lt;p&gt;node0:&lt;br /&gt;
-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;br /&gt;
  Flow forwarding mode:&lt;br /&gt;
    Inet forwarding mode: flow based&lt;br /&gt;
    Inet6 forwarding mode: flow based&lt;br /&gt;
    MPLS forwarding mode: drop&lt;br /&gt;
    ISO forwarding mode: drop&lt;br /&gt;
    Flow trace status&lt;br /&gt;
    Flow tracing status: off&lt;/p&gt;

&lt;p&gt;node1:&lt;br /&gt;
-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&lt;br /&gt;
  Flow forwarding mode:&lt;br /&gt;
    Inet forwarding mode: flow based&lt;br /&gt;
    Inet6 forwarding mode: flow based&lt;br /&gt;
    MPLS forwarding mode: drop&lt;br /&gt;
    ISO forwarding mode: drop&lt;br /&gt;
    Flow trace status&lt;br /&gt;
    Flow tracing status: off&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re looking for:&lt;/p&gt;

&lt;p&gt;    Inet6 forwarding mode: flow based&lt;/p&gt;

&lt;p&gt;This would have said &amp;ldquo;drop&amp;rdquo; before the change. &lt;/p&gt;

&lt;p&gt;We hope to actually swing over our IPv6 traffic soon and start processing it on the SRXs.  I&amp;rsquo;ll post notes as soon as we go forward with that.  &lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Updating SRX IDP signatures</title>
      <link>https://forwardingplane.net/post/updating-srx-idp-signatures/</link>
      <pubDate>Thu, 02 Sep 2010 18:16:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/updating-srx-idp-signatures/</guid>
      <description>&lt;p&gt;*IDP signatures need to be updated often.  On the SRX platform, there is also the notion of a &amp;ldquo;detector&amp;rdquo;.  This also meeds to be updated on a regular basis. it seems.  Over the past few weeks, we&amp;rsquo;ve needed to update the IDP signatures and detector on our SRX 5800 cluster several times, and the results have normally been fine.&lt;br /&gt;
Updating the IDP signatures has never been &lt;strong&gt;that&lt;/strong&gt; big of a problem (see postings about updating stuff on cluster nodes).  But we ran into issues due to the fact that we&amp;rsquo;d recently disabled application id to troubleshoot another problem.  This was basically causing all of our updates to fail on node1 (the secondary node) when using our &lt;a href=&#34;http://www.juniper.net/techpubs/software/junos/junos82/swconfig82-automation/html/op-scripts-overview.html&#34;&gt;op script&lt;/a&gt; to push the updates over (sorry, I can&amp;rsquo;t share it).&lt;/p&gt;

&lt;p&gt;A few things that I like to make sure to run before and after all of my SRX work are the following:&lt;/p&gt;

&lt;p&gt;show chassis cluster status&lt;br /&gt;
show ospf neighbor brief&lt;br /&gt;
show security idp attack table&lt;/p&gt;

&lt;p&gt;If I&amp;rsquo;m doing work on the IDP engine, I also want to see the status of that:&lt;/p&gt;

&lt;p&gt;request security idp security-package download status&lt;br /&gt;
request security idp security-package install status&lt;br /&gt;
show services application-identification counter*&lt;/p&gt;

&lt;p&gt;Anyway, for anyone else running into this odd behavior, to finally update it was a simple matter of deleting app-id before running the updates.&lt;/p&gt;

&lt;p&gt;edit &lt;br /&gt;
delete services application-id&lt;br /&gt;
commit comment &amp;ldquo;delete services application-id&amp;rdquo; &lt;br /&gt;
request security idp security-package download full-update&lt;br /&gt;
request security idp security-package install &lt;br /&gt;
op instlll-idp-updates&lt;/p&gt;

&lt;p&gt;At that point run the status commands request security idp security-package install status. It should yield something like Done;Attack DB update : successful on both nodes.&lt;/p&gt;

&lt;p&gt;*It should be noted that Application ID is now in services, whereas I believe it used to be down in security.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SRX Timeouts and the differences with Netscreen</title>
      <link>https://forwardingplane.net/post/srx-timeouts-and-the-differences-with-netscreen/</link>
      <pubDate>Wed, 01 Sep 2010 04:05:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/srx-timeouts-and-the-differences-with-netscreen/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Juniper SRX Cluster</title>
      <link>https://forwardingplane.net/post/juniper-srx-cluster/</link>
      <pubDate>Wed, 01 Sep 2010 04:04:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/juniper-srx-cluster/</guid>
      <description>&lt;p&gt;I have had the opportunity to work pretty extensively on the Juniper SRX firewall/IDS platform over the last few months.  In doing so, I&amp;rsquo;ve found many &amp;ldquo;gotchas&amp;rdquo; the hard way.&lt;/p&gt;

&lt;p&gt;Here are a few that I&amp;rsquo;ve found so far:&lt;/p&gt;

&lt;p&gt;Clustering is a beast in and of itself.  I think it needs a bit more polishing, but it could be that we just need to refine our design.&lt;/p&gt;

&lt;p&gt;On the SRX 650 it works, but you must be on the right code version (I got it to work under 9.6R2.11 and have left it alone since).&lt;/p&gt;

&lt;p&gt;On the 5800 it works a bit better, but if you want to do active/active, it is very lacking in features.&lt;br /&gt;
We have a unique setup where I am employed, and this usually means we are left a bit on our own as far as configurations (although our Juniper SE is amazing and did a lot to get this all working).&lt;br /&gt;
That said, we have a design that isn&amp;rsquo;t really fully supported on the SRX yet, although I believe it will be as code matures.&lt;br /&gt;
What we&amp;rsquo;ve done is to create a cluster using no reth interfaces.  Instead, we&amp;rsquo;re relying on routing to ake the decisions as far as what traffic goes where.  This was a different approach than we had originally used on the smaller 650 cluster elsewhere in the network.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_t5EEUl7btNU/TH18bIBhtkI/AAAAAAAACn4/wgLW1b-H7Zs/s1600/simplesrx.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/_t5EEUl7btNU/TH18bIBhtkI/AAAAAAAACn4/wgLW1b-H7Zs/s320/simplesrx.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What this means is multi-faceted.&lt;br /&gt;
Standard jtac isn&amp;rsquo;t going to understand what you&amp;rsquo;ve done.  Using advanced jtac is the only way to get things moving in a timely fashion should you encounter issues.  We have agility service on ours, so that makes it even easier.&lt;/p&gt;

&lt;p&gt;IDP doesn&amp;rsquo;t work asymmetrically.  If an traffic cones in on one node and leaves through the other, IDP doesn&amp;rsquo;t apply.  IDP information is not shared through the control link at the time of this writing.&lt;br /&gt;
IDP updates across the cluster don&amp;rsquo;t work well in this way.  My &amp;ldquo;node0&amp;rdquo; node can get the updates but since node0 holds the loopback interface that traffic is sourced from, I cannot get out from node1.  Again, this data is not shared over the control link between the cluster nodes.  There are nasty ways around this with static routes, but I prefer not to use them.  &lt;br /&gt;
The best way I found to get around this is to manually fail over the cluster and install the IDP updates on node1 after node0 has installed them and then to fail back.&lt;br /&gt;
This brings me to the next issue we ran into.  Upgrading the cluster junos software.&lt;br /&gt;
Juniper&amp;rsquo;s recommended method for upgrading is to upgrade each one, then reboot both at the same time.&lt;br /&gt;
to me this is a bit odd, since the reason most folks want a cluster is to avoid things like this.  Well, I can say for experience, if you upgrade the node0 and reboot it without doing the same to node1, all heck breaks loose.  The cluster won&amp;rsquo;t come up cleanly even after the secondary is upgraded and the only way I found to alleviate the off traffic problems we were seeing was to bounce them both at the same time.  Annoying to say the least.&lt;br /&gt;
Oh, if you want to run Active/Active and have it actually work the way we have it set up, you&amp;rsquo;ll need at least JunOS 10.2.R2.11.&lt;/p&gt;

&lt;p&gt;That said, I really do believe that the SRX is the best carrier class security appliance on the market.  Our entire network (which is not insignificant or standard in size or traffic patterns), can run off of one box with 4 SPCs and not even touch the processing power.  They are a powerhouse and have that trademark JunOS cli, and all of the advantages that come with it.&lt;/p&gt;

&lt;p&gt;[[ This is a content summary only. Visit my website for full links, other content, and more! ]]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SRX ALGs</title>
      <link>https://forwardingplane.net/post/srx-algs/</link>
      <pubDate>Wed, 01 Sep 2010 04:04:00 +0000</pubDate>
      
      <guid>https://forwardingplane.net/post/srx-algs/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
